%!PS-Adobe-3.0 EPSF-3.0%%Creator: Adobe Illustrator(R) 8.0%%AI8_CreatorVersion: 14.0.0%%For: (Rene Toneman) ()%%Title: (ESCIENCE_logo_A_cyanblack.eps)%%CreationDate: 4/18/11 5:57 PM%%Canvassize: 16383%%BoundingBox: 0 -27 162 0%%HiResBoundingBox: 0 -26.9302 161.0435 0%%DocumentProcessColors: Cyan Black%%DocumentSuppliedResources: procset Adobe_level2_AI5 1.2 0%%+ procset AGM_Gradient 1.0 0%%+ procset Adobe_ColorImage_AI6 1.3 0%%+ procset Adobe_Illustrator_AI5 1.3 0%%+ procset Adobe_pattern_AI5 1.0 0%%+ procset Adobe_cshow 2.0 8%%+ procset Adobe_shading_AI8 1.0 0%AI5_FileFormat 4.0%AI3_ColorUsage: Color%AI3_IncludePlacedImages%AI7_ImageSettings: 1%%CMYKProcessColor: 1 1 1 1 ([Registration])%%AI6_ColorSeparationSet: 1 1 (AI6 Default Color Separation Set) %%+ Options: 1 16 0 1 1 1 0 0 0 0 1 1 1 18 0 0 0 0 0 0 0 0 -1 -1 0 0 0 0 1 0 0 0 0 1 0 0 0 0 0 1 2 3 4%%+ PPD: 1 21 0 0 60 45 2 2 1 0 0 1 0 0 0 0 0 0 0 0 -1 -1 () %AI3_TemplateBox: 354.5547 -378.9805 354.5547 -378.9805%AI3_TileBox: 309.0547 31.0186 1043.0547 607.0186%AI3_DocumentPreview: Macintosh_ColorPic%AI5_ArtSize: 1190.5503 841.8896%AI5_RulerUnits: 1%AI5_ArtFlags: 0 0 0 1 0 0 1 0 0%AI5_TargetResolution: 800%AI5_NumLayers: 1%AI8_OpenToView: -326.9443 121.5186 2 1624 857 18 1 1 112 335 0 0%AI5_OpenViewLayers: 7%%PageOrigin:291.0552 13.0186%AI7_GridSettings: 72 8 72 8 1 0 0.8 0.8 0.8 0.9 0.9 0.9%AI9_Flatten: 1%AI12_CMSettings: 00.MS%%EndComments%%BeginProlog%%BeginResource: procset Adobe_level2_AI5 1.2 0
%%Title: (Adobe Illustrator (R) Version 5.0 Level 2 Emulation)
%%Version: 1.2 0
%%CreationDate: (04/10/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /Adobe_level2_AI5 26 dict dup begin
	put
	/packedarray where not
	{
		userdict begin
		/packedarray
		{
			array astore readonly
		} bind def
		/setpacking /pop load def
		/currentpacking false def
	 end
		0
	} if
	pop
	userdict /defaultpacking currentpacking put true setpacking
	/initialize
	{
		Adobe_level2_AI5 begin
	} bind def
	/terminate
	{
		currentdict Adobe_level2_AI5 eq
		{
		 end
		} if
	} bind def
	mark
	/setcustomcolor where not
	{
		/findcmykcustomcolor
		{
			(AI8_CMYK_CustomColor)
			6 packedarray
		} bind def
		/findrgbcustomcolor
		{
			(AI8_RGB_CustomColor)
			5 packedarray
		} bind def
		/setcustomcolor
		{
			exch 
			aload pop dup
			(AI8_CMYK_CustomColor) eq
			{
				pop pop
				4
				{
					4 index mul
					4 1 roll
				} repeat
				5 -1 roll pop
				setcmykcolor
			}
			{
				dup (AI8_RGB_CustomColor) eq
				{
					pop pop
					3
					{
						1 exch sub
						3 index mul 
						1 exch sub
						3 1 roll
					} repeat
					4 -1 roll pop
					setrgbcolor
				}
				{
					pop
					4
					{
						4 index mul 4 1 roll
					} repeat
					5 -1 roll pop
					setcmykcolor
				} ifelse
			} ifelse
		}
		def
	} if
	/setAIseparationgray
	{
		false setoverprint
		0 setgray
		/setseparationgray where{
			pop setseparationgray
		}{
			/setcolorspace where{
				pop
				[/Separation (All) /DeviceCMYK {dup dup dup}] setcolorspace
				1 exch sub setcolor
			}{
				setgray
			}ifelse
		}ifelse
	} def
	
	/gt38? mark {version cvr cvx exec} stopped {cleartomark true} {38 gt exch pop} ifelse def
	userdict /deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt put
	userdict /level2?
	systemdict /languagelevel known dup
	{
		pop systemdict /languagelevel get 2 ge
	} if
	put
/level2ScreenFreq
{
 begin
		60
		HalftoneType 1 eq
		{
			pop Frequency
		} if
		HalftoneType 2 eq
		{
			pop GrayFrequency
		} if
		HalftoneType 5 eq
		{
			pop Default level2ScreenFreq
		} if
 end
} bind def
userdict /currentScreenFreq  
	level2? {currenthalftone level2ScreenFreq} {currentscreen pop pop} ifelse put
level2? not
	{
		/setcmykcolor where not
		{
			/setcmykcolor
			{
				exch .11 mul add exch .59 mul add exch .3 mul add
				1 exch sub setgray
			} def
		} if
		/currentcmykcolor where not
		{
			/currentcmykcolor
			{
				0 0 0 1 currentgray sub
			} def
		} if
		/setoverprint where not
		{
			/setoverprint /pop load def
		} if
		/selectfont where not
		{
			/selectfont
			{
				exch findfont exch
				dup type /arraytype eq
				{
					makefont
				}
				{
					scalefont
				} ifelse
				setfont
			} bind def
		} if
		/cshow where not
		{
			/cshow
			{
				[
				0 0 5 -1 roll aload pop
				] cvx bind forall
			} bind def
		} if
	} if
	cleartomark
	/anyColor?
	{
		add add add 0 ne
	} bind def
	/testColor
	{
		gsave
		setcmykcolor currentcmykcolor
		grestore
	} bind def
	/testCMYKColorThrough
	{
		testColor anyColor?
	} bind def
	userdict /composite?
	1 0 0 0 testCMYKColorThrough
	0 1 0 0 testCMYKColorThrough
	0 0 1 0 testCMYKColorThrough
	0 0 0 1 testCMYKColorThrough
	and and and
	put
	composite? not
	{
		userdict begin
		gsave
		/cyan? 1 0 0 0 testCMYKColorThrough def
		/magenta? 0 1 0 0 testCMYKColorThrough def
		/yellow? 0 0 1 0 testCMYKColorThrough def
		/black? 0 0 0 1 testCMYKColorThrough def
		grestore
		/isCMYKSep? cyan? magenta? yellow? black? or or or def
		/customColor? isCMYKSep? not def
	 end
	} if
 end defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient_Sep 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient_Sep 5 dict dup begin put
/AGM_Gradient_Sep_private 100 dict def
/initialize{
	AGM_Gradient_Sep begin
	AGM_Gradient_Sep_private begin
	_compositeJob{
		initializeSinglePassSeps
	}{
		initializeMultiPassSeps
	}ifelse
	initializeSeps
	AGM_Gradient_private begin
		/_fillSD newSpotDict def
		/_rampSD newSpotDict def
		/_nCustomColorSD nd
 end
	AGM_Gradient_Sep_private 
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient_Sep
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop	
 end
}def
/terminate{
	currentdict AGM_Gradient_Sep eq{
	 end
	}if
}def
AGM_Gradient_Sep_private begin
/initializeSeps{
	/currentoverprint { _of } def
	_noImage not _level2PS not and{
		/linealFill{
			currentoverprint{
				0 0 1 1 rectfill
			}{
				mySave
				8 setImageParms
				_color{
					_nCustomColorSD begin
						cyan magenta yellow black
	
						_spotColor{
							spot1/tintImage spot1/tintValue get 1 exch sub makeByte8 put
							spot2/tintImage spot2/tintValue get 1 exch sub makeByte8 put
						}if
				 end
	
					4{
						makeByte8 4 1 roll
					}repeat
					true 4 _nCustomColorSD ncolorimage
				}{
					_nCustomColorSD/black get 1 exch sub makeByte8 
					_nCustomColorSD bwImage
				}ifelse
				myRestore
			}ifelse
		}def
	}if
	/_whiteBytes 1 makeByte8 pt
	 /knockOut{
		_noImage _level2PS or currentoverprint or{
			gsave
			false setoverprint
			1 setgray 
			0 0 1 1 rectfill
			grestore
		}{
			8 setImageParms _whiteBytes /_image load 5 execImage
		}ifelse
	}def
	/newSpotDict{
		11 dict dup begin
			/nSpots 2 def
			/spot1 7 dict def
			/spot2 7 dict def
	 end
	}def
	/initSpotData
	{
	 begin
			/name nd
			/tintImage nd
			/tintValue nd
			/spot_C nd
			/spot_M nd
			/spot_Y nd
			/spot_K nd
	 end
	}def
	/initSpotDict{
	 begin
			/cyanInk nd
			/magentaInk nd
			/yellowInk nd
			/blackInk nd
			/cyan nd
			/magenta nd
			/yellow nd
			/black nd
			spot1 initSpotData
			spot2 initSpotData
	 end
	}def
	/copySpotDict{
		/_dst xp
	 begin
			cyanInk magentaInk yellowInk blackInk
			cyan magenta yellow black
			spot1 spot2
	 end
		_dst begin
			/spot1 spot1 maxlength dict def
			/spot2 spot2 maxlength dict def
			spot2 copy pop
			spot1 copy pop
			/black xd
			/yellow xd
			/magenta xd
			/cyan xd
			/blackInk xd
			/yellowInk xd
			/magentaInk xd
			/cyanInk xd
	 end
	}def
	/setCustomColor
	{
		1 index /Black eq{
			6 1 roll 5 npop
			1 exch sub
			setgray
		}{
			6 1 roll _ccAry1 astore exch
			dup null eq{
				pop 0
			}if
			setcustomcolor
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		
		_colorStyle 0 eq{
			0 0 0
			4 -1 roll
			1 exch sub
			_spotColor{
				/_colorStyle 3 pt
				/Black
				1 index
				1 exch sub
			}if
		}if
		_colorStyle 2 eq{
			3 npop
		}if
		_rampSD _fillSD copySpotDict
		
		_colorStyle 4 eq{ 
			pop
			9 2 roll 3 npop 6 -2 roll
		} if
		
		_colorStyle 3 eq _colorStyle 4 eq or{ 	
				
			_fillSD begin
				/_spot1 spot1 pt
				/_spot2 spot2 pt
		 end
			
			exch dup _spot1/name get eq{
				_spot1 _spot2
			}{
				_spot2 _spot1
			}ifelse
		 begin
			 begin
					/name xd
					1 exch sub /tintValue xd
					4{
						tintValue mul 4 1 roll
					}repeat
					_spotColor not{
						/tintValue null def
					}if
			 end
				/tintValue 0 def
		 end
		}if
		_fillSD nsetcustomcolor
	}def
	/renderCMYK{
		spot1/name get null eq
		spot2/name get null eq and
		dup not{
			pop
			spot1 spotConverted
		}if
		dup not{
			pop
			spot2 spotConverted
		}if
	}def
	/currentInk{
		true
		_inRipSep{
			currentcolorspace 0 get
			dup /DeviceGray eq
			1 index /DeviceCMYK eq or{
				pop
				currentcmykcolor add add add 0 eq{
					pop false
				}if
			}{
				/Separation eq{
					currentcolor 0 eq{
						pop false
					}if
				}if
			}ifelse
		}{
			currentgray 1 eq{
				pop false
			}if
		}ifelse
	}def
	/currentInkN{
	
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		{
			currentInk
		}{
			gsave
			_spot1 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			_spot2 begin
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					currentInk
				}{
					false
				}ifelse
		 end
			grestore
			
			or
		} ifelse
	}def
	/fill_ /fill load def
	/fillOvp{
		currentoverprint{
			_inRipSep{
				currentcolorspace 0 get
				dup /DeviceGray eq
				1 index /DeviceCMYK eq or{
					pop
					currentcmykcolor add add add 0 eq{
						newpath
					}if
				}{
					/Separation eq{
						currentcolor 0 eq{
							newpath
						}if
					}if
				}ifelse
			}{
				currentgray 1 eq{
					newpath
				}if
			}ifelse
		}if
		fill_
	}def
	/fill{
		_nCustomColorSD begin
			/_spot1 spot1 pt
			/_spot2 spot2 pt
			renderCMYK
	 end
		
		{
			fillOvp
		}{
			_spot1 begin
				gsave
				name null ne{
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
				}{
					1 setgray
				}ifelse
				fillOvp 
				grestore
		 end
			_spot2 begin
				name null ne{
					gsave
					true setoverprint
					spot_C spot_M spot_Y spot_K name tintValue setCustomColor
					fillOvp
					grestore
				}if
		 end
			newpath
		}ifelse
	}def
	/expandSpot{
		_spotColor{
			/_len xp
			_rampSD begin
				spot1 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
				spot2 begin
					tintImage null ne{
						tintImage _len expandOne /tintImage xd
					}if
			 end
		 end
		}{
			pop
		}ifelse
	}def
	/rampImage{
		currentoverprint{
			rectImage
		}{
			_enabledSmoothShade{
				fillRamp
			}{
				_color{
					_rampSD begin
						/cyanInk _cyanData 0 ne def
						/magentaInk _magentaData 0 ne def
						/yellowInk _yellowData 0 ne def
						/blackInk _blackData 0 ne def
				 end
					
					_nSamples setImageParms
					_nSamples expandSpot
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 _rampSD ncolorimage
				}{
					_rampSD begin
						/cyanInk false def
						/magentaInk false def
						/yellowInk false def
						/blackInk true def
				 end
					_nSamples setImageParms 
					_blackData _rampSD bwImage
				}ifelse
			}ifelse
		}ifelse
	}def
	/nsetcustomcolor where{
		pop
	}{
		/nsetcustomcolor
		{
			/_nCustomColorSD xp
			_nCustomColorSD begin
				4 copy
				/black xd
				/yellow xd
				/magenta xd
				/cyan xd
				4 copy
				0 ne /blackInk xd
				0 ne /yellowInk xd
				0 ne /magentaInk xd
				0 ne /cyanInk xd
		 end
			setcmykcolor
		}def
	}ifelse
	/nsetcustomcolorend where{
		pop
	}{
		/nsetcustomcolorend
		{
			/_nCustomColorSD null pt
		}def
	}ifelse
}def
/initializeSinglePassSeps{
	/_decodeNorm	[0 1] pt
	/_decodeInvert 	[1 0] pt
	/spotConverted
	{
	 begin
			name null eq{
				false
			}{
				tintValue null eq tintImage null eq and{
					true
				}{
					_inDistiller{
						false
					}{
						false
						currentpagedevice/SeparationColorNames get{name eq or}forall
						not
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/dictImage
	{
		20 dict dup begin
			/Dict xd
			/Decode xd
			/DataSource xd
			/ImageMatrix xd
			/BitsPerComponent xd
			/Height xd
			/Width xd
			/ImageType 1 def
			Dict
	 end
		/_image load 1 execImage
	}def
	/bwImage{
	 begin
			gsave
			currentoverprint{
				blackInk{
					[/Separation /Black /DeviceGray{}] setcolorspace
					_decodeInvert dictImage
				}{
					5 npop
				}ifelse
			}{
				/DeviceGray setcolorspace
				_decodeNorm dictImage
			}ifelse
			grestore
	 end
	}def
	/ncolorimage where{
		pop
	}{
		/ncolorimage{
		 begin
				renderCMYK{
					cyanInk 
					magentaInk and
					yellowInk and
					blackInk and
					not
					currentoverprint 
					and{	
						pop pop
						gsave
						cyanInk{
							8 copy
							[/Separation /Cyan /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}if
						magentaInk{
							8 copy
							[/Separation /Magenta /DeviceGray{}] setcolorspace
							4 -1 roll
							3 npop
							_decodeNorm dictImage
						}if
						yellowInk{
							8 copy
							[/Separation /Yellow /DeviceGray{}] setcolorspace
							4 -2 roll
							3 npop
							_decodeNorm dictImage
						}if
						blackInk{
							4 -3 roll
							[/Separation /Black /DeviceGray{}] setcolorspace
							3 npop
							_decodeNorm dictImage
						}{
							8 npop
						}ifelse
						grestore
					}{
						/_colorimage load 10 execImage
					}ifelse
				}{
					6 npop
					gsave
					spot1 begin
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							4 copy
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							1 setgray fill
						}ifelse
				 end
					spot2 begin
						true setoverprint
						name null ne tintImage null ne and{
							[/Separation name /DeviceGray{}] setcolorspace
							tintImage 
							name /Black eq{
								_decodeNorm
							}{
								_decodeInvert
							}ifelse 
							dictImage
						}{
							4 npop
							1 setgray fill
						}ifelse
				 end
					grestore
				}ifelse
		 end
		}def
	}ifelse
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_renderCMYK not{
			_rampSD begin
				[/DeviceN 
					[
					spot1 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					spot2 begin
						name null ne tintImage null ne and{
							name
						}if
				 end
					]
					_inDistiller {
						/DeviceCMYK [
							spot1 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 1
								}{
									0 0 0 0 0
								}ifelse
						 end
							spot2 begin
								name null ne tintImage null ne and{
									spot_C spot_M spot_Y spot_K 2
								}{
									0 0 0 0 0
								}ifelse
						 end
							5 1 roll 6 -2 roll add
							dup 1 eq {
								pop
								8 /index cvx 1 /exch cvx /sub cvx
								9 1 /roll cvx
							}{
								2 eq {
									8 /index cvx 1 /exch cvx /sub cvx
									10 1 /roll cvx
								}if
							}ifelse
							4 1 /roll cvx 5 -2 /roll cvx
							8 /index cvx /mul cvx /exch cvx 9 /index cvx /mul cvx /add cvx 7 1 /roll cvx
							3 1 /roll cvx 4 -2 /roll cvx
							7 /index cvx /mul cvx /exch cvx 8 /index cvx /mul cvx /add cvx 6 1 /roll cvx
							2 1 /roll cvx 3 -2 /roll cvx
							6 /index cvx /mul cvx /exch cvx 7 /index cvx /mul cvx /add cvx 5 1 /roll cvx
							5 /index cvx /mul cvx /exch cvx 6 /index cvx /mul cvx /add cvx 4 1 /roll cvx
							6 -2 /roll cvx /pop cvx /pop cvx
						] cvx bind
					}{
						/DeviceCMYK {}
					}ifelse
				] setcolorspace
		 end
			/_nColorSpace currentcolorspace pt
		}if
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C0_Space _nColorSpace pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					spot1 begin 
						name null ne{
							tintValue
						}if
				 end
					spot2 begin 
						name null ne{
							tintValue
						}if
				 end
			 end
			] pt
			/_C1_Space _nColorSpace pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/initializeMultiPassSeps{
	/invertXfer{
		[
		{
			1 exch sub
		}/exec load systemdict /currenttransfer get exec /exec load
		] cvx systemdict /settransfer get exec
	}def
	/ccThrough{
		gsave
		1 setCustomColor
		currentcmykcolor
		grestore
		add add add 0 ne
	}def
	/spotConverted
	{
	 begin
			_isCMYKSep not{
				false
			}{
				name null eq{
					false
				}{
					tintValue null eq tintImage null eq and{
						true
					}{
						spot_C spot_M spot_Y spot_K name ccThrough
					}ifelse
				}ifelse
			}ifelse
	 end
	}def
	/spotChannel
	{
		_isCMYKSep{
			pop false
		}{
			/_spotDict xp
				_spotDict/name get null eq{
					false
				}{
					_spotDict/spot_C get
					_spotDict/spot_M get
					_spotDict/spot_Y get
					_spotDict/spot_K get
					_spotDict/name get
					ccThrough 
				}ifelse
		}ifelse
	}def
	/getChannelData
	{
		_isCMYKSep dup{
			pop renderCMYK
		}if
		{
			_blackPlate{
				4 1 roll 3 npop blackInk
			}{
				_yellowPlate{
					4 2 roll 3 npop yellowInk
				}{
					_magentaPlate{
						4 3 roll 3 npop magentaInk
					}{
						3 npop cyanInk
					}ifelse
				}ifelse
			}ifelse
			{
				true /nonZeroData
			}{
				true /zeroData
			}ifelse
		}{
			4 npop
			spot1/name get null ne 
			spot1 spotChannel and{
				spot1/tintImage get dup null ne{
					false /nonZeroData
				}{
					pop false /noData
				}ifelse
			}{
				spot2/name get null ne 
				spot2 spotChannel and{
					spot2/tintImage get dup null ne{
						false /nonZeroData
					}{
						pop false /noData
					}ifelse
				}{
					false /noData
				}ifelse
			}ifelse
		}ifelse
	}def
	/renderChannelData
	{
		/_tmp xp
		_tmp /nonZeroData ne currentoverprint and{
			pop
			_tmp /zeroData eq{pop}if
			4 npop
		}{
			_tmp /nonZeroData eq{
				{
					invertXfer
				}if
					systemdict/image
				get 5 execImage
			}{
				pop
				_tmp /zeroData eq{pop}if
				4 npop
				knockOut
			}ifelse
		}ifelse
	}def
	/bwImage{
	 begin
			gsave
			dup dup dup
			getChannelData
			exch pop false exch
			renderChannelData
			grestore
	 end
	}def
	/ncolorimage{
	 begin
			pop pop
			gsave
			spot2/name get null ne spot2 spotChannel and{
				true setoverprint
			}if
			getChannelData 
			renderChannelData
			grestore
	 end
	}def
	/getRampColorSpace{
		
		/_renderCMYK _rampSD begin renderCMYK end pt
		
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C0 [currentcolor] pt
			/_C0_Space currentcolorspace pt
		}{
			/_C0 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C0_Space /DeviceGray pt
		}ifelse
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		
		_renderCMYK{
			/_C1 [currentcolor] pt
			/_C1_Space currentcolorspace pt
		}{
			/_C1 [
				_nCustomColorSD begin
					0
					spot1 begin 
						name null ne
						tintValue null ne and
						spot1 spotChannel and{
							pop tintValue
						}if
				 end
					spot2 begin 
						name null ne
						tintValue null ne and
						spot2 spotChannel and{
							pop tintValue
						}if
				 end
					1 exch sub
			 end
			] pt
			/_C1_Space /DeviceGray pt
		}ifelse
		
		/_rampColorSpace _C0_Space pt
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginResource: procset AGM_Gradient 1.0 0
%%Title: (AGM Gradient Procset)
%%Version: 1.0 0
%%CreationDate: (4/26/96) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /AGM_Gradient 20 dict dup begin put
/AGM_Gradient_private 201 dict def
/initialize
{
	AGM_Gradient begin
	AGM_Gradient_private begin
	initializeVars
	
	/bd systemdict/mark get def
	/ed
		_level2PS 
		{
			(>>)
		}{
			(counttomark 2 idiv dup dict begin {def} repeat pop currentdict end)
		} ifelse
	cvx def
	
	_level2PS{
		initializeLev2
	}{
		initializeLev1
	}ifelse
	
	queryDevice
	
	initializeRectFill
	initializeShading
	initializeOps
	_producingSeps{
		AGM_Gradient_Sep/initialize get exec
	}{
		initializeComposite
	}ifelse
	_illustrator{
		/f{}def
		/F{}def
		/s{}def
		/S{}def
		/b{}def
		/B{}def
	}if
	/image where{
		/image get /_image xd
	}if
	/colorimage where{
		/colorimage get /_colorimage xd
	}if
	AGM_Gradient_private
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
	AGM_Gradient
	{
		dup xcheck 1 index type /arraytype eq and
		{
			bind
		}if
		pop pop
	}forall
 end
	
	currentdict readonly pop
 end
}def
/initializeAI
{
	pop pop 
	AGM_Gradient/AGM_Gradient_private get /_illustrator true put
	AGM_Gradient/initialize get exec
		AGM_Gradient begin
}def
/unload{
	systemdict/languagelevel known{
		systemdict/languagelevel get 2 ge{
			userdict/AGM_Gradient_Sep 2 copy known{
				undef
			}{
				pop pop
			}ifelse
			userdict/AGM_Gradient 2 copy known{
				undef
			}{
				pop pop
			}ifelse
		}if
	}if
}def
/terminate{
	currentdict AGM_Gradient eq{
	 end
	}if
}def
 
AGM_Gradient_private begin
/initializeVars{
	/_d255 256 array def
	0 1 255{
		_d255 exch dup 255 div put
	}bind for
	/_d255- 256 array def
	0 1 255{
		_d255- exch 1 _d255 2 index get sub put
	}bind for
	/_sSave nd
	/_dUserSpace matrix defaultmatrix def
	/_bUMatrix matrix def
	/_imageMatrix matrix def
	/_saveMatrix matrix def
	/_xm matrix def
	/_ccAry1 5 array def
	/_bbox 4 array pt
	/_level2PS 
		systemdict/languagelevel known dup{
			pop systemdict/languagelevel get 2 ge
		}if
	def
	/_level3PS
		_level2PS systemdict/shfill known and
	def
	currentdict /_illustrator known not{
		/_illustrator false def
	}if
	
}def
/initializeOps
{
	AGM_Gradient begin
	currentdict/Bc known not{
		/Bc{
		
			_renderFlag 2 eq _enabledSmoothShade or{
				6 npop
			}{
				pushBSpace
				_rampIndex 0 eq{
					pop pop
					setCStop
				}if
				linealFill
				popBSpace
			}ifelse
		
		}def
	}if
	
	currentdict/Bg known not{
		/Bg{
			10 npop
			/_gradName xp
			/_renderFlag xp
			/_enabledSmoothShade false pt
		
			_renderFlag 2 ne{
		
				_illustrator{
					_of setoverprint
				}if
		
				/_enabledSmoothShade 
					_level3PS{
						_usingSmoothShade
						_producingSeps not
						currentoverprint not or and
						_noImage not and
					}{
						false
					}ifelse
				pt
				
				_illustrator _eo and _renderFlag 3 eq or{
					eoclip
				}{
					clip
				}ifelse
		
				_gradNames _gradName 2 copy known{
					get
					mark exch aload pop
					/_gradType xp
					1 sub dup /_rampIndex xp
					/_maxRampIndex xp
					mark exch aload pop
					0 0
				}if
				pop pop
				getRampData
			}{
				mark mark
			}ifelse
		}def
	}if
	
	currentdict/Bm known not{
		/Bm{
			_renderFlag 2 ne{
				_gradType 0 eq{
					linealRamp
				}{
					radialGrad
				}ifelse
			}{
				6 npop
			}ifelse
		}def
	}if
	
	currentdict/Bh known not{
		/Bh{
			2 npop
			/_yHi xp
			/_xHi xp
			/_radHilite _xHi 0 ne _yHi 0 ne or pt
		}def
	}if
	
	currentdict/Bn known not{
		/Bn{
			AGM_Gradient_private begin
				dict /_gradNames xp
		 end
		}def
	}if
	
	currentdict/Bd known not{
		/Bd{
			AGM_Gradient begin
			AGM_Gradient_private begin
				/_nColorsBd xp
				/_gradType xp
				/_gradName xp
		}def
	}if
	
	currentdict/BD known not{
		/BD{
				currentdict/_gradNames known not{
					/_gradNames 20 dict def
				}if
				] _nColorsBd _gradType
				]  _gradName exch /_gradNames xput
		 end
		 end
		}def
	}if
	
	currentdict/Bb known not{
		/Bb{
		
			AGM_Gradient/AGM_Gradient_private get /_illustrator get not{
				AGM_Gradient begin
			}if
			AGM_Gradient_private begin
			_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get begin
			}if
			mySave
		}def
	}if
	
	currentdict/BB known not{
		/BB{
		
			/_tmp xp
			cleartomark cleartomark
		
			_tmp dup
			_renderFlag
		
			myRestore
		
			_producingSeps{
			 end
			}if
		
			_illustrator dup
		 end
			not {
			 end
			}if
		
			{
				2 ne exch 0 gt and{
					2 eq{
						s
					}{
						S
					}ifelse
				}{
					pop newpath
				}ifelse
			}{
				pop newpath
			}ifelse
		
		
		}def
	}if
	
	currentdict/Xm known not{
		/Xm{
			_xm astore pop
		}def
	}if
	
 end
}def
/queryDevice{
	/_inDistiller
		systemdict /currentdistillerparams known
	def
	/_inRipSep
		_level2PS{
			currentpagedevice/Separations 2 copy known{
				get
			}{
				pop pop false
			}ifelse
		}{
			false
		}ifelse
		_inDistiller or
	def
	/_noImage /lv1Fix where{
		pop lv1Fix
	}{
		false
	}ifelse
	def
	/_useShells where{
		/_useShells get /_usingShells xp
	}{
		/_usingShells false def
	}ifelse
	
	/_useSmoothShade where{
		pop
	}{
		/_useSmoothShade false def 
	}ifelse
	/_forceToCMYK where{
		pop
	}{
		/_forceToCMYK false def 
	}ifelse
	/_cyanPlate 1 0 0 0 testCMYKColorThrough def
	/_magentaPlate 0 1 0 0 testCMYKColorThrough def
	/_yellowPlate 0 0 1 0 testCMYKColorThrough def
	/_blackPlate 0 0 0 1 testCMYKColorThrough def
	/_compositeJob
		_cyanPlate _magentaPlate and _yellowPlate and _blackPlate and
	def
	/_isCMYKSep
		_cyanPlate _magentaPlate or _yellowPlate or _blackPlate or
	def
	/_compositeSpotDevice where{
		pop
	}{
		/_compositeSpotDevice _compositeJob not _inRipSep or{
			1
		}{
			0
		}ifelse
		def
	}ifelse
	/_producingSeps _compositeSpotDevice 0 ne def
	/_deviceDPI 72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt def
	/_dpiThreshold where{
		pop
	}{
		/_dpiThreshold 600 def
	}ifelse
	/_screenFreqThreshold where{
		pop
	}{
		/_screenFreqThreshold 150 def
	}ifelse
	/_contoneDevice where{
		pop
	}{
		/_contoneDevice false def
	}ifelse
	/_subSampleOK 
		_deviceDPI _dpiThreshold le 
		currentScreenFreq _screenFreqThreshold le and 
		_contoneDevice not and 
	def
}def
/initializeRectFill{
	/rectfill where dup{
		exch pop not _producingSeps or
	}{
		not
	}ifelse
	{
		/rectfill{
			gsave
			newpath
			4 2 roll moveto
			1 index 0 rlineto
			0 1 index rlineto
			1 index neg 0 rlineto
			pop pop
			closepath
			fill
			grestore
		}def
	}if
}def
/initializeLev1{
	/currentScreenFreq{
		currentscreen pop pop
	}def
	/_byte 1 string def
	/colorimage where{
		pop
	}{
		/colorimage{
			pop pop
			/_blackTmp xp
			/_yellowTmp xp
			/_magentaTmp xp
			/_cyanTmp xp
			/_cnt 0 pt
			[
			_byte dup 0
			_cyanTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .3 /mul cvx
			_magentaTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .59 /mul cvx
			_yellowTmp
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx .11 /mul cvx
			_blackTmp 
				/_cnt cvx /get cvx _d255 /exch cvx /get cvx
			/add cvx /add cvx /add cvx 1 /exch cvx /sub cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/dup cvx 1 /gt cvx{
				pop 1
			}/if cvx
			255 /mul cvx /cvi cvx
			256 /mod cvx
			/dup cvx 0 /lt cvx{
				pop 0
			}/if cvx
			/put cvx
			/_cnt dup cvx 1 /add cvx /pt cvx
			] cvx
			bind
			/_image load 5 execImage
		}def
	}ifelse
}def
/initializeLev2{
	/level2ScreenFreq{
	 begin
		60
		HalftoneType 1 eq{
			pop Frequency
		}if
		HalftoneType 2 eq{
			pop GrayFrequency
		}if
		HalftoneType 5 eq{
			pop Default level2ScreenFreq
		}if
		 end
	}def
	/currentScreenFreq{
		currenthalftone level2ScreenFreq
	}def
}def
/initializeShading{
	_useSmoothShade _level3PS and{
		/_usingSmoothShade true pt
		initializeLev3_Ops
	}{
		/_usingSmoothShade false pt
	}ifelse
}def
/initializeLev3_Ops
{
	/initShFill{
		/_index _gradType 0 eq {0}{_maxRampIndex 1 sub} ifelse pt
		/_rampFuncsArray _maxRampIndex array pt
		/_boundsArray _maxRampIndex 1 sub array pt
		/_encodeArray _maxRampIndex 2 mul array pt
		/_beginCoord _rampPoint pt
		/_colorSpace null pt
		/_firstFill _rampIndex _maxRampIndex eq pt
		/_lastFill false pt
	}def
	/linealShFill{
		popBSpace
		_xm aload pop pushBSpace
		
		/_size _index 1 add pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray 0 _size getinterval pt
			/_boundsArray _boundsArray 0 _size 1 sub getinterval pt
			/_encodeArray _encodeArray 0 _size 2 mul getinterval pt
		}if
		
		bd
			/ShadingType 2
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_firstFill _lastFill]
			/Domain [0 1] 
			/Coords [_beginCoord 0 _endCoord 0]
		ed
		shfill
	}def
	
	/radialShFill{
		/_size _maxRampIndex _index sub pt
		_size _maxRampIndex lt {
			/_rampFuncsArray _rampFuncsArray _index _size getinterval pt
			/_boundsArray _boundsArray _index _size 1 sub getinterval pt
			/_encodeArray _encodeArray _index 2 mul _size 2 mul getinterval pt
		}if
		
		/_rampLen _beginCoord _endCoord sub pt
		bd
			/ShadingType 3
			/ColorSpace _colorSpace
			_rgbInCMYK{
				/Function [
					_cData sampFunc
					_mData sampFunc
					_yData sampFunc
					_kData sampFunc
				]
			}{
				/Function 
					bd
						/FunctionType 3
						/Domain [0 1]
						/Functions _rampFuncsArray
						/Bounds _boundsArray
						/Encode _encodeArray
					ed
			}ifelse
			/Extend [_lastFill _firstFill]
			/Domain [0 1] 
			/Coords [_xHi _rampLen mul _yHi _rampLen mul _endCoord 0 0 _beginCoord] 
		ed
		shfill
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
	}def
	
	%
	/sampFunc{
		/_tmp exch pt
		bd
			_tmp length 1 eq {
				_tmp 0 get
				/_tmp 2 string pt
				dup _tmp 0 3 -1 roll put
				_tmp 1 3 -1 roll put
			}if
			/FunctionType 0
			/Order 1
			/Size [_tmp length]
			/Domain [0 1]
			/BitsPerSample 8
			/DataSource _tmp
			/Range [0 1]
		ed
	}def
	
	/fillRamp{
	
	
		/_invert _midPoint 0.5 lt pt
		_rampIndex _maxRampIndex eq {
			initShFill
		}if
		
		getRampColorSpace
		
		_colorSpace null eq{
			/_colorSpace _rampColorSpace pt
		}{
			_colorSpace _rampColorSpace ne _rgbInCMYK or{
				/_index _index 1 
				_gradType 0 eq{
					sub pt
					linealShFill
				}{
					add pt
					radialShFill
				}ifelse
				initShFill
				/_colorSpace _rampColorSpace pt
			} if
		}ifelse
		/_endCoord _endPoint pt	
		/_rgbInCMYK false pt
		_producingSeps _forceToCMYK or _rgbRamp and {
			_spotColor{
				_renderCMYK
			}{
				_isCMYKSep
			}ifelse
		}{
			false
		}ifelse
		{
			_compositeJob{
				/_rgbInCMYK true pt
				_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
				dup length string copy /_kData exch pt
				dup length string copy /_yData exch pt
				dup length string copy /_mData exch pt
				dup length string copy /_cData exch pt
			}{
				_rampFuncsArray _index
					_cyanPlate{_cyanData}if
						_magentaPlate{_magentaData}if
						_yellowPlate{_yellowData}if
						_blackPlate{_blackData}if
					_nSamples expandOne
					sampFunc
					dup begin /Decode [1 0] def end
				put
				/_invert false pt
			}ifelse
		}{
			_rampFuncsArray _index
				bd
					/FunctionType 2
					/Domain [0 1]
					/N 0.5 log _invert{1 _midPoint sub}{_midPoint}ifelse log div
					_gradType 0 eq{
						_invert{/C1}{/C0}ifelse _C0
						_invert{/C0}{/C1}ifelse _C1
					}{
						_invert{/C0}{/C1}ifelse _C1
						_invert{/C1}{/C0}ifelse _C0
					}ifelse
				ed
			put
		}ifelse
		
		_rampIndex 1 ne{
			_boundsArray _index _gradType 1 eq{1 sub}if _endCoord put
		} if
		
		0 1 _invert {exch}if
		_encodeArray _index 2 mul 1 add 3 -1 roll put
		_encodeArray _index 2 mul 3 -1 roll put
		_rampIndex 1 eq {
			/_lastFill true pt
			_gradType 0 eq{
				linealShFill
			}{
				radialShFill
			}ifelse
		}if
		/_index _index 1 
		_gradType 0 eq{
			add pt
		}{
			sub pt
		}ifelse
	}def
}def
/initializeComposite{
	/bwImage{
		pop /_image load 5 execImage 
	}def
	/rampImage{
		_enabledSmoothShade{
			fillRamp
		}{
			_color{
				_nSamples setImageParms
	
				
				_rgbRamp _forceToCMYK not and{
					_redData _greenData _blueData _nSamples 3 expandColor
					true 3 null ncolorimage
				}{
					_cyanData _magentaData _yellowData _blackData _nSamples 4 expandColor
					true 4 null ncolorimage
				}ifelse
			}{
				_nSamples setImageParms _blackData null bwImage
			}ifelse
		}ifelse
	}def
	/setCStop{
		/_colorStyle exch pt
		_colorStyle 0 eq{
			1 exch sub
			0 0 0
			4 -1 roll
		}if
		
		_colorStyle 2 eq{
			_forceToCMYK{
				3 npop setcmykcolor
			}{
				setrgbcolor 4 npop
			}ifelse
		}if
		
		_colorStyle 3 eq{
			1 exch sub /_tmp xp
			pop
			4{
				_tmp mul 4 1 roll
			}repeat
		}if
		
		_colorStyle 4 eq{
			_forceToCMYK{
				6 npop setcmykcolor
			}{
				3 -1 roll pop pop
				1 exch sub /_tmp xp
				3{
					1 exch sub _tmp mul 1 exch sub 3 1 roll
				}repeat
				setrgbcolor 
				4 npop
			}ifelse
		}if
		_colorStyle 2 ne _colorStyle 4 ne and{
			null nsetcustomcolor
		}if
	}def
	/nsetcustomcolor
	{
		pop setcmykcolor
	}def
	/nsetcustomcolorend
	{
	}def
	/ncolorimage{
		pop 
		/_colorimage load 10 execImage
	}def
	_noImage not _level2PS not and{
		/linealFill{
			8 setImageParms
			_color{
				currentcmykcolor
				4{
					makeByte8 4 1 roll
				}repeat
				true 4 null ncolorimage
			}{
				currentgray makeByte8 null bwImage
			}ifelse
		}def
	}if
	/getRampColorSpace{
		_nSamples 1 gt{ 
			/_ndx 0 pt
			[blendColor] cvx exec
		}if
		/_C0 [currentcolor] pt
		/_C0_Space currentcolorspace pt
		
		_nSamples 1 gt{ 
			/_ndx _nSamples 1 sub pt
			[blendColor] cvx exec
		}if
		/_C1 [currentcolor] pt
		/_C1_Space currentcolorspace pt
		
		/_rampColorSpace _C0_Space pt
		
		_spotColor{
			nsetcustomcolorend
		}if
	}def
}def
/npop{
	{pop}repeat
}def
/xd{
	exch def
}def
/nd{
	null def
}def
/pt{
	AGM_Gradient_private 3 1 roll put
}def
/xp{
	exch pt
}def
/xput{
	dup load dup length exch maxlength eq{
		dup dup load dup
		length 2 mul dict copy def
	}if
	load begin
		def
  end
}def
/mySave{
	save /_sSave xp
}def
/myRestore{
	_sSave type /savetype eq{
		_sSave restore
	}if
}def
/gMark{
	counttomark 2 add -1 roll
}def
/execImage{
	/_tmp xp
	{
		exec
	}stopped{
		$error /errorname get /undefinedresult ne{
			stop
		}{
			_tmp npop
		}ifelse
	}if
}def
/pushBSpace{
	newpath gsave
	_bUMatrix astore concat 
}def
/popBSpace{
	grestore
}def
/makeByte8{
	/_tmp 0 pt
	255 mul cvi
	8 string 8{
		dup _tmp 3 index put 
		/_tmp _tmp 1 add pt
	}repeat
	exch pop
}def
/setImageParms{
	1 8 2 index 0 0 1 0 0 _imageMatrix astore
}def
/linealFill{
	0 0 1 1 rectfill
}def
/testCMYKColorThrough{
	gsave
	setcmykcolor currentcmykcolor
	grestore
	add add add 0 ne
}def
/expandOne	{
	/_tmp xp
	dup type /stringtype ne{
		_tmp string
		exch
		dup 0 ne{
			255 mul cvi
			0 1 _tmp 1 sub{
				3 copy
				exch put pop
			}for
		}if
		pop
	}if
}def
/expandColor{
	/_channels xp
	/_len xp
	_channels{
		_len expandOne _channels 1 roll
	}repeat
}def
/blendColor{
	
	_color{
		_rgbRamp _producingSeps not and _forceToCMYK not and{
			_redData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_greenData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blueData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			/setrgbcolor cvx
		}{
			_cyanData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_magentaData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_yellowData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
			_blackData dup type /stringtype eq{
				/_ndx cvx /get cvx _d255 /exch cvx /get cvx
			}if
	
			_spotColor{
				_rampSD begin
					/_rampSD cvx /begin cvx
	
					spot1 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot1 cvx /tintValue 3 -1 /roll cvx /put cvx
	
					spot2 begin
						tintImage dup type /stringtype eq{
							/_ndx cvx /get cvx _d255- /exch cvx /get cvx
						}{
							dup null ne{
								name type /nametype ne{
									1 exch sub
								}if
							}if
						}ifelse
				 end
					/spot2 cvx /tintValue 3 -1 /roll cvx /put cvx
					/end cvx
			 end
				/_rampSD cvx
				/nsetcustomcolor cvx
			}{
				/setcmykcolor cvx
			}ifelse
		}ifelse
	}{
		_blackData dup type /stringtype eq{
			/_ndx cvx /get cvx _d255 /exch cvx /get cvx
		}if
		
		_enabledSmoothShade{
			1 /exch cvx /sub cvx 0 0 0 4 -1 /roll cvx /setcmykcolor cvx
		}{
			 /setgray cvx
		}ifelse
	}ifelse
}def
/useRectImage{
	_subSampleOK _enabledSmoothShade not and{
		{
			mark
			0 1 dtransform atan cvi 90 mod 0 eq
			1 0 dtransform atan cvi 90 mod 0 eq
		} stopped
		{
			cleartomark
			false
		}
		{
			and exch pop
		} ifelse
	}{
		false
	}ifelse
}def
/linealImage{
	_noImage{
		rectImage
	}{
		_producingSeps{
				AGM_Gradient_Sep/AGM_Gradient_Sep_private get
				/rampImage get exec
		}{
			useRectImage{
				rectImage
			}{
				rampImage
			}ifelse
		}ifelse
	}ifelse
}def
/linealRamp{
	pushBSpace
	_ramp{
		linealImage
	}{
		linealFill
	}ifelse
	popBSpace
	/_rampIndex _rampIndex 1 sub pt
	_rampIndex 0 gt{
		getRampData
	}if
}def
/radialGrad{
	/_usingShells currentoverprint _producingSeps and _usingShells or pt
	/_firstShell true pt
	_enabledSmoothShade not{
		currentoverprint _producingSeps and{
			
			newpath
			clippath pathbbox 
			1 add 4 1 roll
			1 add 4 1 roll
			1 sub 4 1 roll
			1 sub 4 1 roll
			_bbox astore pop
			
			newpath
			_bbox 0 get _bbox 1 get moveto
			_bbox 2 get _bbox 1 get lineto
			_bbox 2 get _bbox 3 get lineto
			_bbox 0 get _bbox 3 get lineto
			closepath
			6 copy
			gsave _bUMatrix astore concat
			1 0 moveto 0 0 1 0 360 arc closepath
			eoclip fill
			popBSpace
		}{
			fill
		}ifelse
	}if
	pushBSpace
	
	_radHilite{
		_xHi _yHi _bUMatrix idtransform /_yHi xp /_xHi xp
		_rampPoint 1 lt{
			1 _rampPoint sub dup _xHi mul exch _yHi mul translate
		}if
	}if
	_rampIndex{
		radialRamp
		/_rampIndex _rampIndex 1 sub pt
		_rampIndex 0 gt{
			getRampData
		}if
	}repeat
	
	popBSpace
	
}def
/getNSamples{
	0 exch
	{
		dup type /stringtype eq{
			length exch pop exit
		}if
		pop
	}forall
	dup 0 eq{
		pop 1
	}if
}def
/getRampData{
	/_rampType gMark pt
	/_color _rampType 0 gt pt
	/_ccRGB _rampType 5 eq _rampType 6 eq or pt
	/_rgbRamp _rampType 4 eq _ccRGB or pt
	/_ccProcess _rampType 2 eq _rampType 3 eq or pt
	_producingSeps{
		_rampSD initSpotDict
		/_spotColor _ccProcess _ccRGB or pt
	}{
		/_spotColor false pt
	}ifelse
	/_ramp true pt
	100 div /_rampPoint xp
	100 div /_midPoint xp
	
	dup /_colorStyle xp
	_colorStyle 0 eq{ 
		2
	}{
		_colorStyle 1 eq{ 
			5
		}{
			_colorStyle 2 eq{
				8
			}{
				_colorStyle 3 eq{
					_producingSeps{
						_rampSD /spot1 get begin
							/name 3 index def
							/spot_K 4 index def
							/spot_Y 5 index def
							/spot_M 6 index def
							/spot_C 7 index def
					 end
					}if
					7
				}{
					_producingSeps{
						_rampSD/spot1 get begin
							/name 4 index def
							/spot_K 8 index def
							/spot_Y 9 index def
							/spot_M 10 index def
							/spot_C 11 index def
					 end
					}if
					11
				} ifelse
			}ifelse
		}ifelse
	}ifelse
	/_tmp xp
	_tmp index 100 div /_endPoint xp
	
	_gradType 1 eq{
		_tmp 1 add index 100 div /_midPoint xp
	}if
	
	_producingSeps{
		_tmp 2 add index /_nextColorStyle xp
		_nextColorStyle 3 eq{
			/_tmp _tmp 4 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 2 add index def
					/spot_Y _tmp 3 add index def
					/spot_M _tmp 4 add index def
					/spot_C _tmp 5 add index def
			 end
			}{
				pop
			}ifelse
		}if
		_nextColorStyle 4 eq{
			/_tmp _tmp 5 add pt
			_tmp index dup
			_rampSD/spot1 get /name get ne{
				_rampSD /spot2 get begin
					/name xd
					/spot_K _tmp 5 add index def
					/spot_Y _tmp 6 add index def
					/spot_M _tmp 7 add index def
					/spot_C _tmp 8 add index def
			 end
			}{
				pop
			}ifelse
		}if
	}if
	_rampType 3 eq _rampType 6 eq or{
		/_tint2Data gMark pt
	}if
	_ccProcess _ccRGB or{
		/_tint1Data gMark pt
	}if
	_rgbRamp{
		/_blueData gMark pt
		/_greenData gMark pt
		/_redData gMark pt
	}if
	
	_producingSeps{
		_ccProcess _ccRGB or{
			_rampType 3 eq _rampType 6 eq or{
				_rampSD /spot2 get begin
					/tintImage _gradType 0 eq{
						_tint2Data
					}{
						_tint1Data
					}ifelse
					def
					name null eq{
						/name /Black def
					}if
			 end
			}if
			_rampSD /spot1 get begin
				/tintImage _gradType 0 eq _rampType 2 eq or _rampType 5 eq or{
					_tint1Data
				}{
					_tint2Data
				}ifelse
				def
				_rampType 2 eq _rampType 5 eq or{
					name null eq{
						/name _rampSD/spot2 get /name get def
						/spot_C _rampSD/spot2 get /spot_C get def
						/spot_M _rampSD/spot2 get /spot_M get def
						/spot_Y _rampSD/spot2 get /spot_Y get def
						/spot_K _rampSD/spot2 get /spot_K get def
						_rampSD/spot2 get /name null put
					}if
				}{
					name null eq{
						/name /Black def
					}if
				}ifelse
		 end
		}if
	}if
	/_blackData gMark pt
	_rampType 0 gt{
		counttomark 4 add -3 roll
		/_yellowData xp
		/_magentaData xp
		/_cyanData xp
	}if
	_ramp{
		/_nSamples
			[
			_rampType 0 eq {_blackData}if
			_rampType 1 eq {_cyanData _magentaData _yellowData _blackData}if
			_rampType 2 eq {_cyanData _magentaData _yellowData _blackData _tint1Data}if
			_rampType 3 eq {_cyanData _magentaData _yellowData _blackData _tint1Data _tint2Data}if
			_rampType 4 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData}if
			_rampType 5 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data}if
			_rampType 6 eq {_cyanData _magentaData _yellowData _blackData _redData _greenData _blueData _tint1Data _tint2Data}if
			] getNSamples pt
		_enabledSmoothShade not {/_ramp _nSamples 1 gt pt} if
	} if
	
	setCStop
}def
/rectImage{
	gsave
	/_sInc 1 pt
	/_bInc 1 _nSamples div pt
	/_nSubSamples _nSamples pt
	/_optimize false pt
		
	_subSampleOK{
		/_uRampLen 1 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt pt
		/_pChange _uRampLen 0 eq{0}{_nSamples _uRampLen div}ifelse pt
		
		_pChange .5 gt dup /_optimize xp{
			/_nSubSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc 1 _nSubSamples div pt
			/_sInc _nSamples 1 sub _nSubSamples 1 sub div pt
		}if
	}if
	0
	_nSubSamples
	[
	/dup cvx
	_optimize {
		/round cvx /cvi cvx
	} if
	/_ndx /exch cvx /pt cvx
	blendColor
	0 0 _bInc 1 /rectfill cvx
	_bInc 0 /translate cvx
	_sInc /add cvx
	] cvx
	bind
	repeat
	pop
	_spotColor{
		nsetcustomcolorend
	}if
	grestore
}def
/radialInit{
	/_nRadSamples _nSamples dup 0 eq{pop 1}if pt
	/_sInc -1 pt
	/_rampLen _rampPoint _endPoint sub pt
	/_bInc _rampLen _nSamples div neg pt
	/_optimize false pt
	_subSampleOK{
		/_uRampLen
			_rampLen 0 dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			0 _rampLen dtransform _dUserSpace idtransform dup mul exch dup mul add sqrt
			2 copy lt{
				exch
			}if pop
		pt
		/_pChange 
			_uRampLen 0 eq{
				0
			}{
				_nSamples _uRampLen div
			}ifelse
		pt
		_pChange .5 gt dup /_optimize xp{
			/_nRadSamples _uRampLen 2 div round cvi dup 1 le{pop 2}if pt
			/_bInc _rampLen _nRadSamples div neg pt
			/_sInc _nSamples 1 sub _nRadSamples 1 sub div neg pt
		}if
	}if
	_radHilite{
		/_xBCInc _xHi _rampLen mul _nRadSamples div pt
		/_yBCInc _yHi _rampLen mul _nRadSamples div pt
	}if
}def
/radialRamp{
	_enabledSmoothShade{
		fillRamp
	}{
		/_saveMatrix _saveMatrix currentmatrix def
		
		radialInit
	
		%
		%
		true
		_producingSeps _rgbRamp not and{
			_nSamples 1 gt{ 
				pop
				/_ndx 0 pt
				[blendColor] cvx exec
				currentInkN
				/_ndx _nSamples 1 sub pt
				[blendColor] cvx exec
				currentInkN
				or
			}if
		}if
		{
			_rampPoint
		
			_nSamples 1 sub
		
			_nRadSamples 
			[
				/dup cvx
		
				_optimize{
					/round cvx /cvi cvx
				}if
		
				/_ndx /exch cvx /pt cvx
				
				_usingShells{
					/_firstShell cvx{
						/_firstShell false pt
					}{
						0 0 3 index 360 0 arcn fill
					}/ifelse cvx
				}if
		
				blendColor
		
				_usingShells{
					0 0 3 /index cvx 0 360 /arc cvx 
				}{
					0 0 3 /index cvx 0 360 /arc cvx /fill cvx
				}ifelse
		
				/exch cvx _bInc /add cvx /exch cvx
		
				_sInc /add cvx
		
				_radHilite{
					_xBCInc _yBCInc /translate cvx
				}if
			] cvx bind
			repeat
		
			pop pop
		}{
			_usingShells{
				0 0 _rampPoint 360 0 arcn fill
			}if
		}ifelse
	
		_saveMatrix setmatrix
		
		_radHilite{
			_xHi _rampLen mul _yHi _rampLen mul translate
		}if
		
		_usingShells _rampIndex 1 eq and{
			fill
		}if
	
		_spotColor{
			nsetcustomcolorend
		}if
	}ifelse
}def
end
end
defaultpacking setpacking
%%EndResource
%%BeginProcSet: Adobe_ColorImage_AI6 1.3 0
userdict /Adobe_ColorImage_AI6 known not
{
	userdict /Adobe_ColorImage_AI6 53 dict put 
} if
userdict /Adobe_ColorImage_AI6 get begin
/initialize { 
	Adobe_ColorImage_AI6 begin
	Adobe_ColorImage_AI6 {
		dup type /arraytype eq {
			dup xcheck {
				bind
			} if
		} if
		pop pop
	} forall
} def
/terminate { end } def
currentdict /Adobe_ColorImage_AI6_Vars known not {
	/Adobe_ColorImage_AI6_Vars 41 dict def
} if
Adobe_ColorImage_AI6_Vars begin
	/plateindex -1 def
	/_newproc null def
	/_proc1 null def
	/_proc2 null def
	/sourcearray 4 array def
	/_ptispace null def
	/_ptiname null def
	/_pti0 0 def
	/_pti1 0 def
	/_ptiproc null def
	/_ptiscale 0 def
	/_pticomps 0 def
	/_ptibuf 0 string def
	/_gtigray 0 def
	/_cticmyk null def
	/_rtirgb null def
	/XIEnable true def
	/XIType 0 def
	/XIEncoding 0 def
	/XICompression 0 def
	/XIChannelCount 0 def
	/XIBitsPerPixel 0 def
	/XIImageHeight 0 def
	/XIImageWidth 0 def
	/XIImageMatrix null def
	/XIRowBytes 0 def
	/XIFile null def
	/XIBuffer1 null def
	/XIBuffer2 null def
	/XIBuffer3 null def
	/XIDataProc null def
	/XIColorSpace /DeviceGray def
	/XIColorValues 0 def
	/XIPlateList false def
end
/ci6colorimage /colorimage where {/colorimage get}{null} ifelse def
/ci6image systemdict /image get def
/ci6curtransfer systemdict /currenttransfer get def
/ci6curoverprint /currentoverprint where {/currentoverprint get}{{_of}} ifelse def
/ci6foureq {
	4 index ne {
		pop pop pop false
	}{
		4 index ne {
			pop pop false
		}{
			4 index ne {
				pop false
			}{
				4 index eq
			} ifelse
		} ifelse
	} ifelse
} def
/ci6testplate {
	Adobe_ColorImage_AI6_Vars begin
		/plateindex -1 def
		/setcmykcolor where {
			pop
			gsave
			1 0 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 1 0 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 1 0 setcmykcolor systemdict /currentgray get exec 1 exch sub
			0 0 0 1 setcmykcolor systemdict /currentgray get exec 1 exch sub
			grestore
			1 0 0 0 ci6foureq { 
				/plateindex 0 def
			}{
				0 1 0 0 ci6foureq { 
					/plateindex 1 def
				}{
					0 0 1 0 ci6foureq {
						/plateindex 2 def
					}{
						0 0 0 1 ci6foureq { 
							/plateindex 3 def
						}{
							0 0 0 0 ci6foureq {
								/plateindex 5 def
							} if
						} ifelse
					} ifelse
				} ifelse
			} ifelse
			pop pop pop pop
		} if
		plateindex
 end
} def
/ci6concatprocs {
	/packedarray where {
		pop dup type /packedarraytype eq 2 index type
		/packedarraytype eq or
	}{
		false
	} ifelse
	{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		_proc1 aload pop
		_proc2 aload pop
		_proc1 length
		_proc2 length add
		packedarray cvx
	}{
		/_proc2 exch cvlit def
		/_proc1 exch cvlit def
		/_newproc _proc1 length _proc2 length add array def
		_newproc 0 _proc1 putinterval
		_newproc _proc1 length _proc2 putinterval
		_newproc cvx
	} ifelse
} def
/ci6istint {
	type /arraytype eq 
} def
/ci6isspot {
	dup type /arraytype eq {
		dup length 1 sub get /Separation eq
	}{
		pop false
	} ifelse
} def
/ci6spotname {
	dup ci6isspot {dup length 2 sub get}{pop ()} ifelse
} def
/ci6altspace {
	aload pop pop pop ci6colormake
} def
/ci6numcomps {
	dup /DeviceGray eq {
		pop 1
	}{
		dup /DeviceRGB eq {
			pop 3
		}{
			/DeviceCMYK eq {
				4
			}{
				1
			} ifelse
		} ifelse
	} ifelse
} def
/ci6marksplate {
	dup /DeviceGray eq {
		pop plateindex 3 eq
	}{
		dup /DeviceRGB eq {
			pop plateindex 5 ne
		}{
			dup /DeviceCMYK eq {
				pop plateindex 5 ne
			}{
				dup ci6isspot {
					/findcmykcustomcolor where {
						pop
						dup length 2 sub get
						0.1 0.1 0.1 0.1 5 -1 roll
						findcmykcustomcolor 1 setcustomcolor
						systemdict /currentgray get exec
						1 ne
					}{
						pop plateindex 5 ne
					} ifelse
				}{
					pop plateindex 5 ne
				} ifelse
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colormake {
	dup ci6numcomps
	exch 1 index 2 add 1 roll
	dup 1 eq {pop}{array astore} ifelse
	exch
} def
/ci6colorexpand {
	dup ci6spotname exch
	dup ci6istint {
		ci6altspace
		exch 4 1 roll
	}{
		1 3 1 roll
	} ifelse
} def
/ci6colortint {
	dup /DeviceGray eq {
		3 1 roll 1 exch sub mul 1 exch sub exch
	}{
		dup /DeviceRGB eq {
			3 1 roll {1 exch sub 1 index mul 1 exch sub exch} forall pop 3 array astore exch
		}{
			dup /DeviceCMYK eq {
				3 1 roll {1 index mul exch} forall pop 4 array astore exch
			}{
				3 1 roll mul exch
			} ifelse
		} ifelse
	} ifelse
} def
/ci6colortocmyk {
	dup /DeviceGray eq {
		pop 1 exch sub 0 0 0 4 -1 roll 4 array astore
	}{
		dup /DeviceRGB eq {
			pop aload pop _rgbtocmyk 4 array astore
		}{
			dup /DeviceCMYK eq {
				pop
			}{
				ci6altspace ci6colortint ci6colortocmyk
			} ifelse
		} ifelse
	} ifelse
} def
/ci6makeimagedict {
	7 dict begin
		/ImageType 1 def
		/Decode exch def
		/DataSource exch def
		/ImageMatrix exch def
		/BitsPerComponent exch def
		/Height exch def
		/Width exch def
	currentdict end
} def
/ci6stringinvert {
	0 1 2 index length 1 sub {
		dup 2 index exch get 255 exch sub 2 index 3 1 roll put
	} for
} def
/ci6stringknockout {
	0 1 2 index length 1 sub {
		255 2 index 3 1 roll put
	} for
} def
/ci6stringapply {
	0 1 4 index length 1 sub {
		dup
		4 index exch get
		3 index 3 1 roll
		3 index exec
	} for
	pop exch pop
} def
/ci6walkrgbstring {
	0 3 index
	dup length 1 sub 0 3 3 -1 roll {
		3 getinterval {} forall
		5 index exec
		3 index
	} for
	
	 5 {pop} repeat
} def
/ci6walkcmykstring
{
	0 3 index
	dup length 1 sub 0 4 3 -1 roll {
		4 getinterval {} forall
		
		6 index exec
		
		3 index
		
	} for
	
	5 { pop } repeat
	
} def
/ci6putrgbtograystr
{
	.11 mul exch
	
	.59 mul add exch
	
	.3 mul add
	
	cvi 3 copy put
	
	pop 1 add
} def
/ci6putcmyktograystr
{
	exch .11 mul add
	
	exch .59 mul add
	
	exch .3 mul add
	
	dup 255 gt { pop 255 } if
	
	255 exch sub cvi 3 copy put
	
	pop 1 add
} def
/ci6rgbtograyproc {	
	Adobe_ColorImage_AI6_Vars begin 
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putrgbtograystr load exch
		ci6walkrgbstring
 end
} def
/ci6cmyktograyproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		XIBuffer3
		dup 3 1 roll 
		
		/ci6putcmyktograystr load exch
		ci6walkcmykstring
 end
} def
/ci6separatecmykproc {	
	Adobe_ColorImage_AI6_Vars begin
		sourcearray 0 get exec
		
		XIBuffer3
		
		0 2 index
		
		plateindex 4 2 index length 1 sub {
			get 255 exch sub
			
			3 copy put pop 1 add
			
			2 index
		} for
		pop pop exch pop
 end
} def
	
/ci6compositeimage {
	dup 1 eq {
		pop pop image
	}{
		/ci6colorimage load null ne {
			ci6colorimage
		}{
			3 1 roll pop
			sourcearray 0 3 -1 roll put
			3 eq {/ci6rgbtograyproc}{/ci6cmyktograyproc} ifelse load
			image
		} ifelse
	} ifelse
} def
/ci6knockoutimage {
	gsave
	0 ci6curtransfer exec 1 ci6curtransfer exec
	eq {
		0 ci6curtransfer exec 0.5 lt
	}{
		0 ci6curtransfer exec 1 ci6curtransfer exec gt
	} ifelse
	{{pop 0}}{{pop 1}} ifelse
	systemdict /settransfer get exec
	ci6compositeimage
	grestore
} def
/ci6drawimage {
	ci6testplate -1 eq {
		pop ci6compositeimage
	}{
		dup type /arraytype eq {
			dup length plateindex gt {plateindex get}{pop false} ifelse
		}{
			{
				true
			}{
				dup 1 eq {plateindex 3 eq}{plateindex 3 le} ifelse
			} ifelse
		} ifelse
		{
			dup 1 eq {
				pop pop ci6image
			}{
				dup 3 eq {
					ci6compositeimage
				}{
					pop pop
					sourcearray 0 3 -1 roll put
					/ci6separatecmykproc load
					ci6image
				} ifelse
			} ifelse
		}{
			ci6curoverprint {
				7 {pop} repeat
			}{
				ci6knockoutimage
			} ifelse
		} ifelse
	} ifelse
} def
/ci6proctintimage {
	/_ptispace exch store /_ptiname exch store /_pti1 exch store /_pti0 exch store /_ptiproc exch store
	/_pticomps _ptispace ci6numcomps store
	/_ptiscale _pti1 _pti0 sub store
	level2? {
		_ptiname length 0 gt version cvr 2012 ge and {
			[/Separation _ptiname _ptispace {_ptiproc}] setcolorspace
			[_pti0 _pti1] ci6makeimagedict ci6image
		}{
			[/Indexed _ptispace 255 {255 div _ptiscale mul _pti0 add _ptiproc}] setcolorspace
			[0 255] ci6makeimagedict ci6image
		} ifelse
	}{
		_pticomps 1 eq {
			{
				dup
				{
					255 div _ptiscale mul _pti0 add _ptiproc 255 mul cvi put
				} ci6stringapply
			} ci6concatprocs ci6image
		}{
			{
				dup length _pticomps mul dup _ptibuf length ne {/_ptibuf exch string store}{pop} ifelse
				_ptibuf {
					exch _pticomps mul exch 255 div _ptiscale mul _pti0 add _ptiproc
					_pticomps 2 add -2 roll
					_pticomps 1 sub -1 0 {
						1 index add 2 index exch
						5 -1 roll
						255 mul cvi put
					} for
					pop pop
				} ci6stringapply
			} ci6concatprocs false _pticomps
			/ci6colorimage load null eq {7 {pop} repeat}{ci6colorimage} ifelse
		} ifelse
	} ifelse
} def
/ci6graytintimage {
	/_gtigray 5 -1 roll store
	{1 _gtigray sub mul 1 exch sub} 4 1 roll
	/DeviceGray ci6proctintimage
} def
/ci6cmyktintimage {
	/_cticmyk 5 -1 roll store
	{_cticmyk {1 index mul exch} forall pop} 4 1 roll
	/DeviceCMYK ci6proctintimage
} def
/ci6rgbtintimage {
	/_rtirgb 5 -1 roll store
	{_rtirgb {1 exch sub 1 index mul 1 exch sub exch} forall pop} 4 1 roll
	/DeviceRGB ci6proctintimage
} def
/ci6tintimage {
	ci6testplate -1 eq {
		ci6colorexpand
		3 -1 roll 5 -1 roll {0}{0 exch} ifelse 4 2 roll
		dup /DeviceGray eq {
			pop ci6graytintimage
		}{
			dup /DeviceRGB eq {
				pop ci6rgbtintimage
			}{
				pop ci6cmyktintimage
			} ifelse
		} ifelse
	}{
		dup ci6marksplate {
			plateindex 5 lt {
				ci6colortocmyk plateindex get
				dup 0 eq ci6curoverprint and {
					7 {pop} repeat
				}{
					1 exch sub
					exch {1 0}{0 1} ifelse () ci6graytintimage
				} ifelse
			}{
				pop exch {0}{0 exch} ifelse 0 3 1 roll () ci6graytintimage
			} ifelse
		}{
			ci6curoverprint {
				8 {pop} repeat
			}{
				pop pop pop
				{pop 1} 0 1 () /DeviceGray ci6proctintimage
			} ifelse
		} ifelse
	} ifelse
} def
/XINullImage {
} def
/XIImageMask {
	XIImageWidth XIImageHeight false
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	imagemask
} def
/XIImageTint {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	XIType 3 eq XIColorValues XIColorSpace ci6tintimage
} def
/XIImage {
	XIImageWidth XIImageHeight XIBitsPerPixel
	[XIImageWidth 0 0 XIImageHeight neg 0 0]
	/XIDataProc load
	false XIChannelCount XIPlateList ci6drawimage
} def
/XG {
	pop pop
} def
/XF {
	13 {pop} repeat
} def
/Xh {
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		/XIImageMatrix exch def
		0 0 moveto
		XIImageMatrix concat
		XIImageWidth XIImageHeight scale
		
		/_lp /null ddef
		_fc
		/_lp /imagemask ddef
 end
} def
/XH {
	Adobe_ColorImage_AI6_Vars begin
		grestore
 end
} def
/XIEnable {
	Adobe_ColorImage_AI6_Vars /XIEnable 3 -1 roll put
} def
/XC {
	Adobe_ColorImage_AI6_Vars begin
		ci6colormake
		/XIColorSpace exch def
		/XIColorValues exch def
 end
} def
/XIPlates {
	Adobe_ColorImage_AI6_Vars begin
		/XIPlateList exch def
 end
} def
/XI
{
	Adobe_ColorImage_AI6_Vars begin
		gsave
		/XIType exch def
		cvi dup
		256 idiv /XICompression exch store
		256 mod /XIEncoding exch store
		pop pop
		/XIChannelCount exch def
		/XIBitsPerPixel exch def
		/XIImageHeight exch def
		/XIImageWidth exch def
		pop pop pop pop
		/XIImageMatrix exch def
		XIBitsPerPixel 1 eq {
			XIImageWidth 8 div ceiling cvi
		}{
			XIImageWidth XIChannelCount mul
		} ifelse
		/XIRowBytes exch def
		XIEnable {
			/XIBuffer3 XIImageWidth string def
			XICompression 0 eq {
				/XIBuffer1 XIRowBytes string def
				XIEncoding 0 eq {
					{currentfile XIBuffer1 readhexstring pop}
				}{
					{currentfile XIBuffer1 readstring pop}
				} ifelse
			}{
				/XIBuffer1 256 string def
				/XIBuffer2 XIRowBytes string def
				{currentfile XIBuffer1 readline pop (%) anchorsearch {pop} if}
				/ASCII85Decode filter /DCTDecode filter
				/XIFile exch def
				{XIFile XIBuffer2 readstring pop}
			} ifelse
			/XIDataProc exch def
			
			XIType 1 ne {
				0 setgray
			} if
			XIType 1 eq {
				XIImageMask
			}{
				XIType 2 eq XIType 3 eq or {
					XIImageTint
				}{
					XIImage
				} ifelse
			} ifelse
		}{
			XINullImage
		} ifelse
		/XIPlateList false def
		grestore
 end
} def
end
%%EndProcSet
%%BeginResource: procset Adobe_Illustrator_AI5 1.3 0
%%Title: (Adobe Illustrator (R) Version 8.0 Full Prolog)
%%Version: 1.3 0
%%CreationDate: (3/7/1994) ()
%%Copyright: ((C) 1987-1998 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5_vars 112 dict dup begin
put
/_?cmyk false def
/_eo false def
/_lp /none def
/_pf
{
} def
/_ps
{
} def
/_psf
{
} def
/_pss
{
} def
/_pjsf
{
} def
/_pjss
{
} def
/_pola 0 def
/_doClip 0 def
/cf currentflat def
/_lineorientation 0 def
/_charorientation 0 def
/_yokoorientation 0 def
/_tm matrix def
/_renderStart
[
/e0 /r0 /a0 /o0 /e1 /r1 /a1 /i0
] def
/_renderEnd
[
null null null null /i1 /i1 /i1 /i1
] def
/_render -1 def
/_shift [0 0] def
/_ax 0 def
/_ay 0 def
/_cx 0 def
/_cy 0 def
/_leading
[
0 0
] def
/_ctm matrix def
/_mtx matrix def
/_sp 16#020 def
/_hyphen (-) def
/_fontSize 0 def
/_fontAscent 0 def
/_fontDescent 0 def
/_fontHeight 0 def
/_fontRotateAdjust 0 def
/Ss 256 string def
Ss 0 (fonts/) putinterval
/_cnt 0 def
/_scale [1 1] def
/_nativeEncoding 0 def
/_useNativeEncoding 0 def
/_tempEncode 0 def
/_pntr 0 def
/_tDict 2 dict def
/_hfname 100 string def
/_hffound false def
/Tx
{
} def
/Tj
{
} def
/CRender
{
} def
/_AI3_savepage
{
} def
/_gf null def
/_cf 4 array def
/_rgbf 3 array def
/_if null def
/_of false def
/_fc
{
} def
/_gs null def
/_cs 4 array def
/_rgbs 3 array def
/_is null def
/_os false def
/_sc
{
} def
/_pd 1 dict def
/_ed 15 dict def
/_pm matrix def
/_fm null def
/_fd null def
/_fdd null def
/_sm null def
/_sd null def
/_sdd null def
/_i null def
/_lobyte 0 def
/_hibyte 0 def
/_cproc null def
/_cscript 0 def
/_hvax 0 def
/_hvay 0 def
/_hvwb 0 def
/_hvcx 0 def
/_hvcy 0 def
/_bitfont null def
/_bitlobyte 0 def
/_bithibyte 0 def
/_bitkey null def
/_bitdata null def
/_bitindex 0 def
/discardSave null def
/buffer 256 string def
/beginString null def
/endString null def
/endStringLength null def
/layerCnt 1 def
/layerCount 1 def
/perCent (%) 0 get def
/perCentSeen? false def
/newBuff null def
/newBuffButFirst null def
/newBuffLast null def
/clipForward? false def
end
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 100 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/initialize
{
	Adobe_Illustrator_AI5 dup begin
	Adobe_Illustrator_AI5_vars begin
	/_aicmykps where {pop /_?cmyk _aicmykps def}if
	discardDict
	{
		bind pop pop
	} forall
	dup /nc get begin
	{
		dup xcheck 1 index type /operatortype ne and
		{
			bind
		} if
		pop pop
	} forall
 end
	newpath
} def
/terminate
{
 end
 end
} def
/_
null def
/ddef
{
	Adobe_Illustrator_AI5_vars 3 1 roll put
} def
/xput
{
	dup load dup length exch maxlength eq
	{
		dup dup load dup
		length 2 mul dict copy def
	} if
	load begin
	def
 end
} def
/npop
{
	{
		pop
	} repeat
} def
/hswj
{
	dup stringwidth 3 2 roll
	{
		_hvwb eq { exch _hvcx add exch _hvcy add } if
		exch _hvax add exch _hvay add
	} cforall
} def
/vswj
{
	0 0 3 -1 roll
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			dup cstring stringwidth 5 2 roll
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			4 -1 roll sub exch
			3 -1 roll sub exch
		}
		{
			_hvwb eq { exch _hvcy sub exch _hvcx sub } if
			exch _hvay sub exch _hvax sub
			_fontHeight sub
		} ifelse
	} cforall
} def
/swj
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hswj } { vswj } ifelse
} def
/sw
{
	0 0 0 6 3 roll swj
} def
/vjss
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index setmatrix stroke
			grestore
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			gsave
			2 index false charpath
			6 index setmatrix stroke
			grestore
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjss
{
	4 1 roll
	{
		dup cstring
		gsave
		false charpath currentpoint
		5 index setmatrix stroke
		grestore
		moveto
		_sp eq
		{
			5 index 5 index rmoveto
		} if
		2 copy rmoveto
	} cforall
	6 npop
} def
/jss
{
	_lineorientation 0 eq { hjss } { vjss } ifelse
} def
/ss
{
	0 0 0 7 3 roll jss
} def
/vjsp
{
	4 1 roll
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			false charpath
            currentpoint
			_fontRotateAdjust sub
			moveto
			_sp eq
			{
				5 index 5 index rmoveto
			} if
			2 copy rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			5 index sub
			3 index _sp eq
			{
				9 index sub
			} if
	
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
	
			2 index false charpath
	
			moveto pop pop
		} ifelse
	} cforall
	6 npop
} def
/hjsp
{
    4 1 roll
    {
        dup cstring
        false charpath
        _sp eq
        {
            5 index 5 index rmoveto
        } if
        2 copy rmoveto
    } cforall
    6 npop
} def
/jsp
{
	matrix currentmatrix
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/sp
{
    matrix currentmatrix
    0 0 0 7 3 roll
    _lineorientation 0 eq {hjsp} {vjsp} ifelse
} def
/pl
{
	transform
	0.25 sub round 0.25 add exch
	0.25 sub round 0.25 add exch
	itransform
} def
/setstrokeadjust where
{
	pop true setstrokeadjust
	/c
	{
		curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll curveto
	} def
	/V
	/v load def
	/y
	{
		2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		lineto
	} def
	/L
	/l load def
	/m
	{
		moveto
	} def
}
{
	/c
	{
		pl curveto
	} def
	/C
	/c load def
	/v
	{
		currentpoint 6 2 roll pl curveto
	} def
	/V
	/v load def
	/y
	{
		pl 2 copy curveto
	} def
	/Y
	/y load def
	/l
	{
		pl lineto
	} def
	/L
	/l load def
	/m
	{
		pl moveto
	} def
} ifelse
/d
{
	setdash
} def
/cf
{
} def
/i
{
	dup 0 eq
	{
		pop cf
	} if
	setflat
} def
/j
{
	setlinejoin
} def
/J
{
	setlinecap
} def
/M
{
	setmiterlimit
} def
/w
{
	setlinewidth
} def
/XR
{
	0 ne
	/_eo exch ddef
} def
/H
{
} def
/h
{
	closepath
} def
/N
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			_eo {eoclip} {clip} ifelse /_doClip 0 ddef
		} if
		newpath
	}
	{
		/CRender
		{
			N
		} ddef
	} ifelse
} def
/n
{
	N
} def
/F
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _pf grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _fc
			/_doClip 0 ddef
		}
		{
			_pf
		} ifelse
	}
	{
		/CRender
		{
			F
		} ddef
	} ifelse
} def
/f
{
	closepath
	F
} def
/S
{
	_pola 0 eq
	{
		_doClip 1 eq
		{
			gsave _ps grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			_ps
		} ifelse
	}
	{
		/CRender
		{
			S
		} ddef
	} ifelse
} def
/s
{
	closepath
	S
} def
/B
{
	_pola 0 eq
	{
		_doClip 1 eq
		gsave F grestore
		{
			gsave S grestore _eo {eoclip} {clip} ifelse newpath /_lp /none ddef _sc
			/_doClip 0 ddef
		}
		{
			S
		} ifelse
	}
	{
		/CRender
		{
			B
		} ddef
	} ifelse
} def
/b
{
	closepath
	B
} def
/W
{
	/_doClip 1 ddef
} def
/*
{
	count 0 ne
	{
		dup type /stringtype eq
		{
			pop
		} if
	} if
	newpath
} def
/u
{
} def
/U
{
} def
/q
{
	_pola 0 eq
	{
		gsave
	} if
} def
/Q
{
	_pola 0 eq
	{
		grestore
	} if
} def
/*u
{
	_pola 1 add /_pola exch ddef
} def
/*U
{
	_pola 1 sub /_pola exch ddef
	_pola 0 eq
	{
		CRender
	} if
} def
/D
{
	pop
} def
/*w
{
} def
/*W
{
} def
/`
{
	/_i save ddef
	clipForward?
	{
		nulldevice
	} if
	6 1 roll 4 npop
	concat pop
	userdict begin
	/showpage
	{
	} def
	0 setgray
	0 setlinecap
	1 setlinewidth
	0 setlinejoin
	10 setmiterlimit
	[] 0 setdash
	/setstrokeadjust where {pop false setstrokeadjust} if
	newpath
	0 setgray
	false setoverprint
} def
/~
{
 end
	_i restore
} def
/_rgbtocmyk
{
	3
	{
		1 exch sub 3 1 roll
	} repeat
	3 copy 1 4 1 roll
	3
	{
		3 index 2 copy gt
		{
			exch
		} if
		pop 4 1 roll
	} repeat
	pop pop pop
	4 1 roll
	3
	{
		3 index sub
		3 1 roll
	} repeat
	4 -1 roll
} def
/setrgbfill
{
	_rgbf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_rgbf aload pop setrgbcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/setrgbstroke
{
	_rgbs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_rgbs aload pop setrgbcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/O
{
	0 ne
	/_of exch ddef
	/_lp /none ddef
} def
/R
{
	0 ne
	/_os exch ddef
	/_lp /none ddef
} def
/g
{
	/_gf exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/G
{
	/_gs exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/k
{
	_cf astore pop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_cf aload pop setcmykcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/K
{
	_cs astore pop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_cs aload pop setcmykcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xa
{
	_?cmyk {
		3 npop k
	}{
		setrgbfill 4 npop
	} ifelse
} def
/XA
{
	_?cmyk {
		3 npop K
	}{
		setrgbstroke 4 npop
	} ifelse
} def
/Xs
{
	/_gf exch ddef
	5 npop
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_gf setAIseparationgray
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XS
{
	/_gs exch ddef
	5 npop
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_gs setAIseparationgray
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/Xx
{
	exch
	/_gf exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/XX
{
	exch
	/_gs exch ddef
	0 eq {
		findcmykcustomcolor
	}{
		_?cmyk {true}{/findrgbcustomcolor where{pop false}{true}ifelse}ifelse
		{
			4 1 roll 3 npop
			findcmykcustomcolor
		}{
			8 -4 roll 4 npop
			findrgbcustomcolor
		} ifelse
	} ifelse
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/x
{
	/_gf exch ddef
	findcmykcustomcolor
	/_if exch ddef
	/_fc
	{
		_lp /fill ne
		{
			_of setoverprint
			_if _gf 1 exch sub setcustomcolor
			/_lp /fill ddef
		} if
	} ddef
	/_pf
	{
		_fc
		_eo {eofill} {fill} ifelse
	} ddef
	/_psf
	{
		_fc
		hvashow
	} ddef
	/_pjsf
	{
		_fc
		hvawidthshow
	} ddef
	/_lp /none ddef
} def
/X
{
	/_gs exch ddef
	findcmykcustomcolor
	/_is exch ddef
	/_sc
	{
		_lp /stroke ne
		{
			_os setoverprint
			_is _gs 1 exch sub setcustomcolor
			/_lp /stroke ddef
		} if
	} ddef
	/_ps
	{
		_sc
		stroke
	} ddef
	/_pss
	{
		_sc
		ss
	} ddef
	/_pjss
	{
		_sc
		jss
	} ddef
	/_lp /none ddef
} def
/XK
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		K
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		XA
	} ifelse
} def
/Xk
{
	3 -1 roll pop
	0 eq
	{
		1 exch sub
		3 {dup 3 1 roll mul 5 1 roll} repeat
		mul 4 1 roll
		k
	}
	{
		1 exch sub 4 1 roll
		3 {1 exch sub 3 index mul 1 exch sub 3 1 roll} repeat
		4 -1 roll pop
		Xa
	} ifelse
} def
/A
{
	pop
} def
/annotatepage
{
userdict /annotatepage 2 copy known {get exec} {pop pop} ifelse
} def
/XT {
	pop pop
} def
/Xt {
	pop
} def
/discard
{
	save /discardSave exch store
	discardDict begin
	/endString exch store
	gt38?
	{
		2 add
	} if
	load
	stopped
	pop
 end
	discardSave restore
} bind def
userdict /discardDict 7 dict dup begin
put
/pre38Initialize
{
	/endStringLength endString length store
	/newBuff buffer 0 endStringLength getinterval store
	/newBuffButFirst newBuff 1 endStringLength 1 sub getinterval store
	/newBuffLast newBuff endStringLength 1 sub 1 getinterval store
} def
/shiftBuffer
{
	newBuff 0 newBuffButFirst putinterval
	newBuffLast 0
	currentfile read not
	{
	stop
	} if
	put
} def
0
{
	pre38Initialize
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff endString eq
			{
				cleartomark stop
			} if
			shiftBuffer
		} loop
	}
	{
	stop
	} ifelse
} def
1
{
	pre38Initialize
	/beginString exch store
	mark
	currentfile newBuff readstring exch pop
	{
		{
			newBuff beginString eq
			{
				/layerCount dup load 1 add store
			}
			{
				newBuff endString eq
				{
					/layerCount dup load 1 sub store
					layerCount 0 eq
					{
						cleartomark stop
					} if
				} if
			} ifelse
			shiftBuffer
		} loop
	} if
} def
2
{
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			endString eq {
				cleartomark stop
			} if
		}ifelse
	} loop
} def
3
{
	/beginString exch store
	/layerCnt 1 store
	mark
	{
		currentfile buffer {readline} stopped {
			% assume error was due to overfilling the buffer
		}{
			not
			{
				stop
			} if
			dup beginString eq
			{
				pop /layerCnt dup load 1 add store
			}
			{
				endString eq
				{
					layerCnt 1 eq
					{
						cleartomark stop
					}
					{
						/layerCnt dup load 1 sub store
					} ifelse
				} if
			} ifelse
		}ifelse
	} loop
} def
end
userdict /clipRenderOff 15 dict dup begin
put
{
	/n /N /s /S /f /F /b /B
}
{
	{
		_doClip 1 eq
		{
			/_doClip 0 ddef _eo {eoclip} {clip} ifelse
		} if
		newpath
	} def
} forall
/Tr /pop load def
/Bb {} def
/BB /pop load def
/Bg {12 npop} def
/Bm {6 npop} def
/Bc /Bm load def
/Bh {4 npop} def
end
/Lb
{
	6 npop
	7 2 roll
	5 npop
	0 eq
	{
		0 eq
		{
			(%AI5_BeginLayer) 1 (%AI5_EndLayer--) discard
		}
		{
			
			/clipForward? true def
			
			/Tx /pop load def
			/Tj /pop load def
			
			currentdict end clipRenderOff begin begin
		} ifelse
	}
	{
		0 eq
		{
			save /discardSave exch store
		} if
	} ifelse
} bind def
/LB
{
	discardSave dup null ne
	{
		restore
	}
	{
		pop
		clipForward?
		{
			currentdict
		 end
		 end
		 begin
					
			/clipForward? false ddef
		} if
	} ifelse
} bind def
/Pb
{
	pop pop
	0 (%AI5_EndPalette) discard
} bind def
/Np
{
	0 (%AI5_End_NonPrinting--) discard
} bind def
/Ln /pop load def
/Ap
/pop load def
/Ar
{
	72 exch div
	0 dtransform dup mul exch dup mul add sqrt
	dup 1 lt
	{
		pop 1
	} if
	setflat
} def
/Mb
{
	q
} def
/Md
{
} def
/MB
{
	Q
} def
/nc 4 dict def
nc begin
/setgray
{
	pop
} bind def
/setcmykcolor
{
	4 npop
} bind def
/setrgbcolor
{
	3 npop
} bind def
/setcustomcolor
{
	2 npop
} bind def
currentdict readonly pop
end
/XP
{
	4 npop
} bind def
/XD
{
	pop
} bind def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_pattern_AI5 1.1 0
%%Title: (Adobe Illustrator (R) Version 5.0 Pattern Operators)
%%Version: 1.1 0
%%CreationDate: (03/26/93) ()
%%Copyright: ((C) 1987-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_Illustrator_AI5 known not {
	userdict /Adobe_Illustrator_AI5 95 dict put
} if
userdict /Adobe_Illustrator_AI5 get begin
/@
{
} def
/&
{
} def
/dp
{
	dup null eq
	{
		pop
		_dp 0 ne
		{
			0 1 _dp 1 sub _dl mod
			{
				_da exch get 3 get
			} for
			_dp 1 sub _dl mod 1 add packedarray
			_da 0 get aload pop 8 -1 roll 5 -1 roll pop 4 1 roll
			definepattern pop
		} if
	}
	{
		_dp 0 ne _dp _dl mod 0 eq and
		{
			null dp
		} if
		7 packedarray _da exch _dp _dl mod exch put
		_dp _dl mod _da 0 get 4 get 2 packedarray
		/_dp _dp 1 add def
	} ifelse
} def
/E
{
	_ed begin
	dup 0 get type /arraytype ne
	{
		0
		{
			dup 1 add index type /arraytype eq
			{
				1 add
			}
			{
				exit
			} ifelse
		} loop
		array astore
	} if
	/_dd exch def
	/_ury exch def
	/_urx exch def
	/_lly exch def
	/_llx exch def
	/_n exch def
	/_y 0 def
	/_dl 4 def
	/_dp 0 def
	/_da _dl array def
	0 1 _dd length 1 sub
	{
		/_d exch _dd exch get def
		0 2 _d length 2 sub
		{
			/_x exch def
			/_c false def
			/_r _d _x 1 add get cvlit def
			_r _ ne
			{
				_urx _llx sub _ury _lly sub
				[
				1 0 0 1 0 0
				]
				[
				/save cvx
				_llx neg _lly neg /translate cvx
				_c
				{
					nc /begin cvx
				} if
				_r dup type /stringtype eq
				{
					cvx
				}
				{
					{
						exec
					} /forall cvx
				} ifelse
				_c
				{
					/end cvx
				} if
				/restore cvx
				] cvx
				/_fn 12 _n length add string def
				_y _fn cvs pop
				/_y _y 1 add def
				_fn 12 _n putinterval
				_fn _c false dp
				_d exch _x 1 add exch put
			} if
		} for
	} for
	null dp
	_n _dd /_pd
 end
	xput
} def
/fc
{
	_fm dup concatmatrix pop
} def
/p
{
	/_fm exch ddef
	9 -2 roll _pm translate fc
	7 -2 roll _pm scale fc
	5 -1 roll _pm rotate fc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate fc
		1 -1 _pm scale fc
		neg _pm rotate fc
	}
	{
		pop
	} ifelse
	dup _pm rotate fc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore fc
	neg _pm rotate fc
	_pd exch get /_fdd exch ddef
	/_pf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					patternfill
				}
				{
					pop
					fill
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_psf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					9 copy 6 npop patternashow
				}
				{
					pop
					6 copy 3 npop hvashow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		sw rmoveto
	} ddef
	/_pjsf
	{
		save
		/_doClip 0 ddef
		0 1 _fdd length 1 sub
		{
			/_fd exch _fdd exch get ddef
			_fd
			0 2 _fd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _fc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _fm
					12 copy 6 npop patternawidthshow
				}
				{
					pop 9 copy 3 npop hvawidthshow
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		swj rmoveto
	} ddef
	/_lp /none ddef
} def
/sc
{
	_sm dup concatmatrix pop
} def
/P
{
	/_sm exch ddef
	9 -2 roll _pm translate sc
	7 -2 roll _pm scale sc
	5 -1 roll _pm rotate sc
	4 -2 roll exch 0 ne
	{
		dup _pm rotate sc
		1 -1 _pm scale sc
		neg _pm rotate sc
	}
	{
		pop
	} ifelse
	dup _pm rotate sc
	exch dup sin exch cos div 1 0 0 1 0 6 2 roll
	_pm astore sc
	neg _pm rotate sc
	_pd exch get /_sdd exch ddef
	/_ps
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					patternstroke
				}
				{
					pop stroke
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		newpath
	} ddef
	/_pss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					10 copy 6 npop patternashowstroke
				}
				{
					pop 7 copy 3 npop ss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop sw rmoveto
	} ddef
	/_pjss
	{
		save
		/_doClip 0 ddef
		0 1 _sdd length 1 sub
		{
			/_sd exch _sdd exch get ddef
			_sd
			0 2 _sd length 2 sub
			{
				gsave
				2 copy get dup _ ne
				{
					cvx exec _sc
				}
				{
					pop
				} ifelse
				2 copy 1 add get dup _ ne
				{
					aload pop findfont _sm
					13 copy 6 npop patternawidthshowstroke
				}
				{
					pop 10 copy 3 npop jss
				} ifelse
				grestore
				pop
			} for
			pop
		} for
		restore
		pop swj rmoveto
	} ddef
	/_lp /none ddef
} def
end
userdict /Adobe_pattern_AI5 18 dict dup begin
put
/initialize
{
	/definepattern where
	{
		pop
		pop pop
	}
	{
	 begin
	 begin
		Adobe_pattern_AI5 begin
		Adobe_pattern_AI5
		{
			dup xcheck
			{
				bind
			} if
			pop pop
		} forall
		mark
		cachestatus 7 1 roll pop pop pop pop exch pop exch
		{
			{
				10000 add
				dup 2 index gt
				{
					exit
				} if
				dup setcachelimit
			} loop
		} stopped
		cleartomark
	 end 	
		
	 end
	 end
		
		Adobe_pattern_AI5 begin
	} ifelse
} def
/terminate
{
	currentdict Adobe_pattern_AI5 eq
	{
	 end
	} if
} def
errordict
/nocurrentpoint
{
	pop
	stop
} put
errordict
/invalidaccess
{
	pop
	stop
} put
/patternencoding
256 array def
0 1 255
{
	patternencoding exch ( ) 2 copy exch 0 exch put cvn put
} for
/definepattern
{
	17 dict begin
	/uniform exch def
	/cache exch def
	/key exch def
	/procarray exch def
	/mtx exch matrix invertmatrix def
	/height exch def
	/width exch def
	/ctm matrix currentmatrix def
	/ptm matrix def
	/str 32 string def
	/slice 9 dict def
	slice /s 1 put
	slice /q 256 procarray length div sqrt floor cvi put
	slice /b 0 put
	/FontBBox
	[
	0 0 0 0
	] def
	/FontMatrix mtx matrix copy def
	/Encoding patternencoding def
	/FontType 3 def
	/BuildChar
	{
		exch
	 begin
		/setstrokeadjust where {pop true setstrokeadjust} if
		slice begin
		dup q dup mul mod s idiv /i exch def
		dup q dup mul mod s mod /j exch def
		q dup mul idiv procarray exch get
		/xl j width s div mul def
		/xg j 1 add width s div mul def
		/yl i height s div mul def
		/yg i 1 add height s div mul def
		uniform
		{
			1 1
		}
		{
			width 0 dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
			0 height dtransform
			dup mul exch dup mul add sqrt dup 1 add exch div
		} ifelse
		width 0 cache
		{
			xl 4 index mul yl 4 index mul xg 6 index mul yg 6 index mul
			setcachedevice
		}
		{
			setcharwidth
		} ifelse
		gsave
		scale
		newpath
		xl yl moveto
		xg yl lineto
		xg yg lineto
		xl yg lineto
		closepath
		clip
		newpath
	 end
	 end
		exec
		grestore
	} def
	key currentdict definefont
 end
} def
/patterncachesize
{
	gsave
	newpath
	0 0 moveto
	width 0 lineto
	width height lineto
	0 height lineto
	closepath
	patternmatrix setmatrix
	pathbbox
	exch ceiling 4 -1 roll floor sub 3 1 roll
	ceiling exch floor sub
	mul 1 add
	grestore
} def
/patterncachelimit
{
	cachestatus 7 1 roll 6 npop 8 mul
} def
/patternpath
{
	exch dup begin
	setfont
	ctm setmatrix
	concat
	slice exch /b exch slice /q get dup mul mul put
	FontMatrix concat
	uniform
	{
		width 0 dtransform round width div exch round width div exch
		0 height dtransform round height div exch height div exch
		0 0 transform round exch round exch
		ptm astore setmatrix
	}
	{
		ptm currentmatrix pop
	} ifelse
	{
		currentpoint
	} stopped not
	{
		2 npop
		pathbbox
		true
		4 index 3 index eq
		4 index 3 index eq
		and
		{
			pop false
			{
				{
					2 npop
				}
				{
					3 npop true
				}
				{
					7 npop true
				}
				{
					pop true
				} pathforall
			} stopped
			{
				5 npop true
			} if
		} if
		{
			height div ceiling height mul 4 1 roll
			width div ceiling width mul 4 1 roll
			height div floor height mul 4 1 roll
			width div floor width mul 4 1 roll
			2 index sub height div ceiling cvi exch
			3 index sub width div ceiling cvi exch
			4 2 roll moveto
			FontMatrix mtx invertmatrix
			dup dup 4 get exch 5 get rmoveto
			ptm ptm concatmatrix pop
			slice /s
			patterncachesize patterncachelimit div ceiling sqrt ceiling cvi
			dup slice /q get gt
			{
				pop slice /q get
			} if
			put
			0 1 slice /s get dup mul 1 sub
			{
				slice /b get add
				gsave
				0 1 str length 1 sub
				{
					str exch 2 index put
				} for
				pop
				dup
				{
					gsave
					ptm setmatrix
					1 index str length idiv
					{
						str show
					} repeat
					1 index str length mod str exch 0 exch getinterval show
					grestore
					0 height rmoveto
				} repeat
				grestore
			} for
			2 npop
		}
		{
			4 npop
		} ifelse
	} if
 end
} def
/patternclip
{
	_eo {eoclip} {clip} ifelse
} def
/patternstrokepath
{
	strokepath
} def
/patternmatrix
matrix def
/patternfill
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternclip
	Adobe_pattern_AI5 /patternpath get exec
	grestore
	newpath
} def
/patternstroke
{
	dup type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get
	} if
	gsave
	patternstrokepath
	true
	{
		{
			{
				newpath
				moveto
			}
			{
				lineto
			}
			{
				curveto
			}
			{
				closepath
				3 copy
				Adobe_pattern_AI5 /patternfill get exec
			} pathforall
			3 npop
		} stopped
		{
			5 npop
			patternclip
			Adobe_pattern_AI5 /patternfill get exec
		} if
	}
	{
		patternclip
		Adobe_pattern_AI5 /patternfill get exec
	} ifelse
	grestore
	newpath
} def
/vpatternawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			5 index 5 index 5 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			6 index 6 index 6 index Adobe_pattern_AI5 /patternfill get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	3 npop
} def
/hpatternawidthshow
{
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		9 index 9 index 9 index
		Adobe_pattern_AI5 /patternfill get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	8 npop
} def
/patternashow
{
0 0 0 6 3 roll
patternawidthshow
} def
/patternawidthshow
{
	6 index type /dicttype eq
	{
		Adobe_pattern_AI5 /patternmatrix get 7 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshow } { vpatternawidthshow } ifelse
} def
/vpatternawidthshowstroke
{
	7 1 roll
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	{
		dup cstring
		dup length 1 eq
		_charorientation 1 eq
		and
		{
			-90 rotate
			currentpoint
			_fontRotateAdjust add
			moveto
			gsave
			false charpath currentpoint
			3 index setmatrix
			6 index 6 index 6 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			_fontRotateAdjust sub
			moveto
			_hvwb eq { _hvcx _hvcy rmoveto } if
			_hvax _hvay rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			_hvax sub
			3 index _hvwb eq { _hvcx sub } if
			currentpoint
			exch 4 index stringwidth pop 2 div sub
			exch _fontAscent sub
			moveto
			gsave
			2 index false charpath
			4 index setmatrix
			7 index 7 index 7 index Adobe_pattern_AI5 /patternstroke get exec
			grestore
			newpath moveto pop pop
		} ifelse
	} cforall
	4 npop
} def
/hpatternawidthshowstroke
{
	7 1 roll
	{
		dup cstring exch
		gsave
		3 index eq { 5 index 5 index rmoveto } if
		false charpath currentpoint
		7 index setmatrix
		10 index 10 index 10 index
		Adobe_pattern_AI5 /patternstroke get exec
		grestore
		newpath moveto
		2 copy rmoveto
	} cforall
	9 npop
} def
/patternashowstroke
{
	0 0 0 7 3 roll
	patternawidthshowstroke
} def
/patternawidthshowstroke
{
	7 index type /dicttype eq
	{
		patternmatrix /patternmatrix get 8 1 roll
	} if
	_lineorientation 0 eq { hpatternawidthshowstroke } { vpatternawidthshowstroke } ifelse
} def
end
setpacking
%%EndResource
%%BeginResource: procset Adobe_cshow 2.0 8
%%Title: (Writing System Operators)
%%Version: 2.0 8
%%CreationDate: (1/23/89) ()
%%Copyright: ((C) 1992-1996 Adobe Systems Incorporated All Rights Reserved)
currentpacking true setpacking
userdict /Adobe_cshow 14 dict dup begin put
/initialize
{
	Adobe_cshow begin
	Adobe_cshow
	{
		dup xcheck
		{
			bind
		} if
		pop pop
	} forall
 end
	Adobe_cshow begin
} def
/terminate
{
currentdict Adobe_cshow eq
	{
 end
	} if
} def
/cforall
{
	/_lobyte 0 ddef
	/_hibyte 0 ddef
	/_cproc exch ddef
	/_cscript currentfont /FontScript known { currentfont /FontScript get } { -1 } ifelse ddef
	{
		/_lobyte exch ddef
		_hibyte 0 eq
		_cscript 1 eq
		_lobyte 129 ge _lobyte 159 le and
		_lobyte 224 ge _lobyte 252 le and or and
		_cscript 2 eq
		_lobyte 161 ge _lobyte 254 le and and
		_cscript 3 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript 25 eq
		_lobyte 161 ge _lobyte 254 le and and
    	_cscript -1 eq
		or or or or and
		{
			/_hibyte _lobyte ddef
		}
		{
			_hibyte 256 mul _lobyte add
			_cproc
			/_hibyte 0 ddef
		} ifelse
	} forall
} def
/cstring
{
	dup 256 lt
	{
		(s) dup 0 4 3 roll put
	}
	{
		dup 256 idiv exch 256 mod
		(hl) dup dup 0 6 5 roll put 1 4 3 roll put
	} ifelse
} def
/clength
{
	0 exch
	{ 256 lt { 1 } { 2 } ifelse add } cforall
} def
/hawidthshow
{
	{
		dup cstring
		show
		_hvax _hvay rmoveto
		_hvwb eq { _hvcx _hvcy rmoveto } if
	} cforall
} def
/vawidthshow
{
	{
		dup 255 le
		_charorientation 1 eq
		and
		{
			-90 rotate
			0 _fontRotateAdjust rmoveto
			cstring
			_hvcx _hvcy _hvwb _hvax _hvay 6 -1 roll awidthshow
			0 _fontRotateAdjust neg rmoveto
			90 rotate
		}
		{
			currentpoint
			_fontHeight sub
			exch _hvay sub exch _hvax sub
			2 index _hvwb eq { exch _hvcy sub exch _hvcx sub } if
			3 2 roll
			cstring
			dup stringwidth pop 2 div neg _fontAscent neg rmoveto
			show
			moveto
		} ifelse
	} cforall
} def
/hvawidthshow
{
	6 1 roll
	/_hvay exch ddef
	/_hvax exch ddef
	/_hvwb exch ddef
	/_hvcy exch ddef
	/_hvcx exch ddef
	_lineorientation 0 eq { hawidthshow } { vawidthshow } ifelse
} def
/hvwidthshow
{
	0 0 3 -1 roll hvawidthshow
} def
/hvashow
{
	0 0 0 6 -3 roll hvawidthshow
} def
/hvshow
{
	0 0 0 0 0 6 -1 roll hvawidthshow
} def
currentdict readonly pop end
setpacking
%%EndResource
%%BeginResource: procset Adobe_shading_AI8 1.0 0
%%Title: (Adobe Illustrator 8 Shading Procset)
%%Version: 1.0 0
%%CreationDate: (12/17/97) ()
%%Copyright: ((C) 1987-1997 Adobe Systems Incorporated All Rights Reserved)
userdict /defaultpacking currentpacking put true setpacking
userdict /Adobe_shading_AI8 10 dict dup begin put
/initialize {
	Adobe_shading_AI8 begin
	Adobe_shading_AI8 bdprocs
	Mesh /initialize get exec
} def
/terminate {
	currentdict Adobe_shading_AI8 eq {
	 end
	} if
} def
/bdprocs {
	{
		dup xcheck 1 index type /arraytype eq and {
			bind
		} if
		pop pop
	} forall
} def
/X! {pop} def
/X# {pop pop} def
/Mesh 40 dict def
Mesh begin
/initialize {
	Mesh bdprocs
	Mesh begin
		/emulate? /AI8MeshEmulation where {
			pop AI8MeshEmulation
		}{
			systemdict /shfill known not
		} ifelse def
 end
} def
/bd {
	shadingdict begin
} def
/paint {
	emulate? {
	 end
	}{
		/_lp /none ddef _fc /_lp /none ddef
		
		/AIColorSpace AIColorSpace tocolorspace store
		/ColorSpace AIColorSpace topsspace store
		
		version_ge_3010.106 not systemdict /setsmoothness known and {
			0.0001 setsmoothness
		} if
		
		composite? {
			/DataSource getdatasrc def
			Matrix concat
			currentdict end
			shfill
		}{
			AIColorSpace makesmarks AIPlateList markingplate and not isoverprint and {
			 end
			}{
				/ColorSpace /DeviceGray store
				/Decode [0 1 0 1 0 1] store
				/DataSource getplatesrc def
				Matrix concat
				currentdict end
				shfill
			} ifelse
		} ifelse
	} ifelse
} def
/shadingdict 12 dict def
shadingdict begin
	/ShadingType 6 def
	/BitsPerCoordinate 16 def
	/BitsPerComponent 8 def
	/BitsPerFlag 8 def
end
/datafile null def
/databuf 256 string def
/dataptr 0 def
/srcspace null def
/srcchannels 0 def
/dstchannels 0 def
/dstplate 0 def
/srctodstcolor null def
/getplatesrc {
	/srcspace AIColorSpace store
	/srcchannels AIColorSpace getnchannels store
	/dstchannels 1 store
	/dstplate getplateindex store
	/srctodstcolor srcspace makesmarks {
		dstplate 4 eq {
			{1 exch sub}
		}{
			{srcspace tocmyk 3 dstplate sub index 1 exch sub 5 1 roll 4 {pop} repeat}
		} ifelse
	}{
		{srcchannels {pop} repeat 1}
	} ifelse store
	/datafile getdatasrc store
	/rdpatch168 load DataLength () /SubFileDecode filter
} def
/getdatasrc {
	/rdcmntline load /ASCII85Decode filter
} def
/rdpatch168 {
	/dataptr 0 store
	49 rdcount
	4 {
		dup {pop srcchannels getint8} if
		dup {pop srctodstcolor dstchannels putint8 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdpatch3216 {
	/dataptr 0 store
	97 rdcount
	4 {
		dup {pop srcchannels getint16} if
		dup {pop srctodstcolor dstchannels putint16 true} if
	} repeat
	{databuf 0 dataptr getinterval}{()} ifelse
} def
/rdcount {
	dup 0 gt {
		datafile databuf dataptr 4 -1 roll getinterval readstring
		exch length dataptr add /dataptr exch store
	}{
		true
	} ifelse
} def
/getint8 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 255 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint8 {
	dup dataptr add /dataptr exch store
	dataptr exch
	{
		1 sub exch
		255 mul cvi
		databuf 2 index
		3 -1 roll put
	} repeat
	pop
} def 
/getint16 {
	mark true 3 -1 roll
	{
		dup {pop datafile read} if
		dup {pop 256 mul datafile read} if
		dup {pop add 65535 div true} if
	} repeat
	{
		counttomark 1 add -1 roll pop true
	}{
		cleartomark false
	} ifelse
} def
/putint16 {
	dup 2 mul dataptr add /dataptr exch store
	dataptr exch
	{
		2 sub exch
		65535 mul cvi dup
		256 idiv databuf 3 index 3 -1 roll put
		256 mod databuf 2 index 1 add 3 -1 roll put
	} repeat
	pop
} def 
/srcbuf 256 string def
/rdcmntline {
	currentfile srcbuf readline pop
	(%) anchorsearch {pop} if
} def
/getplateindex {
	0 [cyan? magenta? yellow? black? customColor?] {{exit} if 1 add} forall
} def
/aicsarray 4 array def
/aicsaltvals 4 array def
/aicsaltcolr aicsaltvals def
/tocolorspace {
	dup type /arraytype eq {
		mark exch aload pop
		aicsarray 0 3 -1 roll put
		aicsarray 1 3 -1 roll put
		dup aicsarray 2 3 -1 roll put
		gettintxform aicsarray 3 3 -1 roll put
		counttomark aicsaltvals 0 3 -1 roll getinterval /aicsaltcolr exch store
		aicsaltcolr astore pop pop
		aicsarray
	} if
} def
/subtintxform {aicsaltcolr {1 index mul exch} forall pop} def
/addtintxform {aicsaltcolr {1 sub 1 index mul 1 add exch} forall pop} def
/gettintxform {
	/DeviceRGB eq {/addtintxform}{/subtintxform} ifelse load
} def
/getnchannels {
	dup type /arraytype eq {0 get} if
	colorspacedict exch get begin Channels end
} def
/makesmarks {
	composite? {
		pop true
	}{
		dup dup type /arraytype eq {0 get} if
		colorspacedict exch get begin MarksPlate end
	} ifelse
} def
/markingplate {
	composite? {
		pop true
	}{
		dup type /arraytype eq {
			dup length getplateindex gt {getplateindex get}{pop false} ifelse
		} if
	} ifelse
} def
/tocmyk {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToCMYK end
} def
/topsspace {
	dup dup type /arraytype eq {0 get} if
	colorspacedict exch get begin ToPSSpace end
} def
/colorspacedict 5 dict dup begin
	/DeviceGray 4 dict dup begin
		/Channels 1 def
		/MarksPlate {pop black?} def
		/ToCMYK {pop 1 exch sub 0 0 0 4 -1 roll} def
		/ToPSSpace {} def
 end def
	/DeviceRGB 4 dict dup begin
		/Channels 3 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop _rgbtocmyk} def
		/ToPSSpace {} def
 end def
	/DeviceCMYK 4 dict dup begin
		/Channels 4 def
		/MarksPlate {pop isCMYKSep?} def
		/ToCMYK {pop} def
		/ToPSSpace {} def
 end def
	/Separation 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			/findcmykcustomcolor where {
				pop dup 1 exch ToCMYK 5 -1 roll 1 get
				findcmykcustomcolor 1 setcustomcolor
				systemdict /currentgray get exec
				1 ne
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {} def
 end def
	/Process 4 dict dup begin
		/Channels 1 def
		/MarksPlate {
			isCMYKSep? {
				1 exch ToCMYK 4 array astore getplateindex get 0 ne 
			}{
				pop false
			} ifelse
		} def
		/ToCMYK {
			dup 2 get mark exch 4 2 roll
			3 get exec
			counttomark -1 roll tocmyk
			5 -1 roll pop
		} def
		/ToPSSpace {
			4 array copy dup 0 /Separation put
		} def
 end def
end def
/isoverprint {
	/currentoverprint where {pop currentoverprint}{_of} ifelse
} def
/version_ge_3010.106 {
   version {cvr} stopped {
      pop
      false
   }{
      3010.106 ge
   } ifelse
} def
end
end
defaultpacking setpacking
%%EndResource
%%EndProlog%%BeginSetupuserdict /_useSmoothShade true putuserdict /_aicmykps true putuserdict /_forceToCMYK true putAdobe_level2_AI5 /initialize get exec
Adobe_cshow /initialize get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 AGM_Gradient /initializeAI get exec
Adobe_Illustrator_AI5_vars Adobe_Illustrator_AI5 Adobe_pattern_AI5 /initialize get exec
Adobe_ColorImage_AI6 /initialize get exec
Adobe_shading_AI8 /initialize get exec
Adobe_Illustrator_AI5 /initialize get exec
%AI3_BeginRidercurrentpacking true setpackingsetpacking%AI3_EndRider%AI5_Begin_NonPrintingNp%AI8_PluginGroupInfo(Adobe Tracing Object) (Tracing) (TracingSuite.aip)%AI8_PluginGroupInfo(Adobe Planar Group) (Adobe Live Paint Plugin) (Live Paint.aip)%AI8_PluginGroupInfo(Adobe Deform Plugin) (Adobe Envelope Plugin) (Envelope and Warp.aip)%AI8_PluginGroupInfo(Adobe Flare Plugin) (Flare) (Flare.aip)%AI8_PluginGroupInfo(Adobe Path Blends) (Adobe Blends Plugin) (LiveBlends.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe Scatter Brush Tool) (Adobe Scatter Brush Plugin) (ScatterBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe PatternOnPath Brush Tool) (Adobe Pattern Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe ArtOnPath Brush Tool) (Adobe Art Brush Plugin) (ArtBrushTool.aip)%AI8_PluginGroupInfo(Adobe Calligraphic Brush Tool) (Adobe Calligraphic Brush Plugin) (CalligBrushTool.aip)%AI8_PluginGroupInfo(Adobe Symbolism) (Adobe Symbolism) (ParticleSystem.aip)%AI8_PluginGroupInfo(Pathfinder Suite) (Adobe Compound Shape) (PathFinderS.aip)%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp12 Bn%AI5_BeginGradient: (Copper Radial)(Copper Radial) 1 4 Bd[0<0A0B0B0C0D0D0E0F0F1011111212131414151616171818191A1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B2C2D2D2E2F2F303131323333343536><242525262728292A2B2C2D2E2F303132333435363738393A3B3C3D3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F60616263><0001010202030404050606070808090A0A0B0C0C0D0E0E0F1010111212131414151616171818191A1A1B1C1C1D1E1E1F2020212222232424252627272829292A2B2B>1 %_Br<00010102020303040405060607070808090A0A0B0B0C0C0D0E0E0F0F10111112121313141515161617181819191A1B1B1C1C1D1E1E1F1F202121222223242425252627272828292A2A2B2B2C2D2D2E2E2F30303131323333343435363637383839393A3B3B3C3C3D3E3E3F3F404141424343444445464647474849494A4A4B4C4C4D4E4E4F4F50515152525354545556565757585959><3636373839393A3B3C3D3D3E3F4041424243444546464748494A4B4B4C4D4E4F5051515253545556565758595A5B5C5C5D5E5F6061626263646566676868696A6B6C6D6E6E6F70717273747475767778797A7A7B7C7D7E7F8081818283848586878788898A8B8C8D8E8E8F90919293949595969798999A9B9C9C9D9E9FA0A1A2A3A3A4A5A6A7A8A9AAAAABACADAEAFB0B1B2B2B3B4B5><636465666768696A6B6C6C6D6E6F707172737475767778797A7B7C7C7D7E7F808182838485868788898A8B8C8D8E8F90919293949596979898999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5><2B2B2C2C2C2C2C2C2C2C2C2D2D2D2D2D2D2D2D2D2E2E2E2E2E2E2E2E2F2F2F2F2F2F2F2F2F303030303030303031313131313131313232323232323232323333333333333333343434343434343435353535353535353536363636363636363737373737373737383838383838383839393939393939393A3A3A3A3A3A3A3A3A3B3B3B3B3B3B3B3B3C3C3C3C3C3C3C3C3D3D3D3D3D3D>1 %_Br<595A5A5A5A5B5B5B5B5C5C5C5C5D5D5D5D5E5E5E5E5F5F5F5F606060606161616162626262636363636464646465656565666666666767676768686868696969696A6A6A6A6B6B6B6B6C6C6C6C6D6D6D6D6E><B5B6B6B7B8B8B9BABABBBCBCBDBEBEBFC0C0C1C2C2C3C4C4C5C6C6C7C8C8C9CACACBCCCCCDCECECFCFD0D1D1D2D3D3D4D5D5D6D7D7D8D9D9DADBDBDCDDDDDEDFDFE0E1E1E2E3E3E4E5E5E6E7E7E8E9E9EAEB><F5F5F4F4F4F4F3F3F3F3F2F2F2F2F1F1F1F1F0F0F0F0EFEFEFEFEEEEEEEDEDEDEDECECECECEBEBEBEBEAEAEAEAE9E9E9E9E8E8E8E8E7E7E7E7E6E6E6E6E5E5E5E5E4E4E4E4E3E3E3E3E2E2E2E2E1E1E1E1E0><3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F6061626364656768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F>1 %_Br[0 0.04 0.14 0 1 51.0204 0.395812 %_BS%_0 0.04 0.14 0 1 51.0204 0.395812 Bs0 0.21 0.39 0.17 1 51.0204 30.8989 %_BS%_0 0.21 0.39 0.17 1 51.0204 30.8989 Bs0.35 0.71 0.96 0.24 1 50 78.0899 %_BS%_0.35 0.71 0.96 0.24 1 50 78.0899 Bs0.43 0.92 0.88 0.56 1 50 100 %_BS%_0.43 0.92 0.88 0.56 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Desert Sunset)(Desert Sunset) 0 6 Bd[<38393A3A3B3C3D3E3E3F404141424344444546474748494A4A4B4C4C4D4E4F4F5051515253535455555657575859595A5B5B5C5D5D5E5F5F60616162626364646565666767686869696A6B6B6C6C6D6D6E6E6F6F7070717172727373747475757676777778787879797A7A7B7B7B7C7C7C7D7D7E7E7E7E7F7F7F80808080818181818282828282><5758595A5B5C5D5E5F60616263636465666768696A6B6C6D6E6F70717272737475767778797A7A7B7C7D7E7F808081828384858586878889898A8B8C8D8D8E8F90909192939394959696979899999A9B9B9C9D9D9E9F9FA0A1A1A2A2A3A4A4A5A5A6A7A7A8A8A9A9AAAAABABACACADADAEAEAFAFB0B0B1B1B1B2B2B2B3B3B3B4B4B4B4B5B5B5B5><2E2E2F2F2F3030303131313232323333333434343535353636363737373838383939393A3A3A3A3B3B3B3C3C3C3D3D3D3D3E3E3E3F3F3F3F404040414141414242424243434344444444454545454646464646474747474848484849494949494A4A4A4A4A4B4B4B4B4B4C4C4C4C4C4C4D4D4D4D4D4D4D4E4E4E4E4E4E4E4E4F4F4F4F4F4F4F4F>01 %_Br<1F1F202122222324242526272728292A2A2B2C2C2D2E2F2F303132323334343536373738><4040414242434444454646474848494A4A4B4C4C4D4E4E4F4F5051515253535455555657><5251504F4E4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E>01 %_Br<050606070808090A0A0B0B0C0D0D0E0F0F101111121213141415151617171818191A1A1B1B1C1C1D1E1E1F><2B2C2C2D2D2E2E2F2F30303131323233333434353536363737383839393A3A3B3B3C3C3D3D3E3E3F3F3F40><7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5B5A595857565554535252>01 %_Br<0000000000000000000101010101010101010101010101010101020202020202020202020202020202020303030303030303030303030303030304040404040404040404040404040405050505050505050505><7A7A79787776757474737271706F6E6D6C6B6A69686766666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B><9E9E9D9D9D9C9C9B9B9B9A9A99999998989797969696959594949393939292919190908F8F8F8E8E8D8D8C8C8C8B8B8A8A898988888887878686858584848383838282818180807F7F7E7E7E7D7D7C7C7B7B7A><0303020202020202020202020202020202020202020202020202020202020202020202020101010101010101010101010101010101010101010101010101010101010100000000000000000000000000000000>1 %_Br<05050505050505050404040404040404040404030303030303030303030303020202020202020202020202010101010101010101010101000000000000><91919190908F8F8F8E8E8E8D8D8C8C8C8B8B8A8A8A89898988888787878686858585848484838382828281818180807F7F7F7E7E7D7D7D7C7C7C7B7B7A><DBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E><2928282726262524242322222121201F1F1E1D1D1C1B1B1A191918181716161514141312121111100F0F0E0D0D0C0B0B0A0A0908080706060504040303>1 %_Br[0.51 0.71 0.31 0 1 50 100 %_BS%_0.51 0.71 0.31 0 1 50 100 Bs0.22 0.34 0.18 0 1 38.4615 71.0424 %_BS%_0.22 0.34 0.18 0 1 38.4615 71.0424 Bs0.12 0.25 0.32 0 1 50 53.6679 %_BS%_0.12 0.25 0.32 0 1 50 53.6679 Bs0.02 0.17 0.48 0 1 48 38.764 %_BS%_0.02 0.17 0.48 0 1 48 38.764 Bs0.000031 0.48 0.62 0.01 1 51.6129 13.1273 %_BS%_0.000031 0.48 0.62 0.01 1 51.6129 13.1273 Bs0.02 0.57 0.86 0.16 1 50 0 %_BS%_0.02 0.57 0.86 0.16 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Fade to Black)(Fade to Black) 0 2 Bd[00 %_Br[0 0 0 1 1 50 100 %_BS%_0 0 0 1 1 50 100 Bs0 0 0 1 1 50 0 %_BS%_0 0 0 1 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Linear Gradient)(Linear Gradient) 0 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 0 1 1 50 100 %_BS%_0 0 0 1 1 50 100 Bs0 0 0 0 1 50 0 %_BS%_0 0 0 0 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Radial Gradient)(Radial Gradient) 1 2 Bd[<FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100>0 %_Br[0 0 0 0 1 50 0 %_BS%_0 0 0 0 1 50 0 Bs0 0 0 1 1 50 100 %_BS%_0 0 0 1 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Soft Black Vignette)(Soft Black Vignette) 1 3 Bd[0.20.20.211 %_Br0.20.20.211 %_Br[0.2 0.2 0.2 1 1 68.3944 73.8792 %_BS%_0.2 0.2 0.2 1 1 68.3944 73.8792 Bs0.2 0.2 0.2 1 1 31.8603 88.7329 %_BS%_0.2 0.2 0.2 1 1 31.8603 88.7329 Bs0.2 0.2 0.2 1 1 50 100 %_BS%_0.2 0.2 0.2 1 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 17)(Unnamed gradient 17) 0 6 Bd[<FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB><2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A29292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292928282828282828282828282828><2B2B2B2B2A2A2A2A2A2A29292929292928282828282727272727272626262626262525252525252424242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717171716161616161615151515151514141414141313131313131212121212121111111111111010101010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A090909090909080808080808070707070707060606060606050505050505040404040404030303030303020202020202010101010101000000>1 %_Br<C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCFCFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDBDBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE><3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A39393939393939393939393939393938383838383838383838383838383737373737373737373737373737373636363636363636363636363636363535353535353535353535353535343434343434343434343434343434333333333333333333333333333333323232323232323232323232323231313131313131313131313131313130303030303030303030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E><0001010101010202020203030303030404040405050505050606060606070707070808080808090909090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F101010101011111111121212121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F2020202020212121212222222222232323232424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B>1 %_Br<DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3><3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B><1A1A1A1A1A1A191919191919191918181818181818171717171717171716161616161616151515151515151514141414141414131313131313131312121212121212121111111111111110101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A09090909090909090808080808080807070707070707070606060606060605050505050505050404040404040403030303030303030202020202020202010101010101010000>1 %_Br<1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA><000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C0D0D0D0D0E0E0E0F0F0F10101011111112121213131313141414151515161616171717181818181919191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F30303031313132323232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E><EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF><0000000001010101010101010202020202020203030303030303030404040404040405050505050505050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F1010101010101011111111111111111212121212121213131313131313131414141414141415151515151515151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A>1 %_Br<0000000000000001010101010101010101010102020202020202020202020202030303030303030303030303040404040404040404040404040505050505050505050505050606060606060606060606060607070707070707070707070707080808080808080808080808090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010101111111111111111111111111212121212121212121212121213131313131313131313131314141414141414141414><FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDED><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br[0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS%_0.000031 0.985199 0.157778 0.000031 1 50 100 Bs0.997467 1 0.178775 0.168856 1 50 80 %_BS%_0.997467 1 0.178775 0.168856 1 50 80 Bs0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs0.85388 0.242313 1 0.102846 1 50 40 %_BS%_0.85388 0.242313 1 0.102846 1 50 40 Bs0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs0.000031 0.99472 1 0.001282 1 50 0 %_BS%_0.000031 0.99472 1 0.001282 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 18)(Unnamed gradient 18) 1 6 Bd[<0000000000000001010101010101010101010102020202020202020202020202030303030303030303030303040404040404040404040404040505050505050505050505050606060606060606060606060607070707070707070707070707080808080808080808080808090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F101010101010101010101010101111111111111111111111111212121212121212121212121213131313131313131313131314141414141414141414><FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F6F6F6F6F6F6F6F5F5F5F5F5F5F5F5F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F3F3F3F3F3F3F3F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2F1F1F1F1F1F1F1F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEFEFEFEFEFEFEFEEEEEEEEEEEEEEEEEEEEEEEEEEEEEDEDED><000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<1415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DA><000001010102020203030303040404050505060606070707080808080909090A0A0A0B0B0B0C0C0C0D0D0D0D0E0E0E0F0F0F10101011111112121213131313141414151515161616171717181818181919191A1A1A1B1B1B1C1C1C1D1D1D1D1E1E1E1F1F1F20202021212122222223232323242424252525262626272727282828282929292A2A2A2B2B2B2C2C2C2D2D2D2D2E2E2E2F2F2F30303031313132323232333333343434353535363636373737383838383939393A3A3A3B3B3B3C3C3C3D3D3D3D3E><EDEDEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFF><0000000001010101010101010202020202020203030303030303030404040404040405050505050505050606060606060607070707070707070808080808080809090909090909090A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F1010101010101011111111111111111212121212121213131313131313131414141414141415151515151515151616161616161616171717171717171818181818181818191919191919191A1A1A1A1A1A>1 %_Br<DADADAD9D9D9D9D9D9D9D9D8D8D8D8D8D8D8D8D8D7D7D7D7D7D7D7D7D6D6D6D6D6D6D6D6D6D5D5D5D5D5D5D5D5D5D4D4D4D4D4D4D4D4D3D3D3D3D3D3D3D3D3D2D2D2D2D2D2D2D2D1D1D1D1D1D1D1D1D1D0D0D0D0D0D0D0D0D0CFCFCFCFCFCFCFCFCECECECECECECECECECDCDCDCDCDCDCDCDCDCCCCCCCCCCCCCCCCCBCBCBCBCBCBCBCBCBCACACACACACACACAC9C9C9C9C9C9C9C9C9C8C8C8C8C8C8C8C8C8C7C7C7C7C7C7C7C7C6C6C6C6C6C6C6C6C6C5C5C5C5C5C5C5C5C5C4C4C4C4C4C4C4C4C3C3C3C3C3><3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D3D><FFFEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B><1A1A1A1A1A1A191919191919191918181818181818171717171717171716161616161616151515151515151514141414141414131313131313131312121212121212121111111111111110101010101010100F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A09090909090909090808080808080807070707070707070606060606060605050505050505050404040404040403030303030303030202020202020202010101010101010000>1 %_Br<C3C3C4C4C4C5C5C5C5C6C6C6C7C7C7C8C8C8C8C9C9C9CACACACBCBCBCCCCCCCCCDCDCDCECECECFCFCFD0D0D0D0D1D1D1D2D2D2D3D3D3D4D4D4D4D5D5D5D6D6D6D7D7D7D7D8D8D8D9D9D9DADADADBDBDBDBDCDCDCDDDDDDDEDEDEDFDFDFDFE0E0E0E1E1E1E2E2E2E3E3E3E3E4E4E4E5E5E5E6E6E6E6E7E7E7E8E8E8E9E9E9EAEAEAEAEBEBEBECECECEDEDEDEEEEEEEEEFEFEFF0F0F0F1F1F1F2F2F2F2F3F3F3F4F4F4F5F5F5F5F6F6F6F7F7F7F8F8F8F9F9F9F9FAFAFAFBFBFBFCFCFCFDFDFDFDFEFEFE><3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECEDEEEFF0F1F2F3F4F5F6F7F8F9FAFBFCFDFEFF><3B3B3B3B3B3A3A3A3A3A3A3A3A3A3A3A3A3A3A3A39393939393939393939393939393938383838383838383838383838383737373737373737373737373737373636363636363636363636363636363535353535353535353535353535343434343434343434343434343434333333333333333333333333333333323232323232323232323232323231313131313131313131313131313130303030303030303030303030302F2F2F2F2F2F2F2F2F2F2F2F2F2F2F2E2E2E2E2E2E2E2E2E2E2E2E2E2E><0001010101010202020203030303030404040405050505050606060606070707070808080808090909090A0A0A0A0A0B0B0B0B0C0C0C0C0C0D0D0D0D0E0E0E0E0E0F0F0F0F101010101011111111121212121213131313131414141415151515151616161617171717171818181819191919191A1A1A1A1B1B1B1B1B1C1C1C1C1D1D1D1D1D1E1E1E1E1F1F1F1F1F2020202020212121212222222222232323232424242424252525252626262626272727272828282828292929292A2A2A2A2A2B2B2B>1 %_Br<FEFDFCFBFAF9F8F7F6F5F4F3F2F1F0EFEEEDECEBEAE9E8E7E6E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A999897969594939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F1E1D1C1B1A191817161514131211100F0E0D0C0B0A09080706050403020100><FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFB><2E2E2E2E2E2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2D2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2C2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2B2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A2A29292929292929292929292929292929292929292929292929292929292929292929292929292929292929292929292928282828282828282828282828><2B2B2B2B2A2A2A2A2A2A29292929292928282828282727272727272626262626262525252525252424242424242323232323232222222222222121212121212020202020201F1F1F1F1F1F1E1E1E1E1E1D1D1D1D1D1D1C1C1C1C1C1C1B1B1B1B1B1B1A1A1A1A1A1A19191919191918181818181817171717171716161616161615151515151514141414141313131313131212121212121111111111111010101010100F0F0F0F0F0F0E0E0E0E0E0E0D0D0D0D0D0D0C0C0C0C0C0C0B0B0B0B0B0B0A0A0A0A0A090909090909080808080808070707070707060606060606050505050505040404040404030303030303020202020202010101010101000000>1 %_Br[0.000031 0.99472 1 0.001282 1 50 0 %_BS%_0.000031 0.99472 1 0.001282 1 50 0 Bs0.079316 0.000031 0.930816 0.000031 1 50 20 %_BS%_0.079316 0.000031 0.930816 0.000031 1 50 20 Bs0.85388 0.242313 1 0.102846 1 50 40 %_BS%_0.85388 0.242313 1 0.102846 1 50 40 Bs0.764675 0.238682 0.230686 0.001251 1 50 60 %_BS%_0.764675 0.238682 0.230686 0.001251 1 50 60 Bs0.997467 1 0.178775 0.168856 1 50 80 %_BS%_0.997467 1 0.178775 0.168856 1 50 80 Bs0.000031 0.985199 0.157778 0.000031 1 50 100 %_BS%_0.000031 0.985199 0.157778 0.000031 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 20)(Unnamed gradient 20) 0 2 Bd[<0001020303040506070708090A0B0C0C0D0E0F1011111213141516161718191A1B1B1C1D1E1F2020212223242525262728292A2A2B2C2D2E2F2F3031323334343536373839393A3B3C3D3E3E3F4041424343444546474848494A4B4C4D4D4E4F5051525253545556575758595A5B5B5C5D5E5F6060616263646565666768696A6A6B6C6D6E6F6F7071727374747576777879797A7B7C7D7E7E7F8081828383848586878888898A8B8C8D8D8E8F9091929293949596979798999A9B9C9C9D9E9FA0A1A1A2A3A4A5A6A6A7A8A9AAABABACADAEAFB0B0B1B2B3B4B4B5B6B7B8B9B9BABBBCBDBEBEBF><000102020304050506070808090A0B0B0C0D0E0E0F101111121314141516171718191A1A1B1C1D1D1E1F20202122232324252626272829292A2B2C2C2D2E2F2F303132323334353636373839393A3B3C3C3D3E3F3F404142424344454546474848494A4B4B4C4D4E4E4F505151525354545556575758595A5A5B5C5D5D5E5F606061626363646566666768696A6A6B6C6D6D6E6F70707172737374757676777879797A7B7C7C7D7E7F7F808182828384858586878888898A8B8B8C8D8E8E8F909191929394949596979798999A9A9B9C9D9D9E9FA0A1A1A2A3A4A4A5A6A7A7A8A9AAAAABACADAD><000101020304040506070708090A0A0B0C0D0D0E0F10101112131314151616171819191A1B1C1C1D1E1E1F202121222324242526272728292A2A2B2C2D2D2E2F30303132333334353636373838393A3B3B3C3D3E3E3F404141424344444546474748494A4A4B4C4D4D4E4F50505152525354555556575858595A5B5B5C5D5E5E5F606161626364646566676768696A6A6B6C6C6D6E6F6F707172727374757576777878797A7B7B7C7D7E7E7F80818182838484858686878889898A8B8C8C8D8E8F8F909192929394959596979898999A9B9B9C9D9E9E9FA0A1A1A2A3A3A4A5A6A6A7A8A9A9AAAB><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6>1 %_Br[0.75021 0.679683 0.670222 0.90164 1 50 100 %_BS%_0.75021 0.679683 0.670222 0.90164 1 50 100 Bs0.000031 0.000031 0.000031 0.000031 1 50 0 %_BS%_0.000031 0.000031 0.000031 0.000031 1 50 0 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 21)(Unnamed gradient 21) 0 5 Bd[<04050505050505050505050505060606060606060606060606070707070707070707070707070808080808080808080808080809090909090909090909090909090A0A0A0A0A0A0A0A0A0A0A0A0A0A0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0C0C0C0C0C0C0C0C0C0C0C0C0C0C0C0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0E0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0F10101010101010101010101010101010101010101010111111111111111111111111111111111111111111111111111112121212121212121212121212121212121212121212121212121212121212121212121212121213131313131313131313131313131313><E5E4E3E2E1E0DFDEDDDCDBDAD9D8D7D6D5D4D3D2D1D0CFCECDCDCCCBCAC9C8C7C6C5C4C3C2C1C0BFBFBEBDBCBBBAB9B8B7B6B6B5B4B3B2B1B0AFAFAEADACABAAA9A8A8A7A6A5A4A3A3A2A1A09F9E9E9D9C9B9A9A9998979696959493929291908F8F8E8D8C8B8B8A89888887868585848383828180807F7E7E7D7C7B7B7A7979787777767575747373727171706F6F6E6D6D6C6B6B6A6A69686867676665656464636262616160605F5E5E5D5D5C5C5B5B5A5A59595857575656555554545353535252515150504F4F4E4E4E4D4D4C4C4B4B4B4A4A49494948484847474646464545454444444343434342424241414141404040403F3F3F3F3F3E3E3E3E3E3E3D3D3D3D3D3D3D3D3D3D><FFFFFFFFFFFFFFFFFFFFFFFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFCFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F9F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7F7><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<1414141414141414141414131313131313131313131313131313121212121212121212121212121211111111111111111111111111111110101010101010101010101010100F0F0F0F0F0F0F0F0F0F0F0F0F0F0F0E0E0E0E0E0E0E0E0E0E0E0E0E0E0D0D0D0D0D0D0D0D0D0D0D0D0D0D0D0C0C0C0C0C0C0C0C0C0C0C0C0C0C0B0B0B0B0B0B0B0B0B0B0B0B0B0B0B0A0A0A0A0A0A0A0A0A0A0A0A0A0A0909090909090909090909090909090808080808080808080808080808070707070707070707070707070707060606060606060606060606060605050505050505050505050505050504><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5><EDEDEEEEEEEEEEEEEEEEEEEEEEEEEEEFEFEFEFEFEFEFEFEFEFEFEFEFF0F0F0F0F0F0F0F0F0F0F0F0F0F1F1F1F1F1F1F1F1F1F1F1F1F1F2F2F2F2F2F2F2F2F2F2F2F2F2F3F3F3F3F3F3F3F3F3F3F3F3F3F4F4F4F4F4F4F4F4F4F4F4F4F4F5F5F5F5F5F5F5F5F5F5F5F5F5F6F6F6F6F6F6F6F6F6F6F6F6F6F7F7F7F7F7F7F7F7F7F7F7F7F7F8F8F8F8F8F8F8F8F8F8F8F8F8F9F9F9F9F9F9F9F9F9F9F9F9F9FAFAFAFAFAFAFAFAFAFAFAFAFAFBFBFBFBFBFBFBFBFBFBFBFBFBFCFCFCFCFCFCFCFCFCFCFCFCFCFDFDFDFDFDFDFDFDFDFDFDFDFDFEFEFEFEFEFEFEFEFEFEFEFEFEFFFFFFFFFFFFFF><0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000>1 %_Br<1F1F1F1F1F1F1F1F1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1E1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1D1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1C1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1B1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A1A19191919191919191919191919191919191919191918181818181818181818181818181818181818181717171717171717171717171717171717171717171616161616161616161616161616161616161616151515151515151515151515151515151515151515141414141414><848382828181807F7F7E7E7D7C7C7B7B7A79797878777676757574737372727170706F6F6E6D6D6C6C6B6A6A69696867676666656464636362616160605F5E5E5D5D5C5B5B5A5A595858575756555554545352525151504F4F4E4E4D4C4C4B4B4A49494848474646454544434342424140403F3E3E3D3D3C3B3B3A3A393838373736353534343332323131302F2F2E2E2D2C2C2B2B2A29292828272626252524232322222120201F1F1E1D1D1C1C1B1A1A19191817171616151414131312111110100F0E0E0D0D0C0B0B0A0A09080807070605050404030202010100><131415161718191A1B1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F404142434445464748494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2A3A4A5A6A7A8A9AAABACADAEAFB0B1B2B3B4B5B6B7B8B9BABBBCBDBEBFC0C1C2C3C4C5C6C7C8C9CACBCCCDCECFD0D1D2D3D4D5D6D7D8D9DADBDCDDDEDFE0E1E2E3E4E5E6E7E8E9EAEBECED>0.0000311 %_Br<C0BFBEBDBCBBBAB9B8B7B6B5B4B3B2B1B0AFAEADACABAAA9A8A7A6A5A4A3A2A1A09F9E9D9C9B9A9998979694939291908F8E8D8C8B8A898887868584838281807F7E7D7C7B7A797877767574737271706F6E6D6C6B6A696867666564636261605F5E5D5C5B5A595857565554535251504F4E4D4C4B4A494847464544434241403F3E3D3C3B3A393837363534333231302F2E2D2C2B2A292827262524232221201F><2E2F303031313232333334343535363637383839393A3A3B3B3C3C3D3D3E3E3F3F4041414242434344444545464647474849494A4A4B4B4C4C4D4D4E4E4F4F5051515252535354545555565657575859595A5A5B5B5C5C5D5D5E5E5F5F6060616262636364646565666667676868696A6A6B6B6C6C6D6D6E6E6F6F707071727273737474757576767777787879797A7B7B7C7C7D7D7E7E7F7F8080818182838384><424141414040403F3F3F3F3E3E3E3D3D3D3D3C3C3C3B3B3B3A3A3A3A393939383838383737373636363535353534343433333333323232313131303030302F2F2F2E2E2E2E2D2D2D2C2C2C2B2B2B2B2A2A2A292929292828282727272626262625252524242424232323222222212121212020201F1F1F1F1E1E1E1D1D1D1C1C1C1C1B1B1B1A1A1A1A191919181818181717171616161515151514141413131313>0.0000311 %_Br[0.073152 0.237522 0.969482 0.000031 1 50 100 %_BS%_0.073152 0.237522 0.969482 0.000031 1 50 100 Bs0.017517 0.897581 1 0.001343 1 35.5263 79.7753 %_BS%_0.017517 0.897581 1 0.001343 1 35.5263 79.7753 Bs0.079316 0.000031 0.930816 0.000031 1 50 55.618 %_BS%_0.079316 0.000031 0.930816 0.000031 1 50 55.618 Bs0.121096 0.516075 0.072572 0.000031 1 50 44.9438 %_BS%_0.121096 0.516075 0.072572 0.000031 1 50 44.9438 Bs0.751858 0.182254 0.256992 0.000031 1 50 19.1011 %_BS%_0.751858 0.182254 0.256992 0.000031 1 50 19.1011 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 396)(Unnamed gradient 396) 1 2 Bd[0.0000310.0000310.0000310.0000311 %_Br[0.000031 0.000031 0.000031 0.000031 1 87 44.4444 %_BS%_0.000031 0.000031 0.000031 0.000031 1 87 44.4444 Bs0.000031 0.000031 0.000031 0.000031 1 50 100 %_BS%_0.000031 0.000031 0.000031 0.000031 1 50 100 BsBD%AI5_EndGradient%AI5_BeginGradient: (Unnamed gradient 72)(Unnamed gradient 72) 0 2 Bd[<CCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCDCECECECECECECECECECECECE><09090A0B0C0C0D0E0E0F10111112131414151617171819191A1B1C1C1D1E1F1F202122222324242526272728292A2A2B2C2D2D2E2F2F303132323334353536373838393A3A3B3C3D3D3E3F40404142424344454546474848494A4B4B4C4D4D4E4F50505152535354555656575858595A5B5B5C5D5E5E5F60616162636364656666676869696A6B6C6C6D6E6E6F70717172737474757677777879797A7B7C7C7D7E7F><FFFFFFFFFEFEFEFEFEFEFEFDFDFDFDFDFDFDFDFCFCFCFCFCFCFCFBFBFBFBFBFBFBFAFAFAFAFAFAFAFAF9F9F9F9F9F9F9F8F8F8F8F8F8F8F7F7F7F7F7F7F7F7F6F6F6F6F6F6F6F5F5F5F5F5F5F5F4F4F4F4F4F4F4F4F3F3F3F3F3F3F3F2F2F2F2F2F2F2F1F1F1F1F1F1F1F0F0F0F0F0F0F0F0EFEFEFEFEFEFEFEEEEEEEEEEEEEEEDEDEDEDEDEDEDEDECECECECECECECEBEBEBEBEBEBEBEAEAEAEAEAEAEAEAE9E9E9E9><000102030405060708090A0B0C0D0E0F101112131415161718191A1B1C1D1E1F202122232425262728292A2B2C2D2E2F303132333435363738393A3B3C3D3E3F4041424344454647494A4B4C4D4E4F505152535455565758595A5B5C5D5E5F606162636465666768696A6B6C6D6E6F707172737475767778797A7B7C7D7E7F808182838485868788898A8B8C8D8E8F909192939495969798999A9B9C9D9E9FA0A1A2>1 %_Br[0.806394 0.496437 0.913573 0.634302 1 50 98.3146 %_BS%_0.806394 0.496437 0.913573 0.634302 1 50 98.3146 Bs0.798978 0.033753 1 0.00119 1 50 0 %_BS%_0.798978 0.033753 1 0.00119 1 50 0 BsBD%AI5_EndGradient%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI3_BeginPattern: (Fish Pattern)(Fish Pattern) 77.5215 31.4824 155.3037 96.7959 [%AI3_Tile(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 38.085 m26.7441 24.5742 7.7324 50.1514 v7.7324 0.7559 l26.7441 26.334 48.6924 12.8223 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 38.085 m26.7441 24.5742 7.7324 50.1514 v7.7324 0.7559 l26.7441 26.334 48.6924 12.8223 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 38.085 m104.5264 24.5742 85.5137 50.1514 v85.5137 0.7559 l104.5264 26.334 126.4736 12.8223 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 38.085 m104.5264 24.5742 85.5137 50.1514 v85.5137 0.7559 l104.5264 26.334 126.4736 12.8223 yS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.4521 70.7412 m144.4004 57.2314 163.4121 82.8076 v163.4121 33.4131 l144.4004 58.9902 122.4521 45.4785 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.4521 70.7412 m144.4004 57.2314 163.4121 82.8076 v163.4121 33.4131 l144.4004 58.9902 122.4521 45.4785 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 78.6689 m122.4805 70.8115 l144.4277 57.3008 163.4404 82.8779 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 78.6689 m122.4805 70.8115 l144.4277 57.3008 163.4404 82.8779 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 103.3984 m104.5264 89.8877 85.5137 115.4648 v85.5137 66.0693 l104.5264 91.6475 126.4736 78.1357 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.4736 103.3984 m104.5264 89.8877 85.5137 115.4648 v85.5137 66.0693 l104.5264 91.6475 126.4736 78.1357 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 102.8643 m122.4805 110.7227 l144.4277 124.2334 163.4404 98.6563 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 102.8643 m122.4805 110.7227 l144.4277 124.2334 163.4404 98.6563 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 98.3916 m158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C99.5859 94.7793 99.5859 90.6816 v99.5859 86.9863 103.6016 87.5869 Y123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c170.8945 93.6357 164.7207 98.3916 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 98.3916 m158.3359 102.5957 153.498 106.7451 141.2617 106.7451 c121.0918 106.7451 123.8242 93.9854 103.6523 93.9854 C99.5859 94.7793 99.5859 90.6816 v99.5859 86.9863 103.6016 87.5869 Y123.7754 87.5869 121.0439 74.8252 141.2168 74.8252 c151.6201 74.8252 160.1045 79.6699 163.8457 82.3398 c164.7344 82.9736 165.3613 83.4873 165.6768 83.7822 c165.7119 83.8154 165.7529 83.8525 165.79 83.8867 c167.4775 85.4463 170.8945 88.2871 170.8945 90.7666 c170.8945 93.6357 164.7207 98.3916 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR157.2695 96.7959 m157.2695 95.71 156.3896 94.8291 155.3027 94.8291 c154.2168 94.8291 153.3369 95.71 153.3369 96.7959 c153.3369 97.8828 154.2168 98.7637 155.3027 98.7637 c156.3896 98.7637 157.2695 97.8828 157.2695 96.7959 cf142.3477 90.6719 m142.3477 96.1738 146.54 100.6943 151.9033 101.2197 C151.5596 101.2529 151.2109 101.2715 150.8584 101.2715 c145.0039 101.2715 140.2588 96.5264 140.2588 90.6719 c140.2588 84.8184 145.0039 80.0723 150.8584 80.0723 c151.2109 80.0723 151.5596 80.0918 151.9033 80.125 C146.54 80.6494 142.3477 85.1709 142.3477 90.6719 cf%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 78.6689 m44.6982 70.8115 l66.6465 57.3008 85.6582 82.8779 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 78.6689 m44.6982 70.8115 l66.6465 57.3008 85.6582 82.8779 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.6699 70.7412 m66.6182 57.2314 85.6299 82.8076 v85.6299 33.4131 l66.6182 58.9902 44.6699 45.4785 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.6699 70.7412 m66.6182 57.2314 85.6299 82.8076 v85.6299 33.4131 l66.6182 58.9902 44.6699 45.4785 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 103.3984 m26.7441 89.8877 7.7324 115.4648 v7.7324 66.0693 l26.7441 91.6475 48.6924 78.1357 yF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.6924 103.3984 m26.7441 89.8877 7.7324 115.4648 v7.7324 66.0693 l26.7441 91.6475 48.6924 78.1357 yS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 102.8643 m44.6982 110.7227 l66.6465 124.2334 85.6582 98.6563 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 102.8643 m44.6982 110.7227 l66.6465 124.2334 85.6582 98.6563 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 98.3916 m80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C21.8037 94.7793 21.8037 90.6816 v21.8037 86.9863 25.8193 87.5869 Y45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c93.1123 93.6357 86.9395 98.3916 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 98.3916 m80.5547 102.5957 75.7168 106.7451 63.4805 106.7451 c43.3105 106.7451 46.042 93.9854 25.8701 93.9854 C21.8037 94.7793 21.8037 90.6816 v21.8037 86.9863 25.8193 87.5869 Y45.9932 87.5869 43.2617 74.8252 63.4355 74.8252 c73.8389 74.8252 82.3223 79.6699 86.0645 82.3398 c86.9521 82.9736 87.5791 83.4873 87.8945 83.7822 c87.9307 83.8154 87.9707 83.8525 88.0088 83.8867 c89.6963 85.4463 93.1123 88.2871 93.1123 90.7666 c93.1123 93.6357 86.9395 98.3916 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.4883 96.7959 m79.4883 95.71 78.6084 94.8291 77.5215 94.8291 c76.4355 94.8291 75.5557 95.71 75.5557 96.7959 c75.5557 97.8828 76.4355 98.7637 77.5215 98.7637 c78.6084 98.7637 79.4883 97.8828 79.4883 96.7959 cf64.5654 90.6719 m64.5654 96.1738 68.7578 100.6943 74.1211 101.2197 C73.7773 101.2529 73.4297 101.2715 73.0762 101.2715 c67.2227 101.2715 62.4766 96.5264 62.4766 90.6719 c62.4766 84.8184 67.2227 80.0723 73.0762 80.0723 c73.4297 80.0723 73.7773 80.0918 74.1211 80.125 C68.7578 80.6494 64.5654 85.1709 64.5654 90.6719 cf%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 46.0117 m48.6641 38.1553 l26.7158 24.6436 7.7041 50.2217 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 46.0117 m48.6641 38.1553 l26.7158 24.6436 7.7041 50.2217 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 70.207 m48.6641 78.0654 l26.7158 91.5762 7.7041 65.999 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR44.3682 70.207 m48.6641 78.0654 l26.7158 91.5762 7.7041 65.999 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR67.4922 61.3281 m47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C0.25 60.9795 0.25 58.1104 v0.25 55.6309 3.666 52.79 5.3535 51.2305 c5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C71.5586 54.3301 71.5586 58.0254 v71.5586 62.123 67.4922 61.3281 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR67.4922 61.3281 m47.3203 61.3281 50.0518 74.0879 29.8818 74.0879 c17.6455 74.0879 12.8076 69.9395 6.4229 65.7354 C0.25 60.9795 0.25 58.1104 v0.25 55.6309 3.666 52.79 5.3535 51.2305 c5.3916 51.1963 5.4326 51.1592 5.4678 51.126 c5.7832 50.8311 6.4102 50.3174 7.2979 49.6836 c11.04 47.0137 19.5234 42.1689 29.9268 42.1689 c50.1006 42.1689 47.3691 54.9307 67.543 54.9307 C71.5586 54.3301 71.5586 58.0254 v71.5586 62.123 67.4922 61.3281 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR13.874 64.1396 m13.874 63.0527 14.7539 62.1729 15.8408 62.1729 c16.9268 62.1729 17.8066 63.0527 17.8066 64.1396 c17.8066 65.2266 16.9268 66.1064 15.8408 66.1064 c14.7539 66.1064 13.874 65.2266 13.874 64.1396 cf28.7969 58.0156 m28.7969 63.5176 24.6045 68.0381 19.2412 68.5635 C19.585 68.5967 19.9326 68.6152 20.2861 68.6152 c26.1396 68.6152 30.8857 63.8691 30.8857 58.0156 c30.8857 52.1611 26.1396 47.416 20.2861 47.416 c19.9326 47.416 19.585 47.4355 19.2412 47.4688 C24.6045 47.9932 28.7969 52.5146 28.7969 58.0156 cf%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 46.0117 m126.4463 38.1553 l104.498 24.6436 85.4863 50.2217 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 46.0117 m126.4463 38.1553 l104.498 24.6436 85.4863 50.2217 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 70.207 m126.4463 78.0654 l104.498 91.5762 85.4863 65.999 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR122.1504 70.207 m126.4463 78.0654 l104.498 91.5762 85.4863 65.999 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR145.2734 61.3281 m125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C78.0322 60.9795 78.0322 58.1104 v78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c83.1729 51.1963 83.2139 51.1592 83.25 51.126 c83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C149.3408 54.3301 149.3408 58.0254 v149.3408 62.123 145.2734 61.3281 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR145.2734 61.3281 m125.1025 61.3281 127.834 74.0879 107.6641 74.0879 c95.4277 74.0879 90.5898 69.9395 84.2051 65.7354 C78.0322 60.9795 78.0322 58.1104 v78.0322 55.6309 81.4482 52.79 83.1357 51.2305 c83.1729 51.1963 83.2139 51.1592 83.25 51.126 c83.5654 50.8311 84.1914 50.3174 85.0801 49.6836 c88.8223 47.0137 97.3057 42.1689 107.709 42.1689 c127.8828 42.1689 125.1514 54.9307 145.3242 54.9307 C149.3408 54.3301 149.3408 58.0254 v149.3408 62.123 145.2734 61.3281 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR91.6563 64.1396 m91.6563 63.0527 92.5361 62.1729 93.623 62.1729 c94.709 62.1729 95.5889 63.0527 95.5889 64.1396 c95.5889 65.2266 94.709 66.1064 93.623 66.1064 c92.5361 66.1064 91.6563 65.2266 91.6563 64.1396 cf106.5781 58.0156 m106.5781 63.5176 102.3867 68.0381 97.0234 68.5635 C97.3662 68.5967 97.7148 68.6152 98.0684 68.6152 c103.9219 68.6152 108.668 63.8691 108.668 58.0156 c108.668 52.1611 103.9219 47.416 98.0684 47.416 c97.7148 47.416 97.3662 47.4355 97.0234 47.4688 C102.3867 47.9932 106.5781 52.5146 106.5781 58.0156 cf%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 13.3555 m122.4805 5.498 l144.4277 -8.0127 163.4404 17.5645 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 13.3555 m122.4805 5.498 l144.4277 -8.0127 163.4404 17.5645 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 37.5508 m122.4805 45.4092 l144.4277 58.9199 163.4404 33.3428 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR126.7764 37.5508 m122.4805 45.4092 l144.4277 58.9199 163.4404 33.3428 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 33.0781 m158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C99.5859 29.4658 99.5859 25.3691 v99.5859 21.6729 103.6016 22.2734 Y123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c165.7119 18.502 165.7529 18.54 165.79 18.5732 c167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c170.8945 28.3232 164.7207 33.0781 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR164.7207 33.0781 m158.3359 37.2822 153.498 41.4316 141.2617 41.4316 c121.0918 41.4316 123.8242 28.6719 103.6523 28.6719 C99.5859 29.4658 99.5859 25.3691 v99.5859 21.6729 103.6016 22.2734 Y123.7754 22.2734 121.0439 9.5117 141.2168 9.5117 c151.6201 9.5117 160.1045 14.3564 163.8457 17.0273 c164.7344 17.6602 165.3613 18.1738 165.6768 18.4688 c165.7119 18.502 165.7529 18.54 165.79 18.5732 c167.4775 20.1338 170.8945 22.9736 170.8945 25.4531 c170.8945 28.3232 164.7207 33.0781 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR157.2695 31.4824 m157.2695 30.3965 156.3896 29.5156 155.3027 29.5156 c154.2168 29.5156 153.3369 30.3965 153.3369 31.4824 c153.3369 32.5693 154.2168 33.4502 155.3027 33.4502 c156.3896 33.4502 157.2695 32.5693 157.2695 31.4824 cf142.3477 25.3594 m142.3477 30.8604 146.54 35.3809 151.9033 35.9063 C151.5596 35.9395 151.2109 35.959 150.8584 35.959 c145.0039 35.959 140.2588 31.2129 140.2588 25.3594 c140.2588 19.5049 145.0039 14.7598 150.8584 14.7598 c151.2109 14.7598 151.5596 14.7783 151.9033 14.8115 C146.54 15.3359 142.3477 19.8574 142.3477 25.3594 cf%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 13.3555 m44.6982 5.498 l66.6465 -8.0127 85.6582 17.5645 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 13.3555 m44.6982 5.498 l66.6465 -8.0127 85.6582 17.5645 vS%AI6_EndPatternLayer) &(0 O 0 R 0.02 0.73 1 0 k 0.02 0.73 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 37.5508 m44.6982 45.4092 l66.6465 58.9199 85.6582 33.3428 vF%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR48.9941 37.5508 m44.6982 45.4092 l66.6465 58.9199 85.6582 33.3428 vS%AI6_EndPatternLayer) &(0 O 0 R 0.01 1 1 0 k 0.01 1 1 0 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 33.0781 m80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C21.8037 29.4658 21.8037 25.3691 v21.8037 21.6729 25.8193 22.2734 Y45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c87.9307 18.502 87.9707 18.54 88.0088 18.5732 c89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c93.1123 28.3232 86.9395 33.0781 Yf%AI6_EndPatternLayer) &(0 O 0 R 0.753658 0.603387 0.711482 0.831327 k 0.753658 0.603387 0.711482 0.831327 K) @(%AI6_BeginPatternLayer0 J 0 j 0.5 w 4 M []0 d0 XR86.9395 33.0781 m80.5547 37.2822 75.7168 41.4316 63.4805 41.4316 c43.3105 41.4316 46.042 28.6719 25.8701 28.6719 C21.8037 29.4658 21.8037 25.3691 v21.8037 21.6729 25.8193 22.2734 Y45.9932 22.2734 43.2617 9.5117 63.4355 9.5117 c73.8389 9.5117 82.3223 14.3564 86.0645 17.0273 c86.9521 17.6602 87.5791 18.1738 87.8945 18.4688 c87.9307 18.502 87.9707 18.54 88.0088 18.5732 c89.6963 20.1338 93.1123 22.9736 93.1123 25.4531 c93.1123 28.3232 86.9395 33.0781 Ys%AI6_EndPatternLayer) &(0 O 0 R 1 0.89 0.01 0 k 1 0.89 0.01 0 K) @(%AI6_BeginPatternLayer0 J 0 j 1 w 4 M []0 d0 XR79.4883 31.4824 m79.4883 30.3965 78.6084 29.5156 77.5215 29.5156 c76.4355 29.5156 75.5557 30.3965 75.5557 31.4824 c75.5557 32.5693 76.4355 33.4502 77.5215 33.4502 c78.6084 33.4502 79.4883 32.5693 79.4883 31.4824 cf64.5654 25.3594 m64.5654 30.8604 68.7578 35.3809 74.1211 35.9063 C73.7773 35.9395 73.4297 35.959 73.0762 35.959 c67.2227 35.959 62.4766 31.2129 62.4766 25.3594 c62.4766 19.5049 67.2227 14.7598 73.0762 14.7598 c73.4297 14.7598 73.7773 14.7783 74.1211 14.8115 C68.7578 15.3359 64.5654 19.8574 64.5654 25.3594 cf%AI6_EndPatternLayer) &] E%AI3_EndPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginBrushPattern(Unnamed 20)0 Auu0 J 0 j 1 w 4 M []0 d0 XR-3964.4448 3939.9543 m-3750.8447 3939.9543 L-3750.8447 3932.1536 L-3964.4448 3932.1536 L-3964.4448 3939.9543 Ln0 O0 0 0 1 k-3964.4448 3936.0547 m-3954.4304 3938.5464 -3947.6311 3939.8943 -3935.6455 3939.9543 c-3922.6633 3940.0195 -3857.6445 3939.9543 y-3792.6265 3940.0195 -3779.6445 3939.9543 v-3767.6572 3939.8943 -3760.8584 3938.5464 -3750.8447 3936.0547 C-3760.8584 3933.5632 -3767.6572 3932.2151 -3779.6445 3932.1536 c-3792.6265 3932.0884 -3857.6445 3932.1536 y-3922.6633 3932.0884 -3935.6455 3932.1536 v-3947.6311 3932.2151 -3954.4304 3933.5632 -3964.4448 3936.0547 CfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 12)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7836.9448 7812.519 m-7739.1899 7812.519 L-7739.1899 7791.8037 L-7836.9448 7791.8037 L-7836.9448 7812.519 Ln0 O0 g1 XR-7739.5034 7807.8374 m-7754.7695 7794.0493 -7772.4985 7814.9688 -7787.8726 7802.6855 C-7786.3647 7797.0332 -7780.7046 7803.9868 -7778.4624 7799.3408 C-7778.3789 7797.7397 -7781.5762 7799.2397 -7781.4575 7797.1196 C-7779.5693 7793.7109 -7774.8403 7794.2085 -7773.5112 7798.2568 C-7767.2563 7796.2871 -7760.7183 7790.3438 -7754.7295 7792.1367 C-7753.2119 7793.4868 -7754.0156 7794.6709 -7753.5659 7795.9468 C-7746.2319 7791.5117 -7737.4092 7800.647 -7739.5034 7807.8374 Cf-7783.2295 7809.4517 m-7783.7695 7809.8276 -7782.8726 7810.939 -7783.1978 7811.4277 C-7785.2686 7810.6748 -7787.6367 7806.5972 -7789.4185 7803.8301 C-7789.2085 7805.3589 -7790.6089 7806.6831 -7792.0229 7804.4517 C-7792.1831 7803.6348 -7791.3115 7803.3477 -7791.6177 7802.4556 C-7792.7754 7800.8877 -7793.7925 7802.3735 -7794.7246 7802.1445 C-7795.2632 7801.3804 -7795.5591 7800.7383 -7795.6265 7800.2134 C-7789.4985 7797.3936 -7782.8711 7809.1958 -7776.6904 7809.6221 C-7776.8496 7812.6348 -7780.8003 7814.3198 -7783.2295 7809.4517 Cfuu0 XR-7780.1055 7804.1797 m-7794.9595 7797.6396 -7816.4185 7801.8613 -7832.3135 7801.8389 c-7838.2437 7801.8325 -7827.8413 7801.8408 -7833.7715 7801.8452 cN0 O0 g-7777.75 7802.9585 m-7795.0923 7795.7832 -7814.8789 7800.5752 -7832.9985 7800.5054 C-7833.8057 7801.3916 -7834.6133 7802.2813 -7835.4199 7803.1665 C-7834.6421 7803.1665 -7833.8643 7803.1665 -7833.0869 7803.1724 C-7832.2793 7802.2847 -7831.4722 7801.3984 -7830.6655 7800.5117 C-7831.2964 7800.5205 -7831.9292 7800.5142 -7832.5605 7800.5142 c-7834.3184 7800.5176 -7838.8613 7803.1816 -7834.9824 7803.1768 c-7834.3511 7803.1768 -7833.7183 7803.1836 -7833.0869 7803.1724 c-7831.3604 7803.1445 -7826.7632 7800.5425 -7830.6655 7800.5117 c-7831.4424 7800.5029 -7832.2207 7800.5054 -7832.9985 7800.5054 c-7834.7529 7800.5044 -7839.3022 7803.1519 -7835.4199 7803.1665 c-7818.0625 7803.2344 -7799.0474 7798.5327 -7782.46 7805.3984 c-7781.0483 7805.9829 -7775.7529 7803.7861 -7777.75 7802.9585 c-7777.75 7802.9585 lfUUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 158)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7836.9448 7812.519 m-7824.9526 7812.519 L-7824.9526 7801.8828 L-7836.9448 7801.8828 L-7836.9448 7812.519 Ln-7836.2666 7801.8828 m-7836.2666 7805.8325 L-7836.2666 7806.8672 L-7836.2666 7807.5054 L-7836.2666 7808.6045 L-7836.2666 7812.519 L-7825.6313 7812.519 L-7825.6313 7808.6045 L-7825.6313 7807.5054 L-7825.6313 7806.8672 L-7825.6313 7805.8325 L-7825.6313 7801.8828 L-7836.2666 7801.8828 Lnu0 O0.746094 0.675781 0.667969 0.898438 k-7824.9526 7808.6045 m-7824.9526 7807.9585 L-7836.9448 7807.9604 L-7836.9448 7808.6045 L-7836.9448 7808.6694 L-7824.9526 7808.6685 L-7824.9526 7808.6045 Lf-7824.9526 7805.8325 m-7836.9448 7805.8325 L-7836.9448 7806.5415 L-7824.9526 7806.5415 L-7824.9526 7805.8325 Lf0.15 1 0.9 0.1 k-7824.9526 7807.5708 m-7836.9448 7807.5708 L-7836.9448 7807.9604 L-7824.9526 7807.9585 L-7824.9526 7807.5708 Lf-7824.9526 7806.8672 m-7824.9526 7806.5415 L-7836.9448 7806.5415 L-7836.9448 7806.8672 L-7836.9448 7806.9312 L-7824.9526 7806.9312 L-7824.9526 7806.8672 Lf0 1 1 0 k-7824.9526 7807.5054 m-7824.9526 7806.9312 L-7836.9448 7806.9312 L-7836.9448 7807.5054 L-7836.9448 7807.5708 L-7824.9526 7807.5708 L-7824.9526 7807.5054 LfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 160)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7836.9448 7811.3237 m-7826.3086 7811.3237 L-7826.3086 7800.687 L-7836.9448 7800.687 L-7836.9448 7811.3237 Ln-7836.9448 7800.687 m-7836.9448 7804.5781 L-7836.9448 7805.2876 L-7836.9448 7805.6709 L-7836.9448 7806.3125 L-7836.9448 7806.7007 L-7836.9448 7807.4092 L-7836.9448 7811.3237 L-7826.3086 7811.3237 L-7826.3086 7800.687 L-7836.9448 7800.687 Lnu0 O0.746094 0.675781 0.667969 0.898438 k-7830.9033 7812.519 m-7830.1963 7812.519 L-7830.2056 7807.4751 L-7824.4678 7807.4741 L-7824.4678 7806.7637 L-7830.9155 7806.7661 L-7830.9033 7812.519 Lf-7832.5503 7805.0532 m-7832.8145 7805.3164 -7832.9663 7805.6821 -7832.9663 7806.0557 C-7832.9521 7812.519 L-7832.2427 7812.519 L-7832.2573 7806.0557 L-7832.2573 7805.8687 -7832.1812 7805.687 -7832.0493 7805.5542 c-7831.9165 7805.4229 -7831.7339 7805.3477 -7831.5469 7805.3477 C-7824.4678 7805.3477 L-7824.4678 7804.6372 L-7831.5469 7804.6372 L-7831.9209 7804.6372 -7832.2866 7804.7886 -7832.5503 7805.0532 cf0.15 1 0.9 0.1 k-7831.2275 7812.519 m-7830.9033 7812.519 L-7830.9155 7806.7661 L-7824.4678 7806.7637 L-7824.4678 7806.3745 L-7831.2275 7806.3745 L-7831.2275 7812.519 Lf-7832.0493 7805.5542 m-7832.1812 7805.687 -7832.2573 7805.8687 -7832.2573 7806.0557 C-7832.2427 7812.519 L-7831.8667 7812.519 L-7831.8667 7806.0557 L-7831.8667 7805.9717 -7831.8325 7805.8901 -7831.7729 7805.8301 c-7831.7144 7805.771 -7831.6313 7805.7383 -7831.5474 7805.7383 C-7824.4678 7805.7383 L-7824.4678 7805.3477 L-7831.5469 7805.3477 L-7831.7339 7805.3477 -7831.9165 7805.4229 -7832.0493 7805.5542 cf0 1 1 0 k-7831.7729 7805.8301 m-7831.8325 7805.8901 -7831.8667 7805.9717 -7831.8667 7806.0557 C-7831.8667 7812.519 L-7831.2275 7812.519 L-7831.2275 7806.3745 L-7824.4678 7806.3745 L-7824.4678 7805.7383 L-7831.5474 7805.7383 L-7831.6313 7805.7383 -7831.7144 7805.771 -7831.7729 7805.8301 cfUU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 161)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7836.9448 7812.519 m-7824.9526 7812.519 L-7824.9526 7801.8828 L-7836.9448 7801.8828 L-7836.9448 7812.519 Ln-7835.9565 7801.8828 m-7835.9565 7805.8325 L-7835.9565 7806.8672 L-7835.9565 7807.5054 L-7835.9565 7808.6045 L-7835.9565 7812.519 L-7825.3213 7812.519 L-7825.3213 7808.6045 L-7825.3213 7807.5054 L-7825.3213 7806.8672 L-7825.3213 7805.8325 L-7825.3213 7801.8828 L-7835.9565 7801.8828 Ln0 O0.15 1 0.9 0.1 k-7824.9526 7807.5708 m-7836.9448 7807.5708 L-7836.9448 7807.9604 L-7824.9526 7807.9585 L-7824.9526 7807.5708 Lf-7824.9526 7806.8672 m-7824.9526 7806.5415 L-7836.9448 7806.5415 L-7836.9448 7806.8672 L-7836.9448 7806.9312 L-7824.9526 7806.9312 L-7824.9526 7806.8672 Lf0 1 1 0 k-7824.9526 7807.5054 m-7824.9526 7806.9312 L-7836.9448 7806.9312 L-7836.9448 7807.5054 L-7836.9448 7807.5708 L-7824.9526 7807.5708 L-7824.9526 7807.5054 Lf1 Ap0.746094 0.675781 0.667969 0.898438 k-7835.2163 7808.6694 m-7836.9448 7808.6694 L-7836.9448 7805.8325 L-7835.2163 7805.8325 L-7835.2163 7808.6694 Lf0.15 1 0.9 0.1 k-7834.5415 7808.6533 m-7835.3945 7808.6533 L-7835.3945 7805.8159 L-7834.5415 7805.8159 L-7834.5415 7808.6533 Lf0 Ap0.746094 0.675781 0.667969 0.898438 k-7824.9526 7808.6045 m-7824.9526 7807.9585 L-7836.9448 7807.9604 L-7836.9448 7808.6045 L-7836.9448 7808.6694 L-7824.9526 7808.6685 L-7824.9526 7808.6045 Lf-7824.9526 7805.8325 m-7836.9448 7805.8325 L-7836.9448 7806.5415 L-7824.9526 7806.5415 L-7824.9526 7805.8325 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 162)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7836.9448 7812.519 m-7825.5547 7812.519 L-7825.5547 7801.8828 L-7836.9448 7801.8828 L-7836.9448 7812.519 Ln-7836.1909 7808.6045 m-7836.1909 7812.519 L-7825.5547 7812.519 L-7825.5547 7801.8828 L-7836.1909 7801.8828 L-7836.1909 7805.7744 L-7836.1909 7808.6045 Lnu0 O0.746094 0.675781 0.667969 0.898438 k-7830.5693 7808.5415 m-7830.5693 7807.8965 L-7836.9448 7807.8965 L-7836.9448 7808.5415 L-7836.9448 7808.6045 L-7830.5693 7808.6045 L-7830.5693 7808.5415 Lf-7830.5693 7805.7676 m-7836.9448 7805.7676 L-7836.9448 7806.4775 L-7830.5693 7806.4775 L-7830.5693 7805.7676 Lf0.15 1 0.9 0.1 k-7830.5693 7807.5054 m-7836.9448 7807.5054 L-7836.9448 7807.8965 L-7830.5693 7807.8965 L-7830.5693 7807.5054 Lf-7830.5693 7806.8022 m-7830.5693 7806.4775 L-7836.9448 7806.4775 L-7836.9448 7806.8022 L-7836.9448 7806.8677 L-7830.5693 7806.8677 L-7830.5693 7806.8022 Lf0 1 1 0 k-7830.5693 7807.4399 m-7830.5693 7806.8677 L-7836.9448 7806.8677 L-7836.9448 7807.4399 L-7836.9448 7807.5054 L-7830.5693 7807.5054 L-7830.5693 7807.4399 LfU-7836.1909 7812.519 m-7825.5547 7812.519 L-7825.5547 7801.8828 L-7836.1909 7801.8828 L-7836.1909 7812.519 Ln-7825.6689 7807.2012 m-7833.7573 7811.8711 LN0 O0.746094 0.675781 0.667969 0.898438 k-7833.4263 7806.479 m-7833.4263 7803.6597 L-7827.2983 7807.1973 L-7833.4263 7810.7349 L-7833.4263 7807.8965 L-7833.7573 7807.8965 L-7833.7573 7808.6045 L-7833.7573 7811.8711 L-7825.6689 7807.2012 L-7833.7573 7802.5317 L-7833.7573 7805.77 L-7833.7573 7806.479 L-7833.4263 7806.479 Lf0.15 1 0.9 0.1 k-7833.4263 7810.7349 m-7827.2983 7807.1973 L-7833.4263 7803.6597 L-7833.4263 7806.479 L-7833.4263 7806.8672 L-7833.2925 7806.8672 L-7833.1597 7806.4951 -7832.8081 7806.2261 -7832.3901 7806.2261 c-7831.8604 7806.2261 -7831.4297 7806.6558 -7831.4297 7807.186 c-7831.4297 7807.7168 -7831.8604 7808.146 -7832.3901 7808.146 c-7832.8081 7808.146 -7833.1597 7807.8789 -7833.2925 7807.5054 C-7833.4263 7807.5054 L-7833.4263 7807.8965 L-7833.4263 7810.7349 Lf0 1 1 0 k-7832.3901 7808.146 m-7831.8604 7808.146 -7831.4297 7807.7168 -7831.4297 7807.186 c-7831.4297 7806.6558 -7831.8604 7806.2261 -7832.3901 7806.2261 c-7832.8081 7806.2261 -7833.1597 7806.4951 -7833.2925 7806.8672 c-7833.3276 7806.9663 -7833.3506 7807.0732 -7833.3506 7807.186 c-7833.3506 7807.2988 -7833.3276 7807.4038 -7833.2925 7807.5054 c-7833.1597 7807.8789 -7832.8081 7808.146 -7832.3901 7808.146 cfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 4)0 Au0 J 0 j 1 w 4 M []0 d0 XR-7836.8281 7812.4741 m-7744.9927 7812.4741 L-7744.9927 7808.1948 L-7836.8281 7808.1948 L-7836.8281 7812.4741 Ln0 O0 0 0 1 k-7836.6079 7809.7949 m-7836.9448 7809.8613 -7836.4263 7810.0508 -7836.8281 7809.9077 C-7836.7827 7809.79 -7836.7173 7809.7007 -7836.6079 7809.7949 Cf-7746.1123 7809.9604 m-7747.1973 7810.7231 -7748.6265 7809.9526 -7749.8149 7810.439 C-7749.9546 7810.4717 -7749.7793 7810.0215 -7750.0933 7810.1221 C-7751.2456 7810.7148 -7753.0615 7810.3613 -7754.4644 7809.9038 C-7754.3794 7809.7861 L-7754.6465 7809.7007 -7754.9731 7810.0908 -7755.2563 7810.0366 C-7755.2583 7809.9585 -7755.1655 7809.9253 -7755.2314 7809.8184 C-7755.3022 7810.0542 -7755.7432 7809.9277 -7755.8633 7810.103 C-7755.9751 7810.0117 -7755.9644 7809.8237 -7756.1089 7809.7207 C-7756.2715 7809.9893 L-7756.7217 7810.6284 -7757.3657 7809.9453 -7757.9814 7810.2749 C-7757.9512 7810.2124 -7757.8901 7810.1636 -7757.9395 7810.103 C-7758.9263 7810.4917 -7760.1616 7810.4199 -7761.2656 7810.562 C-7761.2217 7810.4668 -7761.1812 7810.2949 -7761.2456 7810.187 C-7761.3003 7810.4702 -7761.6411 7810.5425 -7761.9375 7810.5972 C-7762.0703 7810.3062 -7762.4443 7810.8628 -7762.7915 7810.7031 C-7762.7617 7810.6382 L-7763.0181 7810.9429 -7763.1421 7810.4629 -7763.3501 7810.8276 C-7763.5132 7810.5996 L-7763.6255 7811.0093 -7763.8843 7810.3862 -7764.0962 7810.5957 C-7764.0894 7810.6797 L-7764.2891 7810.7788 -7764.3931 7810.5728 -7764.5786 7810.6421 C-7764.5962 7810.5957 L-7765.0303 7810.7031 -7765.2827 7810.4741 -7765.2725 7810.7949 C-7765.4243 7810.5381 -7764.8511 7810.6772 -7765.0903 7810.3047 C-7766.5181 7810.6348 -7767.9907 7810.5703 -7769.4282 7810.5757 C-7769.5913 7810.4468 -7769.6953 7810.4077 -7769.7319 7810.2871 C-7769.8755 7810.3516 -7770.2729 7810.3452 -7770.4033 7810.5093 C-7770.3555 7810.5029 -7770.4961 7810.3452 -7770.5723 7810.3301 C-7770.8335 7810.2095 -7770.8579 7810.6816 -7771.1455 7810.5381 C-7771.0308 7810.4526 -7770.9917 7810.3496 -7771.0303 7810.23 C-7771.2749 7810.4805 -7771.6025 7810.4399 -7771.8921 7810.5205 C-7771.8472 7810.4668 -7771.7773 7810.4351 -7771.7881 7810.3345 C-7772.1055 7810.6172 -7772.3657 7810.2749 -7772.6431 7810.4541 C-7772.5396 7810.2695 L-7772.9863 7810.0444 -7772.6714 7810.6558 -7773.0576 7810.5229 C-7772.9648 7810.4648 -7772.9976 7810.3916 -7772.9814 7810.3164 C-7773.3413 7810.6533 -7773.9243 7810.5425 -7774.2837 7810.6558 C-7774.2622 7810.6309 -7774.2681 7810.5796 Y-7774.6597 7810.6221 -7775.0693 7810.5176 -7775.5 7810.6636 C-7775.6567 7810.5825 -7775.4487 7810.2124 -7775.8633 7810.2813 C-7775.8481 7810.6519 -7776.5669 7810.4336 -7776.3228 7810.8535 C-7776.6768 7810.7935 -7777.2373 7810.6533 -7777.4731 7810.7788 C-7777.3145 7810.6382 -7777.6455 7810.3247 -7777.3511 7810.2949 C-7777.5737 7810.0693 L-7777.5405 7809.9185 -7777.3447 7810.1206 -7777.4155 7809.9292 C-7777.5635 7809.9453 -7777.9927 7810.0908 -7778.1245 7810.0308 C-7778.3979 7810.2588 -7778.6489 7810.6831 -7779.0913 7810.73 C-7778.8833 7810.5854 -7779.2095 7810.3213 -7779.0684 7810.2573 C-7779.6855 7810.9688 L-7779.8325 7810.9863 -7779.7173 7810.6748 -7779.9302 7810.7725 C-7779.9194 7810.8711 -7780.0122 7810.9312 -7780.0767 7811.0117 C-7780.1323 7810.9688 -7780.6895 7811.103 -7780.7529 7810.7383 C-7780.8184 7810.5957 -7780.5132 7810.6621 -7780.6763 7810.5308 C-7780.9478 7810.5352 -7780.96 7810.6597 -7781.2319 7810.6665 C-7781.2373 7810.6172 L-7781.4165 7810.562 -7781.7661 7810.7725 -7781.5713 7810.9741 C-7781.4463 7810.9863 -7781.6187 7810.7549 -7781.4336 7810.8613 C-7781.5601 7811.0732 -7781.8765 7811.1328 -7782.1479 7811.1367 C-7782.0552 7811.0781 -7782.0664 7810.9805 -7782.0293 7810.8774 C-7782.3945 7811.1636 -7782.7817 7811.2549 -7783.1899 7811.3745 C-7783.1963 7811.5488 -7783.0376 7811.0581 -7782.9775 7811.1504 C-7783.5005 7810.9087 -7784.0576 7811.4917 -7784.4927 7811.1392 C-7784.4214 7811.1084 -7784.4546 7811.3862 -7784.4595 7811.3374 C-7784.7114 7811.3164 -7784.6997 7811.0645 -7784.8638 7811.1567 C-7784.8804 7811.0093 -7785.0703 7811.2046 -7785.2393 7811.25 C-7785.3267 7811.3564 -7785.2832 7811.1772 -7785.1362 7811.1621 C-7785.3716 7811.2871 -7786.3145 7811.5132 -7786.8579 7811.2988 C-7786.8472 7811.3965 -7787.1919 7811.6572 -7787.3169 7811.646 C-7787.2681 7811.4185 L-7787.3823 7811.2813 -7787.6875 7811.4375 -7787.7085 7811.2412 C-7787.9751 7811.519 -7786.6792 7811.0054 -7787.0405 7811.2197 C-7787.1343 7811.0293 -7787.5439 7811.5845 -7787.4663 7811.2725 C-7787.7173 7811.2813 -7787.9609 7811.5381 -7788.2007 7811.3237 C-7788.1313 7811.3613 -7787.9971 7811.0063 -7788.1997 7811.0229 C-7788.5571 7811.0645 -7788.3013 7811.1328 -7788.5913 7811.2095 C-7788.7729 7811.3022 L-7788.7847 7811.5244 -7789.0923 7811.2725 -7788.9595 7811.5205 C-7789.0034 7811.3374 -7789.4785 7811.6348 -7789.4419 7811.2656 C-7789.3921 7810.9741 L-7789.5464 7810.9956 -7789.6455 7811.2813 -7789.7661 7811.4092 C-7789.7866 7811.3823 -7789.8271 7811.3237 -7789.8193 7811.2773 C-7789.8442 7811.7222 -7790.1885 7811.2397 -7790.3716 7811.5845 C-7790.6953 7811.4292 -7791.1943 7811.5703 -7791.3472 7811.2935 C-7791.5962 7811.4277 -7791.8232 7811.5879 -7792.1069 7811.4917 C-7792.0503 7811.4492 -7791.9731 7811.4375 -7791.9575 7811.3413 C-7792.1353 7811.2109 -7792.1792 7811.3276 -7792.3423 7811.3999 C-7792.3057 7811.3345 -7792.6987 7811.1392 -7792.8975 7810.9824 C-7793.1445 7811.1152 -7793.0591 7811.355 -7793.0845 7811.5024 C-7793.3101 7811.062 -7793.7827 7811.7856 -7794.0659 7811.3862 C-7793.98 7811.3247 -7793.7046 7811.1709 -7793.9106 7811.0605 C-7794.1367 7810.6221 -7794.3667 7811.3848 -7794.7314 7811.1733 C-7794.6416 7811.5381 L-7794.8042 7811.3125 -7795.1782 7811.75 -7795.1411 7811.3789 C-7795.2632 7811.5093 -7795.5713 7811.2573 -7795.5308 7811.6133 C-7796.1294 7811.3125 -7796.9873 7811.7949 -7797.3555 7811.1567 C-7797.4409 7811.2168 -7797.6553 7811.1558 -7797.6113 7811.3389 C-7797.4688 7811.5366 -7797.4121 7811.1973 -7797.3589 7811.3325 C-7797.4365 7811.3423 -7797.4526 7811.4399 -7797.4609 7811.4893 C-7797.6475 7811.4077 -7797.7935 7811.3823 -7797.6177 7811.0869 C-7798.0317 7810.8672 -7798.0449 7811.6909 -7798.5723 7811.5527 C-7798.5483 7811.4053 -7798.5884 7811.3496 -7798.7427 7811.3735 C-7799.0352 7811.6255 L-7799.3765 7811.5664 -7799.2295 7811.29 -7799.2373 7811.0415 C-7799.4194 7811.0845 -7799.6421 7811.0718 -7799.7251 7811.2573 C-7799.9463 7810.9453 L-7799.7847 7811.1709 -7800.0962 7811.0957 -7800.1816 7811.1558 C-7800.0962 7811.0957 L-7800.1294 7810.9893 -7800.3403 7811.0542 -7800.4473 7811.0854 C-7800.4214 7811.2397 -7800.2065 7811.3022 -7800.0894 7811.3477 C-7800.1821 7811.4575 -7800.3271 7811.4316 -7800.4507 7811.5605 C-7800.4097 7811.3164 -7800.7476 7811.3862 -7800.8921 7811.3613 C-7801.0581 7811.3071 -7801.0796 7811.5796 -7801.1279 7811.5718 C-7801.1323 7811.4453 -7801.3989 7811.5503 -7801.2695 7811.3735 C-7801.2129 7811.3325 -7801.1401 7811.4956 -7801.0464 7811.3848 C-7801.1558 7811.29 -7801.1431 7811.0693 -7801.3706 7811.23 C-7801.5415 7811.3516 -7801.3267 7811.7124 -7801.6509 7811.5581 C-7801.5659 7811.4985 -7801.5503 7811.3999 -7801.4839 7811.3125 C-7801.7881 7811.1855 L-7801.8013 7811.4077 L-7801.8423 7811.3516 -7801.8145 7811.3325 -7801.8325 7811.3022 C-7801.9233 7811.5366 -7802.2969 7811.3745 -7802.3657 7811.6382 C-7802.5195 7811.6621 -7802.6895 7811.4844 -7802.8354 7811.4585 C-7802.8071 7811.439 L-7802.9863 7811.3071 -7803.2241 7811.394 -7803.3745 7811.5444 C-7803.3667 7811.4956 L-7803.4644 7811.478 -7803.6953 7811.5132 -7803.8184 7811.6445 C-7804.0649 7811.4751 -7803.9009 7810.8037 -7804.1743 7811.0845 C-7804.4248 7811.0908 -7804.5669 7811.4917 -7804.4663 7811.6348 C-7804.9165 7811.4844 -7805.4282 7811.8477 -7805.8457 7811.5024 C-7805.9106 7811.5903 -7805.8696 7811.6479 -7806.0034 7811.7007 C-7806.6646 7811.6133 -7807.3999 7811.9648 -7807.9263 7811.5269 C-7807.7349 7811.4336 -7807.9136 7811.3047 -7807.9175 7811.1772 C-7808.0757 7811.3774 -7808.1079 7810.9702 -7808.1646 7811.3125 C-7808.1489 7811.5132 -7808.1646 7811.6108 -7807.9785 7811.6924 C-7808.3735 7811.8008 -7808.9731 7811.8008 -7809.1919 7811.6133 C-7809.0825 7811.7061 -7809.1675 7811.7676 -7809.2534 7811.8276 C-7809.2251 7811.5068 -7809.5161 7811.4585 -7809.7363 7811.5718 C-7809.7671 7811.7676 L-7809.9106 7811.5664 L-7809.9951 7811.6284 -7810.0039 7811.9756 -7810.2222 7811.7886 C-7810.2339 7811.7124 -7810.2466 7811.6357 -7810.2866 7811.5796 C-7810.5142 7811.7397 -7810.8354 7812.0117 -7811.0825 7811.8452 C-7811.2847 7811.5605 L-7811.3901 7811.5903 -7811.5684 7811.7637 -7811.3823 7811.8452 C-7811.8042 7811.6733 -7812.0757 7811.6519 -7812.2095 7811.4053 C-7812.9365 7812.0063 -7813.9907 7812.0308 -7814.8354 7811.9878 C-7814.8101 7811.8413 L-7815.0371 7811.7046 -7814.9282 7812.0972 -7815.0864 7811.9956 C-7815.0132 7811.856 -7815.2593 7811.6924 -7815.0811 7811.5205 C-7815.4058 7811.3672 -7815.4995 7811.7749 -7815.7104 7811.8413 C-7815.7427 7812.0332 -7815.5405 7811.7183 -7815.5815 7811.9629 C-7815.6177 7812.0308 -7816.0308 7811.8125 -7816.0811 7812.103 C-7816.1626 7811.9893 -7816.0991 7811.7749 -7816.0552 7811.6572 C-7816.2534 7811.7983 L-7816.4961 7811.4585 -7815.7007 7811.1909 -7815.9556 7810.7725 C-7816.1382 7810.8184 L-7816.3135 7810.5132 -7815.6548 7810.4741 -7816.1138 7810.3701 C-7816.3135 7810.5132 -7816.4829 7810.9351 -7816.3057 7811.0645 C-7816.7202 7811.1445 -7816.4976 7811.7573 -7816.9434 7811.7324 C-7817.0649 7811.562 -7816.5864 7811.6924 -7816.6724 7811.4526 C-7816.8823 7811.2192 -7817.0933 7811.5845 -7817.2803 7811.5024 C-7817.0728 7811.6108 -7817.2485 7811.9053 -7817.3823 7811.9585 C-7817.6089 7811.8213 -7817.2349 7811.6831 -7817.5562 7811.6533 C-7817.6089 7811.8213 -7817.9043 7811.9468 -7817.6489 7812.0645 C-7817.7651 7812.4453 -7817.9829 7811.9585 -7818.1577 7812.2534 C-7818.2622 7811.9863 -7817.8271 7811.6348 -7818.1802 7811.5015 C-7818.1245 7811.7583 -7818.6152 7811.8511 -7818.4287 7812.2344 C-7818.5669 7812.1597 -7818.5815 7811.9575 -7818.4814 7811.7983 C-7818.6782 7811.6396 -7818.96 7812.2695 -7819.0249 7811.7573 C-7819.0928 7812.0215 L-7819.1548 7811.9351 -7819.2432 7811.8711 -7819.3442 7811.7285 C-7819.5181 7811.7231 -7819.9048 7812.0854 -7819.8892 7811.687 C-7819.9448 7811.7285 -7820.3423 7811.7109 -7820.1895 7811.9863 C-7819.9419 7812.1543 -7819.9048 7811.7856 -7819.7671 7812.1567 C-7819.9419 7811.8535 -7820.1235 7812.1973 -7820.2661 7812.2988 C-7820.2896 7812.1445 L-7820.3745 7812.2046 -7820.5703 7812.1709 -7820.6235 7812.3374 C-7820.5581 7812.25 -7820.5923 7812.1445 -7820.6597 7812.1069 C-7820.7495 7812.3413 L-7821.0942 7812.4585 -7820.8306 7811.9292 -7821.1665 7811.9985 C-7820.9111 7811.8159 L-7820.9673 7811.855 -7821.0815 7811.6357 -7821.2427 7811.7095 C-7821.3052 7811.9229 -7821.4224 7812.1797 -7821.4761 7812.3452 C-7821.6655 7812.439 -7821.5615 7812.1045 -7821.7476 7812.3237 C-7821.5034 7812.0664 L-7821.4663 7811.9956 -7821.6685 7811.7124 -7821.9209 7811.7183 C-7822.0825 7811.7935 -7822.3335 7812.1016 -7822.0786 7812.2192 C-7822.2056 7812.2222 -7822.3833 7812.0908 -7822.2827 7811.9351 C-7822.5703 7812.0093 -7822.2446 7812.1665 -7822.4927 7812.2988 C-7822.5942 7812.1558 -7822.9106 7811.9526 -7823.1011 7811.7461 C-7822.8423 7811.3877 L-7823.0142 7811.3848 L-7822.7915 7811.0972 -7823.1274 7811.1665 -7823.0015 7810.8628 C-7823.1191 7810.8159 -7823.2617 7810.9189 -7823.3755 7810.9985 C-7823.0313 7811.4824 -7823.7607 7811.6597 -7823.6606 7812.1016 C-7824.1323 7812.2222 -7823.9556 7811.0269 -7824.4473 7811.7183 C-7824.3667 7811.8345 -7824.5981 7812.1694 -7824.3013 7812.0425 C-7824.5942 7811.9941 -7824.5005 7812.4854 -7824.8462 7812.3022 C-7824.5903 7812.1206 -7825.1211 7811.855 -7824.7515 7811.5903 C-7824.7759 7811.7383 -7824.5449 7811.7031 -7824.4883 7811.6621 C-7824.6089 7811.4917 -7824.4634 7811.2168 -7824.7632 7811.2168 C-7824.9463 7811.2588 -7825.1973 7811.2671 -7825.1606 7811.4985 C-7825.1533 7811.75 -7824.8813 7811.4702 -7824.9985 7811.7261 C-7825.3633 7811.814 -7825.4243 7811.4292 -7825.5752 7811.8789 C-7825.3447 7811.8428 -7825.2871 7812.103 -7825.2915 7812.2773 C-7825.5591 7812.3823 L-7825.5073 7812.2144 L-7825.9375 7812.0933 -7825.6343 7812.519 -7826.0503 7812.4741 C-7826.2456 7812.1421 L-7826.1465 7811.856 -7825.6401 7812.2695 -7825.7144 7811.8037 C-7825.9849 7811.7856 -7826.0747 7812.0215 -7826.3296 7811.9004 C-7826.2729 7811.8613 -7826.1953 7811.8496 -7826.1392 7811.8076 C-7826.2363 7811.7935 -7826.3325 7811.1743 -7826.7183 7811.5366 C-7826.9175 7811.6772 -7826.7715 7811.7031 -7826.7759 7811.8774 C-7827.2104 7811.9292 -7827.3403 7812.1069 -7827.6201 7812.1343 C-7827.5625 7811.7949 -7828.1147 7812.1016 -7827.8057 7811.7534 C-7827.6636 7811.9526 -7827.0352 7811.9336 -7826.8813 7811.6079 C-7827.0396 7811.2061 -7826.54 7811.6665 -7826.4473 7811.2573 C-7826.7954 7811.2485 -7826.7783 7810.8511 -7826.8345 7810.5903 C-7826.9312 7810.5728 -7827.0249 7810.6831 -7827.0825 7810.7231 C-7827.1235 7810.9688 -7826.9971 7810.9648 -7826.9897 7811.2168 C-7827.3784 7811.1504 -7827.7529 7811.2871 -7827.9673 7811.5244 C-7828.0972 7811.4038 -7828.0562 7811.1597 -7827.9023 7811.1367 C-7828.3647 7811.2095 -7828.8589 7811.1743 -7829.2983 7811.1016 C-7829.0142 7811.5015 -7829.7881 7811.1948 -7829.5942 7811.5269 C-7829.3589 7811.6172 -7829.1567 7811.9004 -7829.2866 7812.0796 C-7829.4336 7812.0542 -7829.2817 7811.9053 -7829.3433 7811.8198 C-7829.5308 7812.0381 -7829.6343 7811.4702 -7829.8184 7811.814 C-7829.3965 7811.6855 -7829.7363 7811.3276 -7829.6587 7811.0156 C-7829.9634 7811.1909 -7829.6455 7810.7935 -7829.9473 7810.7935 C-7830.2505 7810.9663 -7830.6235 7811.103 -7830.9609 7811.1709 C-7831.3848 7810.8745 -7832.0347 7811.1665 -7832.4131 7811.1772 C-7832.6113 7811.019 -7832.4771 7810.6665 -7832.6919 7810.6045 C-7832.9443 7810.6108 -7832.5049 7810.9863 -7832.8784 7810.8237 C-7832.8423 7810.7534 L-7832.9556 7810.8359 -7833.5273 7810.5132 -7833.6377 7811.0215 C-7833.5225 7810.6382 L-7833.5923 7810.603 -7833.6567 7810.6909 -7833.7144 7810.7324 C-7833.7173 7810.6069 -7833.7983 7810.4941 -7833.6851 7810.4116 C-7833.9155 7810.1484 -7834.1689 7810.4541 -7834.4194 7810.4648 C-7834.2583 7810.6909 L-7834.6875 7810.8687 -7834.9741 7810.6445 -7835.3892 7810.7231 C-7835.3765 7810.5024 L-7835.6235 7810.6348 L-7835.5635 7810.4199 -7835.7896 7810.2813 -7835.9199 7810.4604 C-7835.2783 7809.9185 L-7835.1001 7810.0488 -7835.4731 7810.1855 -7835.3613 7810.4038 C-7835.2661 7810.5957 -7834.8823 7810.5352 -7834.8203 7810.3213 C-7834.9673 7810.2964 -7834.9741 7810.3452 -7835.0884 7810.4253 C-7835.1367 7810.1167 -7834.9136 7810.1284 -7834.8032 7809.9229 C-7834.8804 7809.9351 -7834.9897 7809.8413 -7835.0063 7809.939 C-7834.8555 7809.7886 -7834.7026 7809.7656 -7834.4507 7809.7573 C-7834.6211 7809.8789 -7834.3579 7809.9487 -7834.4224 7810.0366 C-7834.4023 7809.7656 -7834.1616 7809.6816 -7833.8501 7809.7573 C-7833.6279 7810.0718 -7833.2656 7809.5557 -7832.9048 7809.6421 C-7833.0513 7809.9185 -7833.2383 7810.1382 -7833.4575 7810.25 C-7833.2314 7810.3877 -7833.2056 7810.2412 -7832.9785 7810.3804 C-7832.8687 7810.1743 -7832.7905 7809.8613 -7832.4951 7809.7358 C-7832.4795 7809.939 L-7832.2114 7809.8359 -7832.2114 7809.5352 -7831.8706 7809.5903 C-7831.2866 7809.6909 -7830.6855 7809.6909 -7830.2397 7809.7168 C-7830.2231 7809.9189 L-7829.9751 7809.4854 -7829.3975 7809.7583 -7829.0635 7809.5664 C-7828.4951 7809.7612 -7827.8296 7809.3735 -7827.5386 7809.7222 C-7826.5361 7809.5664 -7825.6597 7809.4141 -7824.6216 7809.4878 C-7824.7964 7809.7832 L-7824.6104 7809.5664 -7824.6753 7809.9526 -7824.4927 7809.9087 C-7824.7026 7809.6733 -7824.2397 7809.603 -7824.1113 7809.4229 C-7823.6489 7809.6519 -7823.0552 7809.4023 -7822.6455 7809.1948 C-7822.6294 7809.3984 L-7822.2153 7809.0176 -7821.7207 7809.3516 -7821.2046 7809.4141 C-7821.1455 7809.4985 -7821.0522 7809.6885 -7820.8984 7809.6665 C-7820.6187 7809.3374 -7820.4722 7809.3613 -7820.0615 7809.1558 C-7819.7617 7809.1558 -7819.2749 7809.2373 -7818.9702 7809.3647 C-7817.8423 7808.9038 -7816.6904 7809.1992 -7815.5181 7808.9214 C-7815.4336 7809.1597 L-7814.2969 7808.6504 -7812.8989 7809.1133 -7811.9287 7808.8511 C-7812.0225 7809.2588 L-7811.7183 7809.3848 -7811.3291 7809.1519 -7811.4067 7808.8628 C-7811.1016 7808.9878 -7810.6455 7808.6665 -7810.4517 7809.0015 C-7810.1401 7809.0757 -7810.0703 7808.8125 -7809.8115 7808.7573 C-7809.1875 7808.9116 -7808.9556 7808.8774 -7808.3672 7808.8008 C-7808.5132 7808.7749 L-7808.5776 7808.8652 -7808.5835 7809.0381 -7808.4375 7809.0645 C-7808.2173 7808.9512 -7807.6294 7809.1733 -7807.8481 7808.687 C-7807.2202 7808.9688 -7806.3833 7808.4585 -7805.7725 7808.8374 C-7805.8237 7808.7046 -7805.6694 7808.6797 -7805.6055 7808.5894 C-7805.0537 7808.5845 -7804.4741 7808.855 -7804.0347 7808.6284 C-7803.9473 7808.6948 -7804.1743 7808.855 -7803.9497 7808.8687 C-7803.8169 7808.8184 -7803.9473 7808.6948 -7803.7832 7808.6206 C-7802.8901 7808.3735 -7801.9751 7808.8774 -7801.1636 7808.8125 C-7799.7202 7808.5557 -7798.2144 7808.6855 -7796.8315 7808.6421 C-7796.8472 7808.7397 L-7796.3843 7808.3672 -7795.7607 7809.1221 -7795.3911 7808.5605 C-7795.2817 7808.6533 -7794.9731 7808.6045 -7795.0542 7808.7935 C-7794.6855 7808.5293 -7794.0225 7809.0415 -7793.4888 7808.7061 C-7793.5376 7808.6973 -7793.5659 7808.7168 -7793.6226 7808.7583 C-7793.0845 7808.9741 -7792.6089 7808.6797 -7792.0405 7808.8745 C-7792.0981 7808.9175 -7792.2031 7808.9468 -7792.2202 7809.0444 C-7792.0005 7809.2319 -7791.6997 7808.6328 -7791.5796 7809.103 C-7791.4536 7809.0991 -7791.4897 7808.8672 -7791.5669 7808.8804 C-7790.3228 7809.0645 -7788.9946 7808.7637 -7787.6997 7808.6558 C-7786.7725 7808.9365 -7787.6431 7809.4492 -7786.9111 7809.0972 C-7786.8511 7809.1885 -7786.8677 7808.9185 -7786.8579 7809.0156 C-7786.5747 7808.8828 -7786.4165 7809.5415 -7786.2202 7809.2949 C-7786.3013 7809.0054 -7786.0894 7809.1328 -7786.0835 7808.9575 C-7785.5161 7809.1445 -7785.4023 7809.4053 -7784.9546 7809.1855 C-7784.9883 7809.3374 L-7784.4634 7808.9077 -7783.8555 7809.1382 -7783.4121 7808.6421 C-7780.5176 7808.5527 -7777.7432 7808.2773 -7774.9209 7808.2197 C-7772.1313 7808.314 -7769.3999 7808.0908 -7766.5669 7808.355 C-7765.9033 7808.7549 -7765.8535 7808.7437 -7765.1245 7808.5825 C-7765.1543 7808.646 -7765.1997 7808.6621 -7765.1509 7808.7222 C-7765.1147 7808.394 -7764.6377 7808.6909 -7764.5684 7808.3789 C-7763.5215 7808.439 -7762.5562 7808.3496 -7761.4785 7808.3477 C-7761.6489 7808.3823 -7761.7344 7808.6504 -7761.5317 7808.6284 C-7761.3203 7808.4199 L-7761.2856 7808.5117 L-7761.1475 7808.4629 -7760.9961 7808.3008 -7761.1392 7808.1948 C-7758.4321 7807.9116 -7755.7695 7808.5703 -7753.1177 7808.4893 C-7752.4883 7808.6265 -7751.5923 7808.5015 -7750.9077 7808.4336 C-7748.8804 7808.8711 -7747.0527 7809.2236 -7744.9927 7808.9185 C-7745.2617 7809.7656 -7746.1123 7809.9604 Vf-7836.2026 7809.7612 m-7836.1304 7809.9253 -7835.8945 7810.0156 -7836.0825 7810.2344 C-7836.1064 7810.0796 -7836.2271 7809.9077 -7836.2026 7809.7612 Cf-7829.9067 7811.4492 m-7829.8984 7811.3999 -7829.8169 7811.5151 -7829.7969 7811.5425 C-7829.8745 7811.5542 -7829.9473 7811.6924 -7830.0093 7811.6069 C-7829.9302 7811.5957 -7829.9424 7811.5176 -7829.9067 7811.4492 Cf-7828.2969 7811.5469 m-7828.3213 7811.6924 -7828.6655 7811.8076 -7828.8687 7811.8252 C-7828.2969 7811.5469 Lf-7826.7969 7812.1484 m-7826.6675 7812.271 -7826.7031 7812.3389 -7826.8774 7812.3345 C-7826.8901 7812.2573 -7826.8325 7812.2192 -7826.7969 7812.1484 Cf-7826.6904 7811.8159 m-7826.5659 7811.8125 -7826.5039 7811.8984 -7826.4434 7811.9824 C-7826.4478 7811.856 -7826.7319 7812.0605 -7826.6904 7811.8159 Cf-7823.4341 7812.2397 m-7823.3564 7812.2285 -7823.1865 7812.1069 -7823.1138 7812.2695 C-7823.1953 7812.1558 -7823.4946 7812.4541 -7823.4341 7812.2397 Cf-7821.9209 7812.019 m-7821.8721 7812.0293 -7821.8521 7812.0557 -7821.7954 7812.0156 C-7821.7056 7812.0825 -7821.8003 7812.1885 -7821.8765 7812.2021 C-7821.9209 7812.019 Lf-7794.3735 7811.4336 m-7794.5371 7811.5054 L-7794.5132 7811.3613 L-7794.3735 7811.4336 Lf-7782.3022 7811.4253 m-7782.1392 7811.3345 -7782.1895 7811.562 -7782.1616 7811.5845 C-7782.3091 7811.5996 -7782.1069 7811.4038 -7782.3022 7811.4253 Cf-7775.7935 7810.6973 m-7775.8433 7810.7007 L-7775.8267 7810.4023 L-7775.7935 7810.6973 LfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 55)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7810.9175 7812.519 m-7810.9175 7786.4912 L-7836.9448 7786.4912 L-7836.9448 7812.519 L-7810.9175 7812.519 Ln0 Ap0 R0.7084 0.636438 0.515526 0.381872 K1.125 w-7836.9448 7795.1665 m-7810.9175 7795.1665 lS0.64 0.650477 0.701045 0.510735 K-7836.9448 7803.8438 m-7810.9175 7803.8438 lS0.597742 0.537865 0.64184 0.350469 K0.375 w-7836.9448 7799.5044 m-7810.9175 7799.5044 lS0 O0.597742 0.537865 0.64184 0.350469 k1 w-7815.5195 7799.5308 m-7815.2891 7799.2588 -7815.6362 7798.9736 -7815.9448 7798.7622 c-7816.0566 7798.6855 -7816.4663 7798.8984 -7816.6914 7798.7324 c-7816.9888 7798.5142 -7817.1274 7798.4277 -7817.4272 7798.4336 c-7817.5903 7798.4375 -7817.9883 7798.5669 -7818.1343 7798.5972 c-7818.5127 7798.6733 -7818.7471 7798.8711 -7819.3125 7798.7744 c-7819.6792 7798.7109 -7819.7734 7798.6196 -7819.8682 7798.6685 c-7820.0566 7798.8096 -7820.1655 7799.0332 -7820.3706 7799.0825 c-7820.9023 7799.2095 -7821.2983 7799.2524 -7821.8267 7799.2412 c-7822.2495 7799.2319 -7823.3633 7799.3008 -7824.2314 7799.2012 c-7824.5674 7799.1606 -7824.5474 7798.7358 -7824.7144 7798.7324 c-7824.8066 7798.73 -7824.7095 7799.0454 -7824.7754 7799.0664 c-7825.1143 7799.1724 -7825.4155 7798.022 -7825.6392 7798.0908 c-7825.7495 7798.1274 -7825.5015 7798.6724 -7825.6177 7798.7007 c-7825.8423 7798.7568 -7826.1626 7797.7383 -7826.3774 7797.8008 c-7826.5083 7797.8374 -7826.2334 7798.2573 -7826.3823 7798.3247 c-7826.6104 7798.4302 -7826.8535 7797.5542 -7827.0513 7797.6533 C-7827.0991 7797.7007 -7826.6743 7798.4575 -7827.1133 7798.3984 c-7827.2319 7798.3804 -7827.4502 7797.8335 -7827.5249 7797.8589 c-7827.6367 7797.8989 -7827.2983 7798.3213 -7827.4346 7798.4468 C-7827.7129 7798.6733 -7828.3159 7797.6821 -7828.4023 7797.7534 c-7828.5239 7797.855 -7828.0728 7798.6172 -7828.2144 7798.6855 C-7828.3945 7798.9487 -7828.9595 7798.0718 -7829.0337 7798.1206 c-7829.1226 7798.1797 -7828.8506 7798.5576 -7828.8247 7798.7524 c-7828.7993 7798.9468 -7828.9414 7799.0806 -7829.1592 7799.0293 c-7829.4185 7798.9663 -7829.8145 7798.1606 -7829.9175 7798.2549 C-7830.0239 7798.3101 -7829.8135 7798.5972 -7829.7402 7798.8325 c-7829.7031 7798.9468 -7829.8335 7799.1206 -7829.9746 7799.1206 c-7830.2583 7799.1685 -7830.5703 7798.5176 -7830.6514 7798.6221 c-7830.6973 7798.6816 -7830.5347 7799.0093 -7830.6743 7799.1069 c-7830.8442 7799.2256 -7831.2563 7798.7573 -7831.3975 7798.8125 C-7831.4814 7798.8613 -7831.3574 7799.1157 -7831.4375 7799.1724 c-7831.6743 7799.3389 -7831.9487 7798.9404 -7831.9961 7798.9878 C-7832.0615 7799.0103 -7832.0649 7799.0557 -7832.2241 7799.1597 c-7832.4185 7799.2871 -7832.4702 7799.3677 -7832.4873 7799.4844 c-7832.5103 7799.6021 -7832.2583 7799.894 -7832.1104 7799.8687 c-7831.7671 7799.8096 -7831.8115 7800.3687 -7831.5776 7800.2349 c-7831.5127 7800.1992 -7831.6045 7799.7783 -7831.3647 7799.7856 c-7830.9937 7799.7974 -7830.9307 7800.3408 -7830.7266 7800.3301 c-7830.5854 7800.3232 -7830.7969 7799.7031 -7830.5776 7799.7798 c-7830.4199 7799.8359 -7829.9512 7800.8213 -7829.9243 7800.7285 c-7829.8423 7800.4614 -7830.0151 7799.9185 -7829.8857 7799.9277 c-7829.7017 7799.9424 -7829.4526 7800.8364 -7829.1992 7800.9575 c-7829.1274 7800.9917 -7829.3223 7800.1196 -7829.1406 7800.1157 C-7829.0347 7800.1665 -7828.7026 7800.9688 -7828.5723 7801.0176 C-7828.5039 7801.0024 -7828.5327 7800.6445 -7828.4624 7800.6245 c-7828.4136 7800.6079 -7828.2266 7801.0854 -7828.1548 7801.0425 c-7828.0503 7800.9824 -7828.1919 7800.5117 -7828.0337 7800.4424 c-7827.8623 7800.3677 -7827.4326 7801.4116 -7827.2935 7801.3164 c-7827.2217 7801.2695 -7827.3022 7800.7285 -7827.1548 7800.7656 c-7827.0166 7800.7974 -7826.8862 7801.1333 -7826.7529 7801.1621 c-7826.6743 7801.1772 -7826.7383 7800.7109 -7826.6943 7800.6924 c-7826.5337 7800.6348 -7826.1777 7801.1909 -7826.0137 7801.0425 c-7825.8032 7800.854 -7825.8843 7800.4893 -7825.7793 7800.5024 c-7825.5723 7800.5244 -7825.4365 7800.7622 -7825.3594 7800.7031 c-7825.2095 7800.5879 -7825.2729 7800.2988 -7824.9976 7800.2119 c-7824.8423 7800.1621 -7824.7383 7800.4541 -7824.6943 7800.4492 c-7824.6187 7800.4468 -7824.6235 7800.3496 -7824.6113 7800.2437 c-7824.5776 7799.9805 -7824.5513 7799.9189 -7824.4326 7799.8965 c-7824.0303 7799.8735 -7823.5073 7799.8037 -7823.1255 7799.7949 c-7822.5723 7799.7798 -7821.2056 7799.7568 -7821.0635 7799.7568 c-7820.9448 7799.7324 -7820.6885 7799.9141 -7820.6138 7799.9805 c-7820.4126 7800.1655 -7820.2446 7800.3789 -7819.9307 7800.6396 c-7819.8354 7800.7207 -7819.7529 7800.6997 -7819.6826 7800.6748 c-7819.4697 7800.6045 -7819.4033 7800.5527 -7819.1655 7800.5205 c-7818.8623 7800.478 -7818.3721 7800.5679 -7818.0693 7800.6621 c-7817.5483 7800.8213 -7817.4712 7800.8438 -7817.0425 7800.7949 c-7816.6445 7800.7495 -7816.0034 7800.6772 -7815.9927 7800.3301 c-7815.9863 7800.1152 -7815.8862 7799.9629 -7815.5195 7799.5308 cfU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 56)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7810.9175 7812.519 m-7810.9175 7786.4917 L-7836.9448 7786.4917 L-7836.9448 7812.519 L-7810.9175 7812.519 Ln0 Ap0 R0.597742 0.537865 0.64184 0.350469 K0.375 w-7819.5903 7799.5088 m-7810.9185 7799.5088 lS-7823.9287 7812.519 m-7823.9287 7803.8438 lS0.7084 0.636438 0.515526 0.381872 K1.125 w-7819.6655 7795.1694 m-7810.9175 7795.1694 lS-7828.2681 7812.5181 m-7828.2681 7803.1655 lS0.64 0.650477 0.701045 0.510735 K-7819.5952 7812.5181 m-7819.5952 7810.1064 l-7816.9385 7809.8828 -7815.2544 7808.1797 v-7813.5513 7806.4526 -7813.3223 7803.8477 y-7810.9175 7803.8477 lS*u1 D0 O0.7084 0.636438 0.515526 0.381872 k1 w-7827.7866 7796.7046 m-7827.7866 7796.7676 -7827.7666 7796.8101 -7827.7231 7796.8101 c-7827.6392 7796.8101 -7827.4082 7796.4736 -7827.3442 7796.4736 c-7827.2603 7796.4736 -7827.2178 7796.5151 -7827.2178 7796.6206 c-7827.2178 7796.7046 -7827.4712 7797.6118 y-7827.4712 7797.6533 -7827.4712 7797.6533 -7827.4497 7797.6533 c-7827.3862 7797.6533 -7827.0063 7797.1064 -7826.8799 7797.1064 c-7826.8594 7797.1064 -7826.8384 7797.1274 -7826.8384 7797.1484 c-7827.1123 7798.0542 -7827.1123 7798.2446 v-7827.1123 7798.3071 -7827.1123 7798.3301 -7827.0913 7798.3301 c-7827.0503 7798.3301 -7826.6274 7797.7583 -7826.5015 7797.7583 c-7826.48 7797.7583 -7826.4585 7797.7798 -7826.4585 7797.8013 c-7826.4585 7797.8652 -7826.7114 7798.603 -7826.7114 7798.771 c-7826.7114 7798.814 -7826.7114 7798.814 -7826.6895 7798.814 c-7826.6274 7798.814 -7826.4175 7798.603 -7826.3745 7798.603 c-7826.3535 7798.603 -7826.3335 7798.6255 -7826.3335 7798.6455 c-7826.3335 7798.6665 -7826.4375 7799.0239 -7826.4375 7799.1084 c-7826.4375 7799.1309 -7826.4375 7799.1309 -7826.4175 7799.1309 c-7826.3745 7799.1309 -7826.0366 7798.771 -7825.9526 7798.771 c-7825.9106 7798.771 -7825.8682 7798.814 -7825.8682 7798.8984 c-7825.8682 7799.0469 -7826.0586 7799.7637 -7826.0586 7799.8052 c-7826.0586 7799.8892 -7826.0366 7799.9312 -7825.9946 7799.9312 c-7825.9106 7799.9312 -7825.6567 7799.6152 -7825.5942 7799.6152 c-7825.5303 7799.6152 -7825.4888 7799.6357 -7825.4888 7799.6997 c-7825.5303 7800.1206 L-7825.5303 7800.1855 -7825.5303 7800.2046 -7825.5103 7800.2046 c-7825.4673 7800.2046 -7825.2363 7799.9111 -7825.1514 7799.9111 c-7825.0454 7799.9111 -7825.0454 7800.3965 -7825.0454 7800.4585 c-7825.0454 7800.5645 -7824.9614 7800.6479 -7824.8345 7800.6479 c-7824.7505 7800.6479 -7824.4126 7800.4175 -7824.3921 7800.4175 c-7824.3071 7800.4175 -7824.2646 7800.8589 -7824.2017 7800.8589 c-7824.1392 7800.8589 -7823.8647 7800.7324 -7823.8013 7800.7324 c-7823.5903 7800.7324 -7823.5483 7800.8184 -7823.5483 7800.9863 c-7823.5703 7801.1333 L-7823.5703 7801.1743 -7823.5483 7801.1743 -7823.5283 7801.1743 c-7823.4434 7801.1743 -7823.1689 7800.9004 -7823.0845 7800.9004 c-7822.8735 7800.9004 -7820.7646 7802.9688 -7820.4902 7803.2412 c-7820.3433 7803.4092 -7820.3433 7803.7061 -7820.3433 7803.8335 c-7820.3433 7804.6973 -7820.3433 7804.7813 -7820.1743 7804.8652 c-7819.5425 7805.1191 -7819.4575 7805.2661 -7818.6782 7806.5527 c-7818.5928 7806.6997 -7817.6855 7807.3125 -7817.5391 7807.3125 c-7817.4326 7807.3125 -7817.0542 7807.0581 -7816.9688 7807.0581 c-7816.8643 7807.0581 -7816.7583 7807.1221 -7816.7583 7807.29 c-7816.7583 7807.7324 -7817.2856 7808.2397 -7817.8765 7808.2397 c-7818.6982 7808.2397 -7819.0361 7807.5425 -7819.0786 7807.1445 c-7819.0991 7806.9956 -7819.1841 7806.9111 -7819.2896 7806.9111 c-7819.3311 7806.9111 -7819.3735 7806.9312 -7819.4155 7806.9956 c-7819.9009 7807.7964 -7820.8921 7808.2397 -7821.6514 7808.2397 c-7822.6841 7808.2397 -7823.8223 7807.6069 -7824.2866 7807.3345 c-7824.7295 7807.0806 -7825.4263 7806.9111 -7825.8257 7806.9111 c-7826.2695 7806.9111 -7826.3115 7807.0581 -7826.3115 7807.3125 c-7826.3115 7807.46 -7825.8472 7807.9004 -7825.8472 7808.0293 c-7825.8472 7808.1548 -7825.9946 7808.2397 -7826.3535 7808.2397 c-7826.8384 7808.2397 -7827.5127 7807.522 -7827.5127 7806.7432 c-7827.5127 7806.1309 -7826.7114 7805.6045 -7826.2471 7805.6045 c-7825.3203 7805.6045 -7825.0391 7805.9629 -7824.4712 7806.4272 c-7824.3862 7806.4893 -7824.3223 7806.5117 -7824.2808 7806.5117 c-7824.1343 7806.5117 -7824.1343 7805.4141 -7824.1343 7805.2886 c-7824.1343 7805.1392 -7824.2178 7805.0767 -7824.3223 7805.0767 c-7826.7271 7805.0767 -7831.6045 7803.8535 -7833.3125 7797.6973 c-7833.3745 7797.4854 -7833.4814 7797.3804 -7833.5854 7797.3804 c-7833.7329 7797.3804 -7834.7241 7798.2236 -7834.7241 7799.8052 c-7834.7241 7801.6396 -7833.5215 7802.6079 -7832.9321 7802.6079 c-7832.7847 7802.6079 -7832.5942 7802.5884 -7832.5942 7802.4399 c-7832.5942 7802.3774 -7832.6377 7802.314 -7832.7207 7802.2095 c-7833.0591 7801.8735 -7833.3125 7801.2388 -7833.3125 7800.9229 c-7833.3125 7800.7109 -7833.2056 7800.5425 -7833.0591 7800.5425 c-7832.8481 7800.5425 -7832.5103 7801.4917 -7832.4048 7801.6396 c-7832.2783 7801.8501 -7831.8994 7802.23 -7831.1826 7802.7573 c-7830.4443 7803.2832 -7829.0103 7804.5903 -7829.0103 7805.856 c-7829.0103 7807.2285 -7830.0645 7808.1343 -7830.8657 7808.1343 c-7831.6455 7808.1343 -7832.6162 7807.6069 -7833.0161 7807.1221 c-7833.6489 7806.3848 -7834.2603 7805.814 -7834.7666 7805.814 c-7835.1045 7805.814 -7835.2515 7806.0239 -7835.2515 7806.2358 c-7835.2515 7806.5728 -7834.9985 7806.8052 -7834.4927 7806.8477 c-7833.9023 7806.8901 -7833.8384 7807.3125 -7833.8384 7807.6479 c-7833.8384 7807.9229 -7834.3657 7808.2397 -7834.7881 7808.2397 c-7835.4199 7808.2397 -7836.2422 7807.5425 -7836.2422 7805.71 c-7836.2422 7804.2119 -7834.9985 7803.7495 -7834.5127 7803.7495 c-7834.0713 7803.7495 -7833.4175 7803.8335 -7833.0376 7804.1694 c-7831.7515 7805.3735 -7831.0767 7805.5825 -7830.5283 7805.5825 c-7830.3169 7805.5825 -7830.2329 7805.5825 -7830.2329 7805.73 c-7830.2329 7806.0469 -7830.9922 7806.2358 -7831.0767 7806.2573 c-7831.2871 7806.3198 -7831.4551 7806.5527 -7831.4551 7806.7637 c-7831.4551 7807.2495 -7831.1826 7807.2695 -7830.8223 7807.2695 c-7830.4663 7807.2695 -7829.7495 7806.9111 -7829.7495 7805.71 c-7829.7495 7804.7183 -7830.8872 7803.5581 -7831.3506 7803.3271 c-7831.6455 7803.1567 -7832.5322 7803.1797 -7832.8906 7803.1367 c-7833.5854 7803.0508 -7835.3569 7802.1045 -7835.3569 7799.6152 c-7835.3784 7798.2021 -7834.0713 7796.8745 -7833.7959 7796.6855 c-7833.6274 7796.5781 -7833.5435 7796.4517 -7833.5435 7796.2832 c-7833.5435 7796.0718 -7833.6074 7793.1416 -7833.9443 7793.1416 c-7834.3872 7793.1416 -7834.4502 7793.1416 -7834.4502 7793.3335 c-7834.1548 7794.4277 -7834.1548 7794.6597 v-7834.1548 7794.9756 -7834.3872 7796.4517 -7835.2515 7796.4517 c-7835.5254 7796.4517 -7835.9897 7796.2197 -7835.9897 7795.9038 c-7835.9897 7795.6079 -7835.2935 7794.4072 -7835.2935 7794.1328 c-7835.2935 7793.647 -7835.3369 7793.6274 -7836.0103 7793.0156 c-7836.2007 7792.8677 -7836.2642 7792.7407 -7836.2642 7792.5503 c-7836.2642 7792.3823 -7836.1582 7792.2549 -7835.9897 7792.2549 c-7835.8423 7792.2549 -7835.2729 7792.5308 -7835.1465 7792.5503 c-7835.02 7792.5503 -7834.7881 7792.5718 -7834.5986 7792.5718 c-7834.2183 7792.5718 -7834.0293 7792.4453 -7834.0293 7792.3188 c-7834.0293 7792.0869 -7834.0293 7791.4126 -7834.8711 7789.9575 c-7835.0615 7789.6196 -7836.2422 7788.2925 -7836.2422 7787.9541 c-7836.2422 7787.7856 -7836.1582 7787.7656 -7836.0537 7787.7656 c-7835.8633 7787.7656 -7835.4414 7788.186 -7835.3154 7788.3345 c-7834.0713 7789.6621 -7833.2495 7791.0957 -7832.8687 7792.3613 c-7832.7847 7792.6772 -7832.6792 7792.5933 -7832.5103 7792.6152 c-7830.3604 7793.1206 -7828.2725 7795.6294 -7828.2725 7795.6509 c-7828.3774 7795.9248 -7828.3774 7795.9878 v-7828.3774 7796.1152 -7828.2725 7796.1367 -7828.2505 7796.1367 c-7828.1885 7796.1367 -7827.9976 7795.9248 -7827.9551 7795.9248 c-7827.8506 7795.9248 -7827.7231 7796.0093 -7827.7231 7796.1567 C-7827.7866 7796.7046 lf0 D-7831.0552 7795.2095 m-7830.4663 7795.2095 -7830.0435 7795.314 -7829.6431 7795.5879 c-7829.6001 7795.6079 -7829.5586 7795.6294 -7829.5376 7795.6294 c-7829.4946 7795.6294 -7829.4946 7795.6079 -7829.4946 7795.5664 c-7829.4946 7795.1445 -7831.3721 7793.1855 -7832.5103 7793.1855 c-7832.5737 7793.1855 -7832.6162 7793.2261 -7832.6162 7793.2886 c-7832.6162 7793.479 -7832.5322 7795.4824 -7832.1943 7795.4824 c-7832.1313 7795.4824 -7832.0464 7795.4604 -7831.9834 7795.4199 c-7831.6455 7795.271 -7831.4351 7795.2095 -7831.0552 7795.2095 cf-7830.5283 7797.9702 m-7830.5283 7797.5488 -7830.5073 7797.0854 -7829.8115 7797.0854 c-7829.1782 7797.0854 -7828.5879 7797.7388 -7828.4409 7797.8862 c-7828.3774 7797.9287 -7828.3354 7797.9487 -7828.2935 7797.9487 c-7828.2725 7797.9487 -7828.2295 7797.9072 -7828.2295 7797.8652 c-7828.2295 7797.4214 -7829.6001 7795.7568 -7830.9497 7795.7568 c-7831.2026 7795.7568 -7832.2153 7795.9248 -7832.2153 7796.4736 c-7832.2153 7796.7261 -7831.8354 7798.0972 -7831.2241 7799.1724 c-7829.8535 7801.6606 -7825.6567 7803.2197 -7823.7593 7803.2197 c-7822.8521 7803.2412 -7822.5566 7802.9253 -7822.4312 7802.9038 c-7822.4097 7802.9038 -7822.3887 7802.8828 -7822.3682 7802.8828 c-7822.2622 7802.8828 -7822.1353 7802.9468 -7822.1353 7803.0942 c-7822.1353 7803.1157 -7822.1567 7803.1157 v-7822.3042 7804.2534 -7822.3462 7804.6548 -7822.3462 7805.9189 c-7822.3462 7807.3125 -7822.3462 7807.438 -7821.3774 7807.438 c-7820.0903 7807.438 -7819.7954 7806.3628 -7819.7954 7806.1309 c-7819.7954 7805.71 -7820.3848 7805.4141 -7820.5337 7805.4141 c-7820.6807 7805.4141 -7820.8506 7805.5205 -7820.8506 7805.71 c-7820.8506 7806.0044 -7820.8921 7806.1519 -7821.1655 7806.1519 c-7821.4399 7806.1519 -7821.4399 7805.7935 -7821.4399 7805.687 c-7821.4399 7805.4351 -7821.3345 7805.1821 -7821.1235 7805.0557 c-7820.7446 7804.8022 -7820.7446 7804.4023 -7820.7446 7804.1909 c-7820.7446 7804.0854 -7820.7446 7803.9585 -7820.7646 7803.8535 c-7820.7866 7803.6855 -7822.7266 7801.6396 -7823.0425 7801.6396 c-7823.1895 7801.6396 -7823.5063 7801.7861 -7824.3706 7801.7861 c-7826.5215 7801.7861 -7827.4922 7800.0581 -7827.6826 7799.5308 c-7827.9346 7798.814 -7828.7363 7798.5181 -7828.9673 7798.5181 c-7829.1577 7798.5181 -7829.1577 7798.5605 -7829.1577 7798.9614 c-7829.1577 7799.0469 -7829.3687 7799.3823 y-7829.3687 7799.5728 -7828.3354 7799.8252 -7828.3354 7800.0156 c-7828.3354 7800.1855 -7828.5249 7800.2046 -7828.6719 7800.2046 c-7828.7563 7800.2046 -7829.8335 7800.2046 -7830.2754 7799.3823 c-7830.4863 7798.9824 -7830.5283 7798.4141 -7830.5283 7797.9702 cf1 D-7826.4375 7795.7148 m-7826.4375 7795.6709 -7826.4585 7795.6509 -7826.48 7795.6509 c-7826.5435 7795.6509 -7826.7114 7795.9878 -7826.7954 7795.9878 c-7826.8594 7795.9878 -7826.9443 7795.9038 -7826.9863 7795.7974 c-7827.0063 7795.7148 -7827.0703 7795.25 -7827.1548 7795.25 c-7827.1973 7795.25 -7827.3657 7795.4824 -7827.4082 7795.4824 c-7827.5552 7795.4824 -7827.6606 7795.25 -7827.6606 7795.0415 c-7827.6606 7794.9341 -7827.7231 7794.9341 -7827.8711 7794.9341 c-7828.4614 7794.9341 -7830.0854 7792.7622 -7830.5073 7791.0117 c-7830.5503 7790.8438 -7830.5283 7790.6958 -7830.8442 7790.5894 c-7833.0161 7789.8535 -7835.4624 7787.7007 -7835.4624 7787.5752 c-7835.4624 7787.4277 -7835.3784 7787.3438 -7835.2515 7787.3438 c-7835.1885 7787.3438 -7835.1045 7787.3438 -7834.5986 7787.6797 c-7833.7129 7788.27 -7831.6665 7789.5576 -7830.8442 7789.5576 c-7830.5713 7789.5576 -7830.5503 7789.1992 -7830.5503 7788.9453 c-7830.5503 7788.7549 -7830.5713 7788.5229 -7830.5713 7788.3774 c-7830.5913 7788.1021 -7830.9082 7787.7856 -7830.9082 7787.6172 c-7830.9082 7787.4692 -7830.7603 7787.3638 -7830.5913 7787.3638 c-7830.4023 7787.3638 -7830.2754 7787.3853 -7830.1055 7787.5752 c-7829.8115 7787.9116 -7829.6851 7788.0605 -7829.3687 7788.0605 c-7829.1362 7788.0605 -7828.0825 7787.3438 -7827.8286 7787.3438 c-7827.5127 7787.3438 -7827.1343 7787.8276 -7827.1343 7788.1245 c-7827.1343 7788.8613 -7828.0391 7789.4517 -7828.5879 7789.4517 c-7828.9673 7789.4517 -7829.3887 7789.3247 -7829.5801 7789.0933 c-7829.6431 7789.0293 -7829.7056 7788.9878 -7829.7695 7788.9878 c-7829.9385 7788.9878 -7830.0645 7789.4517 -7830.0645 7789.4941 c-7830.0645 7789.9175 -7827.2178 7789.978 -7826.8594 7789.978 c-7826.7114 7789.978 -7826.5854 7789.894 -7826.48 7789.7256 c-7826.2896 7789.4316 -7825.1304 7788.2095 -7823.5703 7788.2095 c-7821.7349 7788.2095 -7820.0273 7789.4717 -7820.0273 7791.3701 c-7820.0273 7791.4751 -7820.0693 7792.0229 -7820.0693 7792.0454 c-7820.0693 7792.1084 -7818.9512 7793.8584 -7817.6235 7793.8584 c-7816.5693 7793.8584 -7816.2104 7793.2695 -7816.2104 7792.7832 c-7816.2104 7792.5503 -7816.3159 7791.8984 -7816.8433 7791.8984 c-7817.0542 7791.8984 -7817.1592 7792.1084 -7817.1592 7792.4878 c-7817.1592 7792.5718 -7816.9487 7792.9517 -7816.9487 7793.0576 c-7816.9487 7793.0991 -7816.9688 7793.1206 -7817.0327 7793.1206 c-7817.3706 7793.1206 -7817.8975 7792.7622 -7818.1294 7792.1084 c-7818.4043 7791.3916 -7818.8042 7790.6958 -7819.1406 7790.2949 c-7819.4575 7789.9365 -7819.5635 7789.3452 -7819.5635 7789.0088 c-7819.5635 7788.5229 -7819.0786 7787.3638 -7817.4326 7787.3638 c-7816.2319 7787.3638 -7815.3882 7788.1021 -7815.3882 7788.7134 c-7815.3882 7789.3247 -7815.7046 7789.7046 -7816.1475 7789.7046 c-7816.5903 7789.7046 -7816.9272 7789.3672 -7816.9272 7789.0293 c-7816.9272 7788.355 -7817.0962 7788.2095 -7817.4326 7788.2095 c-7817.6445 7788.2095 -7817.8345 7788.3345 -7817.8345 7788.6504 c-7817.8345 7788.8828 -7817.8345 7789.2612 -7816.3159 7790.5269 c-7815.8306 7790.9277 -7815.3662 7791.6255 -7815.3662 7792.4038 c-7815.3662 7793.1636 -7816.4009 7794.3638 -7817.5811 7794.3638 c-7818.8042 7794.3638 -7819.5854 7793.5854 -7820.1963 7792.8677 c-7820.4902 7792.5308 -7821.9263 7790.8438 -7821.9888 7790.8213 c-7822.1782 7790.6733 -7822.2622 7790.5488 -7822.2622 7790.4214 c-7822.2622 7790.3164 -7822.1567 7790.2109 -7822.0303 7790.2109 c-7821.7983 7790.2109 -7820.8506 7791.1597 -7820.7646 7791.1597 c-7820.7017 7791.1597 -7820.6602 7791.0957 -7820.6602 7791.0117 c-7820.6602 7790.2524 -7821.7983 7788.7773 -7823.5703 7788.7773 c-7825.0454 7788.7773 -7825.9312 7789.894 -7825.9312 7789.9365 c-7825.9312 7790.063 -7825.7842 7790.1885 -7825.4673 7790.2524 c-7821.5874 7790.9912 -7818.3403 7794.5415 -7818.3403 7799.1567 c-7818.3403 7799.2637 -7818.1704 7799.29 -7818.0234 7799.29 c-7817.6655 7799.29 -7817.0327 7799.3687 -7817.0327 7799.0957 c-7817.0327 7798.9893 -7817.0742 7798.8628 -7817.1382 7798.7358 c-7817.4966 7798.1665 -7817.8135 7797.9917 -7817.8135 7797.0415 c-7817.8135 7796.5781 -7817.4326 7796.0508 -7816.8433 7796.0508 c-7815.8105 7796.0508 -7815.3662 7797.0854 -7815.3662 7797.3164 c-7815.3662 7797.4854 -7815.4521 7797.5488 -7815.5352 7797.5488 c-7815.6626 7797.5488 -7816.1689 7797.0215 -7816.3159 7797.0215 c-7816.5063 7797.0215 -7816.6533 7797.063 -7816.6533 7797.5488 c-7816.6533 7797.8862 -7815.3662 7801.5972 -7815.3662 7802.3984 c-7815.3662 7802.9688 -7815.7046 7803.6655 -7816.5903 7804.1694 c-7816.6323 7804.1909 -7816.6533 7804.2119 -7816.6533 7804.2534 c-7816.6533 7804.3374 -7816.5063 7804.4438 -7816.3574 7804.4854 c-7815.7466 7804.6548 -7815.3662 7804.7607 -7815.3662 7805.71 c-7815.3662 7806.0684 -7815.7046 7806.7432 -7815.9575 7806.7432 c-7816.1475 7806.7432 -7816.1475 7806.6997 -7816.1475 7806.3413 c-7816.1475 7806.1943 -7816.1895 7806.0884 -7816.3374 7805.9829 c-7816.6533 7805.7725 -7816.6743 7805.73 -7816.7583 7805.2461 c-7816.8223 7804.9292 -7816.9487 7804.8438 -7818.0874 7804.2119 c-7818.5303 7803.938 -7818.6353 7803.7061 -7818.7192 7803.4741 c-7818.8042 7803.2832 -7818.8682 7803.2832 -7819.3735 7803.2832 c-7819.9009 7803.2832 -7822.4521 7800.5645 -7822.4521 7800.4375 c-7822.4521 7800.3745 -7822.3257 7800.0791 -7822.3257 7800.0156 c-7822.3257 7799.9526 -7822.3462 7799.9111 -7822.3887 7799.9111 c-7822.4312 7799.9111 -7822.5786 7800.1206 -7822.6206 7800.1206 c-7822.7266 7800.1206 -7822.7266 7799.9312 -7822.7266 7799.7832 c-7822.7266 7799.6797 -7822.5151 7799.1084 -7822.5151 7798.9614 c-7822.5151 7798.8774 -7822.5366 7798.814 -7822.5786 7798.814 c-7822.6626 7798.814 -7822.8521 7799.2773 -7822.9375 7799.2773 c-7822.9795 7799.2773 -7823.0215 7799.2358 -7823.0215 7799.1084 c-7823.0215 7798.9614 -7822.8311 7798.2446 y-7822.8311 7798.1816 -7822.8521 7798.0757 -7822.8955 7798.0757 c-7822.9795 7798.0757 -7823.1274 7798.4751 -7823.2114 7798.4751 c-7823.2734 7798.4751 -7823.3374 7798.3916 -7823.3374 7798.2446 c-7823.3374 7798.1597 -7823.1895 7797.7388 -7823.1895 7797.6333 c-7823.1895 7797.5703 -7823.2114 7797.5054 -7823.2534 7797.5054 c-7823.2954 7797.5054 -7823.5283 7798.1191 -7823.6543 7798.1191 c-7823.7383 7798.1191 -7823.8442 7798.0117 -7823.8442 7797.9072 c-7823.8442 7797.8232 -7823.7178 7797.4648 -7823.7178 7797.3804 c-7823.7178 7797.3374 -7823.7178 7797.3164 -7823.7383 7797.3164 c-7823.8223 7797.3164 -7823.9702 7797.8013 -7824.0552 7797.8013 c-7824.2866 7797.8013 -7824.3071 7797.3804 -7824.3071 7797.1904 c-7824.3071 7797.1064 -7824.2446 7796.7676 -7824.2446 7796.7046 c-7824.2446 7796.6421 -7824.2646 7796.6206 -7824.2866 7796.6206 c-7824.4346 7796.6206 -7824.6235 7797.4214 -7824.7725 7797.4214 c-7824.9834 7797.4214 -7824.9834 7797.2319 -7824.9834 7797.0015 c-7824.9614 7796.4736 L-7824.9614 7796.4517 -7824.9834 7796.4316 y-7825.0034 7796.4316 -7825.0454 7796.4517 -7825.0674 7796.5151 c-7825.1304 7796.7261 -7825.2563 7797.1484 -7825.4673 7797.1484 c-7825.6143 7797.1484 -7825.7622 7796.979 -7825.7622 7796.8335 c-7825.7622 7796.5996 -7825.6567 7796.2197 -7825.6567 7795.9878 c-7825.6567 7795.9248 -7825.6782 7795.9038 -7825.7202 7795.9038 c-7825.8057 7795.9038 -7825.9312 7796.3452 -7825.9727 7796.4316 c-7826.0366 7796.5151 -7826.1001 7796.5366 -7826.1641 7796.5366 c-7826.48 7796.5366 -7826.48 7796.2197 -7826.48 7796.0718 C-7826.4375 7795.7148 lf0 D-7827.8081 7791.3496 m-7827.8081 7791.1167 -7829.7495 7790.9277 -7829.8115 7790.9277 c-7829.9175 7790.9277 -7829.98 7790.9912 -7829.98 7791.0957 c-7829.98 7791.9604 -7828.2295 7794.1958 -7827.8081 7794.1958 c-7827.7446 7794.1958 -7827.7231 7794.1743 -7827.7231 7794.1118 c-7828.1455 7792.8677 -7828.1455 7792.6152 v-7828.1455 7792.2349 -7828.0391 7791.9824 -7827.8506 7791.5605 c-7827.8286 7791.4751 -7827.8081 7791.4126 -7827.8081 7791.3496 cf-7819.0786 7802.7983 m-7818.9307 7802.7983 -7818.4243 7802.2935 -7818.2773 7802.2935 c-7818.1514 7802.2935 -7818.0239 7802.3774 -7818.0239 7802.5244 c-7818.0239 7802.6079 -7818.2144 7803.0508 -7818.2144 7803.1567 c-7818.2144 7803.5151 -7817.8345 7803.8125 -7817.4546 7803.8125 c-7817.0542 7803.8125 -7815.9155 7803.4951 -7815.9155 7802.271 c-7815.9155 7801.1743 -7816.3374 7801.1743 -7817.9814 7801.1743 c-7818.3403 7801.1743 -7820.0063 7801.3647 -7820.2593 7801.3647 c-7820.3848 7801.3647 -7820.4282 7801.1958 -7820.4282 7801.0693 c-7820.4282 7801.0278 -7820.4282 7800.9863 -7820.4063 7800.9648 c-7820.3433 7800.5854 -7820.1123 7800.0366 -7820.1123 7799.6572 c-7820.1123 7795.2095 -7824.2446 7791.3496 -7826.7114 7791.3496 c-7827.3657 7791.3496 -7827.5967 7792.1509 -7827.5967 7792.5718 c-7827.5967 7794.3013 -7825.6143 7795.3345 -7825.3623 7795.3345 c-7825.2993 7795.3345 -7825.2783 7795.314 -7825.2783 7795.271 c-7825.2783 7795.2295 -7825.2993 7795.187 -7825.3423 7795.1445 c-7825.4673 7794.9756 -7825.9946 7794.3638 -7825.9946 7793.7324 c-7825.9946 7793.394 -7825.7002 7792.9517 -7824.9399 7792.9517 c-7823.6753 7792.9517 -7823.1274 7794.3013 -7823.1274 7794.6597 c-7823.1274 7794.8076 -7823.1895 7795.0181 -7823.4009 7795.0181 c-7823.5483 7795.0181 -7823.9497 7794.3638 -7824.0967 7794.3638 c-7824.1606 7794.3638 -7824.3921 7794.4912 -7824.4551 7794.4912 c-7824.5391 7794.4912 -7824.6035 7794.4702 -7824.6875 7794.4702 c-7824.7505 7794.4702 -7824.7935 7794.5327 -7824.7935 7794.6382 c-7824.7935 7794.9985 -7824.3071 7795.5664 -7823.8223 7795.8198 c-7822.9175 7796.2832 -7821.5674 7797.6118 -7821.5674 7799.0669 c-7821.5674 7799.4878 -7821.6294 7799.8892 -7821.6294 7800.2261 c-7821.6294 7800.7749 -7820.7017 7801.6396 -7819.7529 7802.5244 c-7819.5854 7802.6724 -7819.3311 7802.7983 -7819.0786 7802.7983 cf*UU%AI8_EndBrushPattern%AI8_BeginBrushPattern(Unnamed Brush Pat 57)0 Au1 Ap0 J 0 j 1 w 4 M []0 d0 XR-7810.9175 7812.519 m-7810.9175 7786.4917 L-7836.9448 7786.4917 L-7836.9448 7812.519 L-7810.9175 7812.519 Ln0 Ap0 R0.597742 0.537865 0.64184 0.350469 K0.375 w-7819.5903 7799.5088 m-7810.9185 7799.5088 lS-7823.9287 7812.519 m-7823.9287 7803.8438 lS0.64 0.650477 0.701045 0.510735 K1.125 w-7819.6655 7795.1694 m-7810.9175 7795.1694 lS-7828.2681 7812.519 m-7828.2681 7803.1655 lS0.7084 0.636438 0.515526 0.381872 K-7819.5952 7812.519 m-7819.5952 7810.1064 l-7816.9385 7809.8828 -7815.2544 7808.1797 v-7813.5513 7806.4526 -7813.3223 7803.8477 y-7810.9175 7803.8477 lS*u0 O0.7084 0.636438 0.515526 0.381872 k1 w-7827.7231 7796.1567 m-7827.7231 7796.0093 -7827.8506 7795.9248 -7827.9551 7795.9248 c-7827.9976 7795.9248 -7828.1885 7796.1367 -7828.2505 7796.1367 c-7828.2725 7796.1367 -7828.3774 7796.1152 -7828.3774 7795.9878 c-7828.3774 7795.9248 -7828.2725 7795.6509 y-7828.2725 7795.6294 -7830.3604 7793.1206 -7832.5103 7792.6152 c-7832.6792 7792.5933 -7832.7847 7792.6772 -7832.8687 7792.3613 c-7833.2495 7791.0957 -7834.0713 7789.6621 -7835.3154 7788.3345 c-7835.4414 7788.187 -7835.8633 7787.7656 -7836.0537 7787.7656 c-7836.1582 7787.7656 -7836.2422 7787.7856 -7836.2422 7787.9541 c-7836.2422 7788.2925 -7835.0615 7789.6196 -7834.8711 7789.9575 c-7834.0293 7791.4126 -7834.0293 7792.0869 -7834.0293 7792.3188 c-7834.0293 7792.4453 -7834.2183 7792.5718 -7834.5986 7792.5718 c-7834.7881 7792.5718 -7835.02 7792.5503 -7835.1465 7792.5503 c-7835.2729 7792.5308 -7835.8423 7792.2549 -7835.9897 7792.2549 c-7836.1582 7792.2549 -7836.2642 7792.3823 -7836.2642 7792.5503 c-7836.2642 7792.7407 -7836.2007 7792.8677 -7836.0103 7793.0156 c-7835.3369 7793.6274 -7835.2935 7793.647 -7835.2935 7794.1328 c-7835.2935 7794.4072 -7835.9897 7795.6079 -7835.9897 7795.9038 c-7835.9897 7796.2197 -7835.5254 7796.4517 -7835.2515 7796.4517 c-7834.3872 7796.4517 -7834.1548 7794.9756 -7834.1548 7794.6597 c-7834.1548 7794.4277 -7834.4502 7793.3335 y-7834.4502 7793.1416 -7834.3872 7793.1416 -7833.9443 7793.1416 c-7833.6074 7793.1416 -7833.5435 7796.0718 -7833.5435 7796.2832 c-7833.5435 7796.4517 -7833.6274 7796.5781 -7833.7959 7796.6855 c-7834.0713 7796.8745 -7835.3784 7798.2021 -7835.3569 7799.6152 c-7835.3569 7802.1045 -7833.5854 7803.0508 -7832.8906 7803.1367 c-7832.5322 7803.1797 -7831.6455 7803.1567 -7831.3506 7803.3271 c-7830.8872 7803.5581 -7829.7495 7804.7183 -7829.7495 7805.71 c-7829.7495 7806.9111 -7830.4663 7807.2695 -7830.8223 7807.2695 c-7831.1826 7807.2695 -7831.4551 7807.2495 -7831.4551 7806.7637 c-7831.4551 7806.5527 -7831.2871 7806.3198 -7831.0767 7806.2573 c-7830.9922 7806.2358 -7830.2329 7806.0469 -7830.2329 7805.73 c-7830.2329 7805.5825 -7830.3169 7805.5825 -7830.5283 7805.5825 c-7831.0767 7805.5825 -7831.7515 7805.3735 -7833.0376 7804.1694 c-7833.4175 7803.8335 -7834.0713 7803.7495 -7834.5127 7803.7495 c-7834.9985 7803.7495 -7836.2422 7804.2119 -7836.2422 7805.71 c-7836.2422 7807.5425 -7835.4199 7808.2397 -7834.7881 7808.2397 c-7834.3657 7808.2397 -7833.8384 7807.9229 -7833.8384 7807.6479 c-7833.8384 7807.3125 -7833.9023 7806.8901 -7834.4927 7806.8477 c-7834.9985 7806.8052 -7835.2515 7806.5728 -7835.2515 7806.2358 c-7835.2515 7806.0239 -7835.1045 7805.814 -7834.7666 7805.814 c-7834.2603 7805.814 -7833.6489 7806.3848 -7833.0161 7807.1221 c-7832.6162 7807.6069 -7831.6455 7808.1343 -7830.8657 7808.1343 c-7830.0645 7808.1343 -7829.0103 7807.2285 -7829.0103 7805.856 c-7829.0103 7804.5903 -7830.4443 7803.2832 -7831.1826 7802.7573 c-7831.8994 7802.23 -7832.2783 7801.8501 -7832.4048 7801.6396 c-7832.5103 7801.4917 -7832.8481 7800.5425 -7833.0591 7800.5425 c-7833.2056 7800.5425 -7833.3125 7800.7109 -7833.3125 7800.9229 c-7833.3125 7801.2388 -7833.0591 7801.8735 -7832.7207 7802.2095 c-7832.6377 7802.314 -7832.5942 7802.3774 -7832.5942 7802.4399 c-7832.5942 7802.5884 -7832.7847 7802.6079 -7832.9321 7802.6079 c-7833.5215 7802.6079 -7834.7241 7801.6396 -7834.7241 7799.8052 c-7834.7241 7798.2236 -7833.7329 7797.3804 -7833.5854 7797.3804 c-7833.4814 7797.3804 -7833.3745 7797.4854 -7833.3125 7797.6973 c-7831.6045 7803.8535 -7826.7271 7805.0767 -7824.3223 7805.0767 c-7824.2178 7805.0767 -7824.1343 7805.1392 -7824.1343 7805.2886 c-7824.1343 7805.4141 -7824.1343 7806.5117 -7824.2808 7806.5117 c-7824.3223 7806.5117 -7824.3862 7806.4893 -7824.4712 7806.4272 c-7825.0391 7805.9629 -7825.3203 7805.6045 -7826.2471 7805.6045 c-7826.7114 7805.6045 -7827.5127 7806.1309 -7827.5127 7806.7432 c-7827.5127 7807.522 -7826.8384 7808.2397 -7826.3535 7808.2397 c-7825.9946 7808.2397 -7825.8472 7808.1548 -7825.8472 7808.0293 c-7825.8472 7807.9004 -7826.3115 7807.46 -7826.3115 7807.3125 c-7826.3115 7807.0581 -7826.2695 7806.9111 -7825.8257 7806.9111 c-7825.4263 7806.9111 -7824.7295 7807.0806 -7824.2866 7807.3345 c-7823.8223 7807.6069 -7822.6841 7808.2397 -7821.6514 7808.2397 c-7820.8921 7808.2397 -7819.9009 7807.7964 -7819.4155 7806.9956 c-7819.3735 7806.9312 -7819.3311 7806.9111 -7819.2896 7806.9111 c-7819.1841 7806.9111 -7819.0991 7806.9956 -7819.0786 7807.1445 c-7819.0361 7807.5425 -7818.6982 7808.2397 -7817.8765 7808.2397 c-7817.2856 7808.2397 -7816.7583 7807.7324 -7816.7583 7807.29 c-7816.7583 7807.1221 -7816.8643 7807.0581 -7816.9688 7807.0581 c-7817.0542 7807.0581 -7817.4326 7807.3125 -7817.5391 7807.3125 c-7817.6855 7807.3125 -7818.5928 7806.6997 -7818.6782 7806.5527 c-7819.4575 7805.2661 -7819.5425 7805.1191 -7820.1743 7804.8652 c-7820.3433 7804.7813 -7820.3433 7804.6973 -7820.3433 7803.8335 c-7820.3433 7803.7061 -7820.3433 7803.4092 -7820.4902 7803.2412 c-7820.7646 7802.9688 -7822.8735 7800.9004 -7823.0845 7800.9004 c-7823.1689 7800.9004 -7823.4434 7801.1743 -7823.5283 7801.1743 c-7823.5483 7801.1743 -7823.5703 7801.1743 -7823.5703 7801.1333 C-7823.5483 7800.9863 l-7823.5483 7800.8184 -7823.5903 7800.7324 -7823.8013 7800.7324 c-7823.8647 7800.7324 -7824.1392 7800.8589 -7824.2017 7800.8589 c-7824.2646 7800.8589 -7824.3071 7800.4175 -7824.3921 7800.4175 c-7824.4126 7800.4175 -7824.7505 7800.6479 -7824.8345 7800.6479 c-7824.9614 7800.6479 -7825.0454 7800.5645 -7825.0454 7800.4585 c-7825.0454 7800.3965 -7825.0454 7799.9111 -7825.1514 7799.9111 c-7825.2363 7799.9111 -7825.4673 7800.2046 -7825.5103 7800.2046 c-7825.5303 7800.2046 -7825.5303 7800.1855 -7825.5303 7800.1206 C-7825.4888 7799.6997 l-7825.4888 7799.6357 -7825.5303 7799.6152 -7825.5942 7799.6152 c-7825.6567 7799.6152 -7825.9106 7799.9312 -7825.9946 7799.9312 c-7826.0366 7799.9312 -7826.0586 7799.8892 -7826.0586 7799.8052 c-7826.0586 7799.7637 -7825.8682 7799.0469 -7825.8682 7798.8984 c-7825.8682 7798.814 -7825.9106 7798.771 -7825.9526 7798.771 c-7826.0366 7798.771 -7826.3745 7799.1309 -7826.4175 7799.1309 c-7826.4375 7799.1309 -7826.4375 7799.1309 -7826.4375 7799.1084 c-7826.4375 7799.0239 -7826.3335 7798.6665 -7826.3335 7798.646 c-7826.3335 7798.6255 -7826.3535 7798.603 -7826.3745 7798.603 c-7826.4175 7798.603 -7826.6274 7798.814 -7826.6895 7798.814 c-7826.7114 7798.814 -7826.7114 7798.814 -7826.7114 7798.771 c-7826.7114 7798.603 -7826.4585 7797.8652 -7826.4585 7797.8013 c-7826.4585 7797.7798 -7826.48 7797.7583 -7826.5015 7797.7583 c-7826.6274 7797.7583 -7827.0503 7798.3301 -7827.0913 7798.3301 c-7827.1123 7798.3301 -7827.1123 7798.3071 -7827.1123 7798.2446 c-7827.1123 7798.0542 -7826.8384 7797.1484 y-7826.8384 7797.1274 -7826.8594 7797.1064 -7826.8799 7797.1064 c-7827.0063 7797.1064 -7827.3862 7797.6533 -7827.4497 7797.6533 c-7827.4712 7797.6533 -7827.4712 7797.6533 -7827.4712 7797.6118 c-7827.2178 7796.7046 -7827.2178 7796.6206 v-7827.2178 7796.5151 -7827.2603 7796.4736 -7827.3442 7796.4736 c-7827.4082 7796.4736 -7827.6392 7796.8101 -7827.7231 7796.8101 c-7827.7666 7796.8101 -7827.7866 7796.7676 -7827.7866 7796.7046 c-7827.7231 7796.1567 Lf1 D-7831.9834 7795.4199 m-7832.0464 7795.4604 -7832.1313 7795.4824 -7832.1943 7795.4824 c-7832.5322 7795.4824 -7832.6162 7793.479 -7832.6162 7793.2886 c-7832.6162 7793.2261 -7832.5737 7793.1855 -7832.5103 7793.1855 c-7831.3721 7793.1855 -7829.4946 7795.146 -7829.4946 7795.5664 c-7829.4946 7795.6079 -7829.4946 7795.6294 -7829.5376 7795.6294 c-7829.5586 7795.6294 -7829.6001 7795.6079 -7829.6431 7795.5879 c-7830.0435 7795.314 -7830.4663 7795.2095 -7831.0552 7795.2095 c-7831.4351 7795.2095 -7831.6455 7795.271 -7831.9834 7795.4199 cf-7830.2754 7799.3823 m-7829.8335 7800.2046 -7828.7563 7800.2046 -7828.6719 7800.2046 c-7828.5249 7800.2046 -7828.3354 7800.1855 -7828.3354 7800.0156 c-7828.3354 7799.8252 -7829.3687 7799.5728 -7829.3687 7799.3823 c-7829.1577 7799.0469 -7829.1577 7798.9614 v-7829.1577 7798.562 -7829.1577 7798.519 -7828.9673 7798.519 c-7828.7363 7798.519 -7827.9346 7798.814 -7827.6826 7799.5308 c-7827.4922 7800.0581 -7826.5215 7801.7861 -7824.3706 7801.7861 c-7823.5063 7801.7861 -7823.1895 7801.6396 -7823.0425 7801.6396 c-7822.7266 7801.6396 -7820.7866 7803.6855 -7820.7646 7803.8535 c-7820.7446 7803.9585 -7820.7446 7804.0854 -7820.7446 7804.1909 c-7820.7446 7804.4023 -7820.7446 7804.8022 -7821.1235 7805.0557 c-7821.3345 7805.1821 -7821.4399 7805.4351 -7821.4399 7805.687 c-7821.4399 7805.7935 -7821.4399 7806.1519 -7821.1655 7806.1519 c-7820.8921 7806.1519 -7820.8506 7806.0044 -7820.8506 7805.71 c-7820.8506 7805.5205 -7820.6807 7805.4141 -7820.5337 7805.4141 c-7820.3848 7805.4141 -7819.7954 7805.71 -7819.7954 7806.1309 c-7819.7954 7806.3628 -7820.0903 7807.438 -7821.3774 7807.438 c-7822.3462 7807.438 -7822.3462 7807.3125 -7822.3462 7805.9189 c-7822.3462 7804.6548 -7822.3042 7804.2534 -7822.1567 7803.1157 c-7822.1353 7803.1157 -7822.1353 7803.0942 y-7822.1353 7802.9468 -7822.2622 7802.8828 -7822.3682 7802.8828 c-7822.3887 7802.8828 -7822.4097 7802.9038 -7822.4312 7802.9038 c-7822.5566 7802.9253 -7822.8521 7803.2412 -7823.7593 7803.2197 c-7825.6567 7803.2197 -7829.8535 7801.6606 -7831.2241 7799.1724 c-7831.8354 7798.0972 -7832.2153 7796.7261 -7832.2153 7796.4736 c-7832.2153 7795.9248 -7831.2026 7795.7568 -7830.9497 7795.7568 c-7829.6001 7795.7568 -7828.2295 7797.4214 -7828.2295 7797.8652 c-7828.2295 7797.9072 -7828.2725 7797.9487 -7828.2935 7797.9487 c-7828.3354 7797.9487 -7828.3774 7797.9287 -7828.4409 7797.8862 c-7828.5879 7797.7388 -7829.1782 7797.0854 -7829.8115 7797.0854 c-7830.5073 7797.0854 -7830.5283 7797.5488 -7830.5283 7797.9702 c-7830.5283 7798.4141 -7830.4863 7798.9824 -7830.2754 7799.3823 cf0 D-7826.48 7796.0718 m-7826.48 7796.2197 -7826.48 7796.5366 -7826.1641 7796.5366 c-7826.1001 7796.5366 -7826.0366 7796.5151 -7825.9727 7796.4316 c-7825.9312 7796.3452 -7825.8057 7795.9038 -7825.7202 7795.9038 c-7825.6782 7795.9038 -7825.6567 7795.9248 -7825.6567 7795.9878 c-7825.6567 7796.2197 -7825.7622 7796.5996 -7825.7622 7796.8335 c-7825.7622 7796.979 -7825.6143 7797.1484 -7825.4673 7797.1484 c-7825.2563 7797.1484 -7825.1304 7796.7261 -7825.0674 7796.5151 c-7825.0454 7796.4517 -7825.0034 7796.4316 -7824.9834 7796.4316 c-7824.9614 7796.4517 -7824.9614 7796.4736 V-7824.9834 7797.0015 l-7824.9834 7797.2319 -7824.9834 7797.4214 -7824.7725 7797.4214 c-7824.6235 7797.4214 -7824.4346 7796.6206 -7824.2866 7796.6206 c-7824.2646 7796.6206 -7824.2446 7796.6421 -7824.2446 7796.7046 c-7824.2446 7796.7676 -7824.3071 7797.1064 -7824.3071 7797.1904 c-7824.3071 7797.3804 -7824.2866 7797.8013 -7824.0552 7797.8013 c-7823.9702 7797.8013 -7823.8223 7797.3164 -7823.7383 7797.3164 c-7823.7178 7797.3164 -7823.7178 7797.3374 -7823.7178 7797.3804 c-7823.7178 7797.4648 -7823.8442 7797.8232 -7823.8442 7797.9072 c-7823.8442 7798.0117 -7823.7383 7798.1191 -7823.6543 7798.1191 c-7823.5283 7798.1191 -7823.2954 7797.5054 -7823.2534 7797.5054 c-7823.2114 7797.5054 -7823.1895 7797.5703 -7823.1895 7797.6333 c-7823.1895 7797.7388 -7823.3374 7798.1597 -7823.3374 7798.2446 c-7823.3374 7798.3916 -7823.2734 7798.4751 -7823.2114 7798.4751 c-7823.1274 7798.4751 -7822.9795 7798.0757 -7822.8955 7798.0757 c-7822.8521 7798.0757 -7822.8311 7798.1816 -7822.8311 7798.2446 c-7823.0215 7798.9614 -7823.0215 7799.1084 v-7823.0215 7799.2358 -7822.9795 7799.2773 -7822.9375 7799.2773 c-7822.8521 7799.2773 -7822.6626 7798.814 -7822.5786 7798.814 c-7822.5366 7798.814 -7822.5151 7798.8774 -7822.5151 7798.9614 c-7822.5151 7799.1084 -7822.7266 7799.6797 -7822.7266 7799.7832 c-7822.7266 7799.9312 -7822.7266 7800.1206 -7822.6206 7800.1206 c-7822.5786 7800.1206 -7822.4312 7799.9111 -7822.3887 7799.9111 c-7822.3462 7799.9111 -7822.3257 7799.9526 -7822.3257 7800.0156 c-7822.3257 7800.0791 -7822.4521 7800.3745 -7822.4521 7800.4375 c-7822.4521 7800.5645 -7819.9009 7803.2832 -7819.3735 7803.2832 c-7818.8682 7803.2832 -7818.8042 7803.2832 -7818.7192 7803.4741 c-7818.6353 7803.7061 -7818.5303 7803.938 -7818.0874 7804.2119 c-7816.9487 7804.8438 -7816.8223 7804.9292 -7816.7583 7805.2461 c-7816.6743 7805.73 -7816.6533 7805.7725 -7816.3374 7805.9829 c-7816.1895 7806.0884 -7816.1475 7806.1943 -7816.1475 7806.3413 c-7816.1475 7806.6997 -7816.1475 7806.7432 -7815.9575 7806.7432 c-7815.7046 7806.7432 -7815.3662 7806.0684 -7815.3662 7805.71 c-7815.3662 7804.7607 -7815.7466 7804.6548 -7816.3574 7804.4854 c-7816.5063 7804.4438 -7816.6533 7804.3374 -7816.6533 7804.2534 c-7816.6533 7804.2119 -7816.6323 7804.1909 -7816.5903 7804.1694 c-7815.7046 7803.6655 -7815.3662 7802.9688 -7815.3662 7802.3984 c-7815.3662 7801.5972 -7816.6533 7797.8862 -7816.6533 7797.5488 c-7816.6533 7797.063 -7816.5063 7797.0215 -7816.3159 7797.0215 c-7816.1689 7797.0215 -7815.6626 7797.5488 -7815.5352 7797.5488 c-7815.4521 7797.5488 -7815.3662 7797.4854 -7815.3662 7797.3164 c-7815.3662 7797.0854 -7815.8105 7796.0508 -7816.8433 7796.0508 c-7817.4326 7796.0508 -7817.8135 7796.5781 -7817.8135 7797.0415 c-7817.8135 7797.9917 -7817.4966 7798.1665 -7817.1382 7798.7358 c-7817.0742 7798.8628 -7817.0327 7798.9893 -7817.0327 7799.0957 c-7817.0327 7799.3687 -7817.6655 7799.29 -7818.0234 7799.29 c-7818.1704 7799.29 -7818.3403 7799.2637 -7818.3403 7799.1567 c-7818.3403 7794.5415 -7821.5874 7790.9912 -7825.4673 7790.2524 c-7825.7842 7790.1885 -7825.9312 7790.063 -7825.9312 7789.9365 c-7825.9312 7789.894 -7825.0454 7788.7773 -7823.5703 7788.7773 c-7821.7983 7788.7773 -7820.6602 7790.2524 -7820.6602 7791.0117 c-7820.6602 7791.0957 -7820.7017 7791.1597 -7820.7646 7791.1597 c-7820.8506 7791.1597 -7821.7983 7790.2109 -7822.0303 7790.2109 c-7822.1567 7790.2109 -7822.2622 7790.3164 -7822.2622 7790.4214 c-7822.2622 7790.5488 -7822.1782 7790.6733 -7821.9888 7790.8213 c-7821.9263 7790.8438 -7820.4902 7792.5308 -7820.1963 7792.8677 c-7819.5854 7793.5854 -7818.8042 7794.3638 -7817.5811 7794.3638 c-7816.4009 7794.3638 -7815.3662 7793.1636 -7815.3662 7792.4038 c-7815.3662 7791.6255 -7815.8306 7790.9277 -7816.3159 7790.5269 c-7817.8345 7789.2612 -7817.8345 7788.8828 -7817.8345 7788.6504 c-7817.8345 7788.3345 -7817.6445 7788.2095 -7817.4326 7788.2095 c-7817.0962 7788.2095 -7816.9272 7788.355 -7816.9272 7789.0293 c-7816.9272 7789.3672 -7816.5903 7789.7046 -7816.1475 7789.7046 c-7815.7046 7789.7046 -7815.3882 7789.3247 -7815.3882 7788.7134 c-7815.3882 7788.103 -7816.2319 7787.3638 -7817.4326 7787.3638 c-7819.0786 7787.3638 -7819.5635 7788.5229 -7819.5635 7789.0088 c-7819.5635 7789.3452 -7819.4575 7789.9365 -7819.1406 7790.2949 c-7818.8042 7790.6958 -7818.4043 7791.3916 -7818.1294 7792.1084 c-7817.8975 7792.7622 -7817.3706 7793.1206 -7817.0327 7793.1206 c-7816.9688 7793.1206 -7816.9487 7793.0991 -7816.9487 7793.0576 c-7816.9487 7792.9517 -7817.1592 7792.5718 -7817.1592 7792.4878 c-7817.1592 7792.1084 -7817.0542 7791.8984 -7816.8433 7791.8984 c-7816.3159 7791.8984 -7816.2104 7792.5503 -7816.2104 7792.7832 c-7816.2104 7793.2695 -7816.5693 7793.8584 -7817.6235 7793.8584 c-7818.9512 7793.8584 -7820.0693 7792.1084 -7820.0693 7792.0454 c-7820.0693 7792.0229 -7820.0273 7791.4751 -7820.0273 7791.3701 c-7820.0273 7789.4717 -7821.7349 7788.2095 -7823.5703 7788.2095 c-7825.1304 7788.2095 -7826.2896 7789.4316 -7826.48 7789.7256 c-7826.5854 7789.894 -7826.7114 7789.978 -7826.8594 7789.978 c-7827.2178 7789.978 -7830.0645 7789.9175 -7830.0645 7789.4941 c-7830.0645 7789.4517 -7829.9385 7788.9878 -7829.7695 7788.9878 c-7829.7056 7788.9878 -7829.6431 7789.0293 -7829.5801 7789.0933 c-7829.3887 7789.3247 -7828.9673 7789.4517 -7828.5879 7789.4517 c-7828.0391 7789.4517 -7827.1343 7788.8613 -7827.1343 7788.1245 c-7827.1343 7787.8276 -7827.5127 7787.3438 -7827.8286 7787.3438 c-7828.0825 7787.3438 -7829.1362 7788.0605 -7829.3687 7788.0605 c-7829.6851 7788.0605 -7829.8115 7787.9116 -7830.1055 7787.5752 c-7830.2754 7787.3853 -7830.4023 7787.3638 -7830.5913 7787.3638 c-7830.7603 7787.3638 -7830.9082 7787.4692 -7830.9082 7787.6172 c-7830.9082 7787.7856 -7830.5913 7788.103 -7830.5713 7788.3774 c-7830.5713 7788.5229 -7830.5503 7788.7549 -7830.5503 7788.9453 c-7830.5503 7789.1992 -7830.5713 7789.5576 -7830.8442 7789.5576 c-7831.6665 7789.5576 -7833.7129 7788.271 -7834.5986 7787.6797 c-7835.1045 7787.3438 -7835.1885 7787.3438 -7835.2515 7787.3438 c-7835.3784 7787.3438 -7835.4624 7787.4277 -7835.4624 7787.5752 c-7835.4624 7787.7007 -7833.0161 7789.8535 -7830.8442 7790.5894 c-7830.5283 7790.6958 -7830.5503 7790.8438 -7830.5073 7791.0117 c-7830.0854 7792.7622 -7828.4614 7794.9351 -7827.8711 7794.9351 c-7827.7231 7794.9351 -7827.6606 7794.9351 -7827.6606 7795.0415 c-7827.6606 7795.25 -7827.5552 7795.4824 -7827.4082 7795.4824 c-7827.3657 7795.4824 -7827.1973 7795.25 -7827.1548 7795.25 c-7827.0703 7795.25 -7827.0063 7795.7148 -7826.9863 7795.7974 c-7826.9443 7795.9038 -7826.8594 7795.9878 -7826.7954 7795.9878 c-7826.7114 7795.9878 -7826.5435 7795.6509 -7826.48 7795.6509 c-7826.4585 7795.6509 -7826.4375 7795.6709 -7826.4375 7795.7148 c-7826.48 7796.0718 Lf1 D-7827.8506 7791.5605 m-7828.0391 7791.9824 -7828.1455 7792.2349 -7828.1455 7792.6152 c-7828.1455 7792.8677 -7827.7231 7794.1118 y-7827.7231 7794.1743 -7827.7446 7794.1958 -7827.8081 7794.1958 c-7828.2295 7794.1958 -7829.98 7791.9604 -7829.98 7791.0957 c-7829.98 7790.9912 -7829.9175 7790.9277 -7829.8115 7790.9277 c-7829.7495 7790.9277 -7827.8081 7791.1167 -7827.8081 7791.3496 c-7827.8081 7791.4126 -7827.8286 7791.4751 -7827.8506 7791.5605 cf-7819.7529 7802.5244 m-7820.7017 7801.6396 -7821.6294 7800.7749 -7821.6294 7800.2261 c-7821.6294 7799.8892 -7821.5674 7799.4878 -7821.5674 7799.0669 c-7821.5674 7797.6118 -7822.9175 7796.2832 -7823.8223 7795.8198 c-7824.3071 7795.5664 -7824.7935 7794.9985 -7824.7935 7794.6382 c-7824.7935 7794.5327 -7824.7505 7794.4702 -7824.6875 7794.4702 c-7824.6035 7794.4702 -7824.5391 7794.4912 -7824.4551 7794.4912 c-7824.3921 7794.4912 -7824.1606 7794.3638 -7824.0967 7794.3638 c-7823.9497 7794.3638 -7823.5483 7795.019 -7823.4009 7795.019 c-7823.1895 7795.019 -7823.1274 7794.8076 -7823.1274 7794.6597 c-7823.1274 7794.3013 -7823.6753 7792.9517 -7824.9399 7792.9517 c-7825.7002 7792.9517 -7825.9946 7793.394 -7825.9946 7793.7324 c-7825.9946 7794.3638 -7825.4673 7794.9756 -7825.3423 7795.146 c-7825.2993 7795.187 -7825.2783 7795.2295 -7825.2783 7795.271 c-7825.2783 7795.314 -7825.2993 7795.3345 -7825.3623 7795.3345 c-7825.6143 7795.3345 -7827.5967 7794.3013 -7827.5967 7792.5718 c-7827.5967 7792.1509 -7827.3657 7791.3496 -7826.7114 7791.3496 c-7824.2446 7791.3496 -7820.1123 7795.2095 -7820.1123 7799.6572 c-7820.1123 7800.0366 -7820.3433 7800.5854 -7820.4063 7800.9648 c-7820.4282 7800.9863 -7820.4282 7801.0278 -7820.4282 7801.0693 c-7820.4282 7801.1958 -7820.3848 7801.3647 -7820.2593 7801.3647 c-7820.0063 7801.3647 -7818.3403 7801.1743 -7817.9814 7801.1743 c-7816.3374 7801.1743 -7815.9155 7801.1743 -7815.9155 7802.271 c-7815.9155 7803.4951 -7817.0542 7803.8125 -7817.4546 7803.8125 c-7817.8345 7803.8125 -7818.2144 7803.5151 -7818.2144 7803.1567 c-7818.2144 7803.0508 -7818.0239 7802.6079 -7818.0239 7802.5244 c-7818.0239 7802.3774 -7818.1514 7802.2935 -7818.2773 7802.2935 c-7818.4243 7802.2935 -7818.9307 7802.7983 -7819.0786 7802.7983 c-7819.3311 7802.7983 -7819.5854 7802.6724 -7819.7529 7802.5244 cf*UU%AI8_EndBrushPattern%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Brush Manager Order)(Adobe Brush Manager Order)( Adobe Calligraphic Brush Tool/ 2 pt. Oval/ Adobe Calligraphic) -( Brush Tool/ 5 pt. Oval/ Adobe Calligraphic Brush Tool/ 5 pt. ) -(Flat/ Adobe Calligraphic Brush Tool/ 3 pt. Round/ Adobe Callig) -(raphic Brush Tool/ 7 pt. Round/ Adobe Calligraphic Brush Tool/) -( 15 pt. Round/ Adobe ArtOnPath Brush Tool/ Charcoal/ Adobe Art) -(OnPath Brush Tool/ Tapered Stroke/ Adobe ArtOnPath Brush Tool/) -( Floral Spoke/ Adobe PatternOnPath Brush Tool/ Red Arrow Brush) -( / Adobe PatternOnPath Brush Tool/ Gothic/) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(15 pt. Round)(1 15 15 100 100 15 15 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(2 pt. Oval)(1 2 2 26 74 15 15 0 1 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(3 pt. Round)(1 3 3 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Flat)(1 5 5 0 0 90 90 0 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(5 pt. Oval)(1 5 5 10 90 -65 35 0 1 1 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe Calligraphic Brush Tool)(7 pt. Round)(1 7 7 100 100 0 0 0 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Charcoal)(1 / Unnamed Brush Pat 4/ / / / / 0 1 /  1 1 1.2 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Floral Spoke)(1 / Unnamed Brush Pat 12/ / / / / 0 1 /  1 1 1 0 1 0 0 1) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe ArtOnPath Brush Tool)(Tapered Stroke)(1 / Unnamed 20/ / / / / 0 1 /  1 1 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_Begin_NonPrintingNp%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Gothic)(1 / Unnamed Brush Pat 55/ Unnamed Brush Pat 57/ Unnamed Brush ) -(Pat 56/ / / 5 0.717647 0.556863 0.176471 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI8_BeginPluginObject(Adobe PatternOnPath Brush Tool)(Red Arrow Brush )(1 / Unnamed Brush Pat 158/ Unnamed Brush Pat 160/ Unnamed Brus) -(h Pat 160/ Unnamed Brush Pat 162/ Unnamed Brush Pat 161/ 5 0.0) -(196078 0.027451 0.0313726 /  1 0 1 0 1 0 0 0) .%AI8_EndPluginObject%AI5_End_NonPrinting--%AI5_BeginPalette0 0 Pb1 1 1 1 ([Registration]) 0 Xs([Registration])Pc0 0 0 0 k(White)Pc0 0 0 1 k(Black)Pc0 1 1 0 k(CMYK Red)Pc0 0 1 0 k(CMYK Yellow)Pc1 0 1 0 k(CMYK Green)Pc1 0 0 0 k(CMYK Cyan)Pc1 1 0 0 k(CMYK Blue)Pc0 1 0 0 k(CMYK Magenta)Pc0.15 1 0.9 0.1 k(C=15 M=100 Y=90 K=10)Pc0 0.9 0.85 0 k(C=0 M=90 Y=85 K=0)Pc0 0.8 0.95 0 k(C=0 M=80 Y=95 K=0)Pc0 0.5 1 0 k(C=0 M=50 Y=100 K=0)Pc0 0.35 0.85 0 k(C=0 M=35 Y=85 K=0)Pc0.05 0 0.9 0 k(C=5 M=0 Y=90 K=0)Pc0.2 0 1 0 k(C=20 M=0 Y=100 K=0)Pc0.5 0 1 0 k(C=50 M=0 Y=100 K=0)Pc0.75 0 1 0 k(C=75 M=0 Y=100 K=0)Pc0.85 0.1 1 0.1 k(C=85 M=10 Y=100 K=10)Pc0.9 0.3 0.95 0.3 k(C=90 M=30 Y=95 K=30)Pc0.75 0 0.75 0 k(C=75 M=0 Y=75 K=0)Pc0.8 0.1 0.45 0 k(C=80 M=10 Y=45 K=0)Pc0.7 0.15 0 0 k(C=70 M=15 Y=0 K=0)Pc0.85 0.5 0 0 k(C=85 M=50 Y=0 K=0)Pc1 0.95 0.05 0 k(C=100 M=95 Y=5 K=0)Pc1 1 0.25 0.25 k(C=100 M=100 Y=25 K=25)Pc0.75 1 0 0 k(C=75 M=100 Y=0 K=0)Pc0.5 1 0 0 k(C=50 M=100 Y=0 K=0)Pc0.35 1 0.35 0.1 k(C=35 M=100 Y=35 K=10)Pc0.1 1 0.5 0 k(C=10 M=100 Y=50 K=0)Pc0 0.95 0.2 0 k(C=0 M=95 Y=20 K=0)Pc0.25 0.25 0.4 0 k(C=25 M=25 Y=40 K=0)Pc0.4 0.45 0.5 0.05 k(C=40 M=45 Y=50 K=5)Pc0.5 0.5 0.6 0.25 k(C=50 M=50 Y=60 K=25)Pc0.55 0.6 0.65 0.4 k(C=55 M=60 Y=65 K=40)Pc0.25 0.4 0.65 0 k(C=25 M=40 Y=65 K=0)Pc0.3 0.5 0.75 0.1 k(C=30 M=50 Y=75 K=10)Pc0.35 0.6 0.8 0.25 k(C=35 M=60 Y=80 K=25)Pc0.4 0.65 0.9 0.35 k(C=40 M=65 Y=90 K=35)Pc0.4 0.7 1 0.5 k(C=40 M=70 Y=100 K=50)Pc0.5 0.7 0.8 0.7 k(C=50 M=70 Y=80 K=70)PcBb2 (Linear Gradient) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Linear Gradient)PcBb2 (Fade to Black) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Fade to Black)PcBb0 0 0 0 Bh2 (Radial Gradient) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Radial Gradient)PcBb0 0 0 0 Bh2 (Soft Black Vignette) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Soft Black Vignette)PcBb2 (Desert Sunset) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Desert Sunset)PcBb0 0 0 0 Bh2 (Copper Radial) 0 0 0 1 1 0 0 1 0 0 Bg0 BB(Copper Radial)Pc(Fish Pattern) 0 0 1 1 0 0 0 0 0 [1 0 0 1 0 0] p(Fish Pattern)Pc0 0 0 1 k(C=0 M=0 Y=0 K=100)Pc0 0 0 0.899994 k(C=0 M=0 Y=0 K=90)Pc0 0 0 0.799988 k(C=0 M=0 Y=0 K=80)Pc0 0 0 0.699997 k(C=0 M=0 Y=0 K=70)Pc0 0 0 0.599991 k(C=0 M=0 Y=0 K=60)Pc0 0 0 0.5 k(C=0 M=0 Y=0 K=50)Pc0 0 0 0.399994 k(C=0 M=0 Y=0 K=40)Pc0 0 0 0.299988 k(C=0 M=0 Y=0 K=30)Pc0 0 0 0.199997 k(C=0 M=0 Y=0 K=20)Pc0 0 0 0.099991 k(C=0 M=0 Y=0 K=10)Pc0 0 0 0.049988 k(C=0 M=0 Y=0 K=5)Pc0 1 1 0 k(C=0 M=100 Y=100 K=0)Pc0 0.75 1 0 k(C=0 M=75 Y=100 K=0)Pc0 0.1 0.95 0 k(C=0 M=10 Y=95 K=0)Pc0.85 0.1 1 0 k(C=85 M=10 Y=100 K=0)Pc1 0.9 0 0 k(C=100 M=90 Y=0 K=0)Pc0.6 0.9 0.000031 0.000031 k(C=60 M=90 Y=0 K=0)PcPB%AI5_EndPalette%%EndSetup%AI5_BeginLayer1 1 1 1 0 0 1 0 79 128 255 0 50 Lb(Layer 1) Ln0 A1 Au0 A*u0 D0 O0 0 0 1 k0 J 0 j 1 w 4 M []0 d0 XR102.6172 -16.771 m102.5835 -17.2827 102.4849 -17.7817 102.3193 -18.2686 c102.1548 -18.7559 101.9233 -19.1899 101.6265 -19.5693 c101.1802 -20.1309 100.5815 -20.6094 99.8311 -21.0059 c99.0791 -21.4019 98.2085 -21.6001 97.2178 -21.6001 c96.2266 -21.6001 95.3433 -21.3979 94.5674 -20.9932 c93.791 -20.5889 93.1807 -20.1143 92.7344 -19.5693 c92.2554 -18.9585 91.9009 -18.2563 91.6699 -17.4644 c91.4385 -16.6714 91.3228 -15.8042 91.3228 -14.8638 c91.3228 -13.9224 91.4385 -13.0552 91.6699 -12.2632 c91.9009 -11.4702 92.2554 -10.7686 92.7344 -10.1577 c93.1807 -9.61328 93.791 -9.13867 94.5674 -8.7334 c95.3433 -8.3291 96.2266 -8.12646 97.2178 -8.12646 c98.2085 -8.12646 99.0791 -8.32471 99.8311 -8.72119 c100.5815 -9.11768 101.1802 -9.59619 101.6265 -10.1577 c101.9233 -10.5376 102.1548 -10.9712 102.3193 -11.458 c102.4849 -11.9453 102.5835 -12.4448 102.6172 -12.9561 c99.5703 -12.9561 L99.5537 -12.7251 99.5127 -12.5103 99.4473 -12.312 c99.3804 -12.1143 99.2979 -11.9331 99.1992 -11.7676 c99.0171 -11.4868 98.7612 -11.2559 98.4312 -11.0742 c98.1011 -10.8926 97.6968 -10.8013 97.2178 -10.8013 c96.7881 -10.8013 96.4204 -10.876 96.1157 -11.0244 c95.8096 -11.1729 95.5493 -11.3633 95.3354 -11.5942 c94.9551 -12.0068 94.7163 -12.5024 94.6172 -13.0796 c94.5176 -13.6582 94.4688 -14.2524 94.4688 -14.8638 c94.4688 -15.4746 94.5176 -16.0649 94.6172 -16.6348 c94.7163 -17.2041 94.9551 -17.6953 95.3354 -18.1079 c95.5493 -18.3394 95.8096 -18.5332 96.1157 -18.6899 c96.4204 -18.8472 96.7881 -18.9253 97.2178 -18.9253 c97.6968 -18.9253 98.1011 -18.835 98.4312 -18.6523 c98.7612 -18.4712 99.0171 -18.2402 99.1992 -17.9595 c99.2979 -17.7939 99.3804 -17.6123 99.4473 -17.4146 c99.5127 -17.2163 99.5537 -17.002 99.5703 -16.771 c102.6172 -16.771 Lf*U*u115.5205 -14.9873 m115.5039 -15.103 115.4956 -15.2104 115.4956 -15.3091 c115.4956 -15.854 L106.8765 -15.854 L106.8765 -16.3491 106.9551 -16.8203 107.1123 -17.2656 c107.2686 -17.7119 107.5044 -18.083 107.8179 -18.3804 c108.0488 -18.5952 108.3169 -18.7813 108.623 -18.9375 c108.9282 -19.0947 109.2954 -19.1729 109.7251 -19.1729 c110.1709 -19.1729 110.5386 -19.1274 110.8271 -19.0371 c111.1157 -18.9463 111.3755 -18.7852 111.6074 -18.5537 c111.9048 -18.2563 112.1104 -17.8936 112.2266 -17.4644 c115.1987 -17.4644 L115.165 -17.8442 115.0376 -18.2607 114.8149 -18.7148 c114.5918 -19.1689 114.3564 -19.5449 114.1089 -19.8413 c113.564 -20.4854 112.9116 -20.9482 112.1523 -21.2285 c111.3926 -21.5093 110.5996 -21.6499 109.7749 -21.6499 c108.8833 -21.6499 108.1113 -21.5049 107.459 -21.2163 c106.8062 -20.9277 106.2246 -20.5435 105.7129 -20.0649 c105.0688 -19.4375 104.5776 -18.6865 104.2388 -17.811 c103.9004 -16.936 103.731 -15.9697 103.731 -14.9126 c103.731 -13.8726 103.8838 -12.9106 104.1899 -12.0273 c104.4946 -11.144 104.9614 -10.3887 105.5889 -9.76123 c106.0674 -9.26563 106.6494 -8.86963 107.3354 -8.57227 c108.02 -8.27539 108.8081 -8.12646 109.7002 -8.12646 c110.6582 -8.12646 111.5498 -8.3208 112.3755 -8.7085 c113.2007 -9.09717 113.8774 -9.69531 114.4063 -10.5044 c114.8848 -11.2144 115.1904 -11.937 115.3228 -12.6714 c115.4551 -13.4063 115.5205 -14.1782 115.5205 -14.9873 cf1 D112.4248 -13.6001 m112.4087 -12.6592 112.144 -11.9082 111.6323 -11.3462 c111.4175 -11.1152 111.1494 -10.9336 110.8271 -10.8013 c110.5054 -10.6699 110.1216 -10.603 109.6753 -10.603 c109.1963 -10.603 108.7754 -10.6943 108.4121 -10.876 c108.0488 -11.0576 107.752 -11.2969 107.5205 -11.5942 c107.2891 -11.875 107.1245 -12.1724 107.0254 -12.4858 c106.9263 -12.7993 106.8687 -13.1709 106.8521 -13.6001 c112.4248 -13.6001 Lf*U*u0 D125.5518 -21.3281 m125.5518 -13.4268 L125.5518 -12.6675 125.4028 -12.0732 125.106 -11.6436 c124.8086 -11.2144 124.2471 -10.9995 123.4219 -10.9995 c122.8765 -10.9995 122.4224 -11.1523 122.0596 -11.458 c121.6963 -11.7637 121.4067 -12.1553 121.1924 -12.6343 c120.9775 -13.1133 120.8535 -13.6704 120.8208 -14.3062 c120.7876 -14.9419 120.7715 -15.5317 120.7715 -16.0771 c120.7715 -21.3281 L117.6753 -21.3281 L117.6753 -8.44873 L120.2764 -8.44873 L120.499 -10.1074 L120.8784 -9.43066 121.4189 -8.93164 122.1216 -8.60986 c122.8232 -8.2876 123.5459 -8.12646 124.2886 -8.12646 c124.9819 -8.12646 125.5972 -8.24219 126.1338 -8.47363 c126.6699 -8.70459 127.1245 -9.02246 127.4961 -9.42676 c127.8677 -9.83203 128.1523 -10.3188 128.3501 -10.8882 c128.5483 -11.458 128.6475 -12.0732 128.6475 -12.7334 c128.6475 -21.3281 l125.5518 -21.3281 Lf*U*u138.8516 -21.1543 m137.9595 -21.3853 137.0762 -21.501 136.2012 -21.501 c134.897 -21.501 133.9224 -21.1504 133.2788 -20.4487 c132.6348 -19.7471 132.3135 -18.7764 132.3135 -17.5386 c132.3135 -10.9995 L129.96 -10.9995 L129.96 -8.44873 L132.3135 -8.44873 L132.3135 -5.1792 L135.4087 -4.41162 L135.4087 -8.44873 L138.6538 -8.44873 L138.6538 -10.9995 L135.4087 -10.9995 L135.4087 -17.2656 L135.4087 -17.7607 135.5244 -18.1201 135.7559 -18.3438 c135.9868 -18.5664 136.3501 -18.6777 136.8457 -18.6777 c137.1758 -18.6777 137.4849 -18.6699 137.7744 -18.6523 c138.063 -18.6367 138.4224 -18.6035 138.8516 -18.5537 c138.8516 -21.1543 Lf*U*u151.3843 -14.9873 m151.3682 -15.103 151.3599 -15.2104 151.3599 -15.3091 c151.3599 -15.854 L142.7402 -15.854 L142.7402 -16.3491 142.8179 -16.8203 142.9756 -17.2656 c143.1323 -17.7119 143.3677 -18.083 143.6807 -18.3804 c143.9121 -18.5952 144.1807 -18.7813 144.4858 -18.9375 c144.792 -19.0947 145.1597 -19.1729 145.5884 -19.1729 c146.0347 -19.1729 146.4014 -19.1274 146.6909 -19.0371 c146.9795 -18.9463 147.2397 -18.7852 147.4712 -18.5537 c147.7676 -18.2563 147.9746 -17.8936 148.0903 -17.4644 c151.062 -17.4644 L151.0293 -17.8442 150.9014 -18.2607 150.6782 -18.7148 c150.4561 -19.1689 150.2207 -19.5449 149.9727 -19.8413 c149.4282 -20.4854 148.7754 -20.9482 148.0156 -21.2285 c147.2559 -21.5093 146.4639 -21.6499 145.6387 -21.6499 c144.7471 -21.6499 143.9741 -21.5049 143.3223 -21.2163 c142.6694 -20.9277 142.0879 -20.5435 141.5757 -20.0649 c140.9321 -19.4375 140.4404 -18.6865 140.1021 -17.811 c139.7637 -16.936 139.5942 -15.9697 139.5942 -14.9126 c139.5942 -13.8726 139.7471 -12.9106 140.0527 -12.0273 c140.3584 -11.144 140.8242 -10.3887 141.4526 -9.76123 c141.9307 -9.26563 142.5132 -8.86963 143.1982 -8.57227 c143.8828 -8.27539 144.6724 -8.12646 145.564 -8.12646 c146.521 -8.12646 147.4126 -8.3208 148.2388 -8.7085 c149.0645 -9.09717 149.7412 -9.69531 150.2695 -10.5044 c150.749 -11.2144 151.0537 -11.937 151.1855 -12.6714 c151.3179 -13.4063 151.3843 -14.1782 151.3843 -14.9873 cf1 D148.2891 -13.6001 m148.2715 -12.6592 148.0073 -11.9082 147.4956 -11.3462 c147.2803 -11.1152 147.0122 -10.9336 146.6909 -10.8013 c146.3687 -10.6699 145.9849 -10.603 145.5396 -10.603 c145.0601 -10.603 144.6387 -10.6943 144.2754 -10.876 c143.9121 -11.0576 143.6147 -11.2969 143.3843 -11.5942 c143.1528 -11.875 142.9878 -12.1724 142.8887 -12.4858 c142.7896 -12.7993 142.7314 -13.1709 142.7148 -13.6001 c148.2891 -13.6001 Lf*U*u0 D161.0435 -11.3218 m160.6636 -11.2393 160.3086 -11.1982 159.979 -11.1982 c158.8887 -11.1982 158.0625 -11.5444 157.5015 -12.2383 c156.9409 -12.9312 156.6602 -13.7988 156.6602 -14.8384 c156.6602 -21.3281 L153.5391 -21.3281 L153.5391 -8.44873 L156.165 -8.44873 L156.437 -10.3804 L156.7339 -9.6377 157.2251 -9.10107 157.9102 -8.77051 c158.5962 -8.44043 159.3179 -8.27539 160.0781 -8.27539 c160.3916 -8.27539 160.7129 -8.2998 161.0435 -8.34961 c161.0435 -11.3218 Lf*UU1 Au0 A1 0 0 0 k1.44287 -11.3867 m1.22803 -11.1553 0.959473 -10.9736 0.638184 -10.8408 c0.448242 -10.7632 0.231445 -10.7153 0 -10.6841 C0 -13.6406 L2.23682 -13.6406 L2.21924 -12.6997 1.95508 -11.9482 1.44287 -11.3867 cf83.4346 -11.6338 m83.2031 -11.9155 83.0386 -12.2124 82.9395 -12.5259 c82.8408 -12.8398 82.7827 -13.2119 82.7661 -13.6406 C85.0396 -13.6406 L85.0396 -10.6909 L84.7822 -10.7358 84.5425 -10.8081 84.3267 -10.916 c83.9634 -11.0972 83.666 -11.3364 83.4346 -11.6338 cf47.3696 -10.8408 m47.0483 -10.7095 46.6646 -10.6426 46.2178 -10.6426 c45.7388 -10.6426 45.3174 -10.7339 44.9541 -10.916 c44.5908 -11.0972 44.2935 -11.3364 44.062 -11.6338 c43.8306 -11.9155 43.6655 -12.2124 43.5664 -12.5259 c43.4683 -12.8398 43.4102 -13.2119 43.3936 -13.6406 C48.9688 -13.6406 L48.9521 -12.6997 48.6875 -11.9482 48.1758 -11.3867 c47.9609 -11.1553 47.6929 -10.9736 47.3696 -10.8408 cf*u1 D81.6265 -20.1084 m80.9819 -19.481 80.4902 -18.73 80.1514 -17.8535 c79.814 -16.9785 79.6436 -16.0117 79.6436 -14.9541 c79.6436 -13.9131 79.7964 -12.9517 80.1025 -12.0679 c80.4072 -11.1841 80.8745 -10.4282 81.502 -9.80029 c81.9814 -9.30518 82.563 -8.9082 83.2495 -8.61133 c83.7827 -8.37939 84.3809 -8.24072 85.0396 -8.18945 C85.0396 0 L0 0 L0 -8.18994 L0.773438 -8.24561 1.50342 -8.42676 2.18652 -8.74707 c3.01318 -9.13574 3.68994 -9.73486 4.21875 -10.5439 c4.69727 -11.2544 5.00293 -11.9771 5.13525 -12.7119 c5.26709 -13.4473 5.3335 -14.2197 5.3335 -15.0283 C5.31738 -15.144 5.30908 -15.252 5.30908 -15.3511 C5.30908 -15.8955 L0 -15.8955 L0 -19.1904 L0.23877 -19.1689 0.458984 -19.1362 0.638184 -19.0801 c0.927246 -18.9897 1.18701 -18.8286 1.41846 -18.5967 c1.71582 -18.2993 1.92236 -17.936 2.03809 -17.5073 C5.01123 -17.5073 L4.97852 -17.8867 4.8501 -18.3032 4.62695 -18.7578 c4.40479 -19.2124 4.16943 -19.5884 3.92139 -19.8853 c3.37646 -20.5298 2.72266 -20.9927 1.96338 -21.2729 c1.33252 -21.5059 0.677246 -21.6372 0 -21.6763 C0 -26.9302 L85.0396 -26.9302 L85.0396 -21.6665 L84.417 -21.6118 83.8623 -21.4766 83.373 -21.2603 c82.7202 -20.9717 82.1382 -20.5874 81.6265 -20.1084 cf0 D19.9902 -18.2749 m19.7168 -18.8696 19.3672 -19.3818 18.9365 -19.8115 c18.2603 -20.4883 17.4375 -20.9717 16.4717 -21.2603 c15.5049 -21.5493 14.4766 -21.6948 13.3862 -21.6948 c12.4448 -21.6948 11.5166 -21.5581 10.5986 -21.2852 c9.68213 -21.0132 8.86035 -20.5464 8.1333 -19.8853 c7.60498 -19.4067 7.16699 -18.8159 6.82031 -18.1133 c6.47363 -17.4116 6.29932 -16.6396 6.29932 -15.7969 C9.57031 -15.7969 L9.57031 -16.2271 9.65723 -16.6274 9.83057 -16.999 c10.0044 -17.3711 10.2222 -17.689 10.4883 -17.9521 c10.8672 -18.3325 11.3252 -18.5845 11.8623 -18.7085 c12.3989 -18.832 12.9243 -18.8945 13.4365 -18.8945 c14.0469 -18.8945 14.625 -18.8237 15.1714 -18.6836 c15.7158 -18.5435 16.1533 -18.2993 16.4839 -17.9521 c16.6816 -17.7383 16.8477 -17.5112 16.98 -17.271 c17.1123 -17.0317 17.1772 -16.6973 17.1772 -16.2681 c17.1772 -15.6235 16.9673 -15.1401 16.5454 -14.8179 c16.1245 -14.4961 15.6411 -14.2852 15.0967 -14.1865 c14.5015 -14.0708 13.8491 -13.9878 13.1382 -13.938 c12.4282 -13.8887 11.7847 -13.814 11.2056 -13.7158 c10.5947 -13.6162 10.021 -13.4429 9.48438 -13.1953 c8.94678 -12.9478 8.47656 -12.6216 8.0708 -12.2163 c7.6665 -11.812 7.34424 -11.3242 7.10498 -10.7544 c6.86572 -10.1846 6.74609 -9.53613 6.74609 -8.80957 c6.74609 -8.11523 6.88574 -7.47998 7.16699 -6.90137 c7.44727 -6.32275 7.81885 -5.80273 8.28223 -5.34082 c8.86035 -4.76172 9.60303 -4.30859 10.5127 -3.97705 c11.4204 -3.64697 12.3955 -3.48193 13.4365 -3.48193 c14.3774 -3.48193 15.2817 -3.62646 16.1494 -3.91553 c17.0171 -4.20459 17.7476 -4.62988 18.3428 -5.19189 c18.8711 -5.6875 19.2964 -6.24854 19.6191 -6.87695 c19.9404 -7.50439 20.1094 -8.18945 20.1265 -8.93311 C16.8555 -8.93311 L16.8394 -8.62012 16.7603 -8.30957 16.6201 -8.00439 c16.48 -7.69873 16.3018 -7.43018 16.0879 -7.19824 c15.8057 -6.90137 15.4097 -6.66992 14.8979 -6.50537 c14.3857 -6.34033 13.8901 -6.25684 13.4116 -6.25684 c12.916 -6.25684 12.4077 -6.32275 11.8882 -6.45557 c11.3672 -6.58789 10.9253 -6.84424 10.5615 -7.22363 c10.3789 -7.42139 10.2349 -7.63672 10.1284 -7.86768 c10.021 -8.09961 9.96631 -8.37988 9.96631 -8.70996 c9.96631 -9.28857 10.1323 -9.73047 10.4624 -10.0361 c10.793 -10.3418 11.2222 -10.5356 11.7515 -10.6177 c12.313 -10.7007 12.9448 -10.7749 13.647 -10.8408 c14.3486 -10.9077 14.9888 -10.9814 15.5674 -11.0645 c16.228 -11.1636 16.8516 -11.3408 17.4375 -11.5967 c18.0239 -11.853 18.5366 -12.1919 18.9746 -12.6128 c19.4121 -13.0342 19.7588 -13.542 20.0151 -14.1367 c20.2715 -14.7314 20.3994 -15.4004 20.3994 -16.144 c20.3994 -16.9702 20.2632 -17.6802 19.9902 -18.2749 cf24.8091 -16.6763 m24.9082 -17.2466 25.1479 -17.7383 25.5278 -18.1509 c25.7417 -18.3823 26.0034 -18.5762 26.3081 -18.7334 c26.6133 -18.8906 26.9814 -18.9683 27.4111 -18.9683 c27.8901 -18.9683 28.2949 -18.8784 28.625 -18.6963 c28.9556 -18.5151 29.2119 -18.2827 29.394 -18.0029 C29.4922 -17.8374 29.5752 -17.6558 29.6416 -17.4565 c29.707 -17.2593 29.748 -17.0439 29.7646 -16.8125 C32.8135 -16.8125 L32.7793 -17.3257 32.6802 -17.8252 32.5156 -18.3115 c32.3506 -18.7993 32.1187 -19.2329 31.8223 -19.6128 c31.3755 -20.1748 30.7764 -20.6538 30.0254 -21.0503 c29.2729 -21.4463 28.4023 -21.645 27.4111 -21.645 c26.4199 -21.645 25.5356 -21.4424 24.7598 -21.0376 c23.9839 -20.6333 23.3721 -20.1582 22.9258 -19.6128 c22.4458 -19.002 22.0918 -18.2993 21.8604 -17.5073 c21.6289 -16.7139 21.5137 -15.8462 21.5137 -14.9048 c21.5137 -13.9634 21.6289 -13.0962 21.8604 -12.3037 c22.0918 -11.5103 22.4458 -10.8086 22.9258 -10.1968 c23.3721 -9.65186 23.9839 -9.17676 24.7598 -8.77246 c25.5356 -8.36768 26.4199 -8.16504 27.4111 -8.16504 c28.4023 -8.16504 29.2729 -8.36279 30.0254 -8.76025 c30.7764 -9.15625 31.3755 -9.63623 31.8223 -10.1968 c32.1187 -10.5767 32.3506 -11.0112 32.5156 -11.4971 c32.6802 -11.9854 32.7793 -12.4849 32.8135 -12.9971 C29.7646 -12.9971 L29.748 -12.7656 29.707 -12.5508 29.6416 -12.3525 c29.5752 -12.1548 29.4922 -11.9731 29.394 -11.8081 C29.2119 -11.5269 28.9556 -11.2959 28.625 -11.1133 c28.2949 -10.9321 27.8901 -10.8408 27.4111 -10.8408 c26.9814 -10.8408 26.6133 -10.916 26.3081 -11.0645 c26.0034 -11.2129 25.7417 -11.4033 25.5278 -11.6338 c25.1479 -12.0474 24.9082 -12.543 24.8091 -13.1206 c24.7109 -13.6992 24.6606 -14.2939 24.6606 -14.9048 c24.6606 -15.5161 24.7109 -16.1069 24.8091 -16.6763 cf38.0171 -21.3716 m34.8701 -21.3716 L34.8701 -8.48682 L38.0171 -8.48682 L38.0171 -21.3716 Lf38.0903 -6.70313 m34.7705 -6.70313 L34.7705 -3.50635 L38.0903 -3.50635 L38.0903 -6.70313 Lf52.0405 -15.3511 m52.0405 -15.8955 L43.418 -15.8955 L43.418 -16.3916 43.4971 -16.8628 43.6533 -17.3081 c43.8101 -17.7549 44.0459 -18.126 44.3599 -18.4233 c44.5908 -18.6387 44.8589 -18.8237 45.165 -18.9805 c45.4702 -19.1382 45.8379 -19.2158 46.2681 -19.2158 c46.7139 -19.2158 47.0811 -19.1709 47.3696 -19.0801 c47.6587 -18.9897 47.9189 -18.8286 48.1514 -18.5967 c48.4482 -18.2993 48.6543 -17.936 48.77 -17.5073 C51.7437 -17.5073 L51.71 -17.8867 51.583 -18.3032 51.3599 -18.7578 c51.1367 -19.2124 50.9009 -19.5884 50.6533 -19.8853 c50.1084 -20.5298 49.4561 -20.9927 48.6958 -21.2729 c47.9365 -21.5537 47.1426 -21.6948 46.3169 -21.6948 c45.4248 -21.6948 44.6533 -21.5493 44.0005 -21.2603 c43.3477 -20.9717 42.7656 -20.5874 42.2534 -20.1084 c41.6094 -19.481 41.1182 -18.73 40.7788 -17.8535 c40.4409 -16.9785 40.271 -16.0117 40.271 -14.9541 c40.271 -13.9131 40.4233 -12.9517 40.7295 -12.0679 c41.0347 -11.1841 41.502 -10.4282 42.1294 -9.80029 c42.6089 -9.30518 43.1904 -8.9082 43.877 -8.61133 c44.562 -8.31348 45.3501 -8.16504 46.2422 -8.16504 c47.2007 -8.16504 48.0928 -8.35938 48.9194 -8.74707 c49.7446 -9.13574 50.4219 -9.73486 50.9507 -10.5439 c51.4297 -11.2544 51.7354 -11.9771 51.8677 -12.7119 c51.9995 -13.4473 52.0659 -14.2197 52.0659 -15.0283 C52.0493 -15.144 52.0405 -15.252 52.0405 -15.3511 Cf65.1987 -21.3716 m62.1006 -21.3716 L62.1006 -13.4683 L62.1006 -12.7075 61.9521 -12.1138 61.6548 -11.6836 c61.3569 -11.2544 60.7954 -11.04 59.9707 -11.04 c59.4243 -11.04 58.9702 -11.1924 58.6069 -11.4971 c58.2437 -11.8032 57.9541 -12.1958 57.7402 -12.6743 c57.5254 -13.1543 57.4009 -13.7114 57.3682 -14.3477 c57.3345 -14.9834 57.3188 -15.5742 57.3188 -16.1191 C57.3188 -21.3716 L54.2212 -21.3716 L54.2212 -8.48682 L56.8237 -8.48682 L57.0459 -10.147 L57.4253 -9.47021 57.9663 -8.97021 58.6689 -8.64844 c59.3711 -8.32568 60.0942 -8.16504 60.8374 -8.16504 c61.5313 -8.16504 62.147 -8.28076 62.6831 -8.51221 c63.2202 -8.74365 63.6748 -9.06104 64.0464 -9.46533 c64.4185 -9.87158 64.7026 -10.3579 64.9004 -10.9282 c65.0991 -11.4971 65.1987 -12.1138 65.1987 -12.7729 C65.1987 -21.3716 Lf70.5259 -16.6763 m70.624 -17.2466 70.8643 -17.7383 71.2437 -18.1509 c71.459 -18.3823 71.7188 -18.5762 72.0244 -18.7334 c72.3306 -18.8906 72.6978 -18.9683 73.1274 -18.9683 c73.6064 -18.9683 74.0112 -18.8784 74.3418 -18.6963 c74.6714 -18.5151 74.9272 -18.2827 75.1104 -18.0029 C75.2095 -17.8374 75.291 -17.6558 75.3579 -17.4565 c75.4233 -17.2593 75.4644 -17.0439 75.4814 -16.8125 C78.5293 -16.8125 L78.4956 -17.3257 78.3975 -17.8252 78.231 -18.3115 c78.0664 -18.7993 77.835 -19.2329 77.5381 -19.6128 c77.0913 -20.1748 76.4937 -20.6538 75.7417 -21.0503 c74.9897 -21.4463 74.1187 -21.645 73.1274 -21.645 c72.1357 -21.645 71.252 -21.4424 70.4756 -21.0376 c69.6997 -20.6333 69.0879 -20.1582 68.6426 -19.6128 c68.1631 -19.002 67.8081 -18.2993 67.5767 -17.5073 c67.3447 -16.7139 67.23 -15.8462 67.23 -14.9048 c67.23 -13.9634 67.3447 -13.0962 67.5767 -12.3037 c67.8081 -11.5103 68.1631 -10.8086 68.6426 -10.1968 c69.0879 -9.65186 69.6997 -9.17676 70.4756 -8.77246 c71.252 -8.36768 72.1357 -8.16504 73.1274 -8.16504 c74.1187 -8.16504 74.9897 -8.36279 75.7417 -8.76025 c76.4937 -9.15625 77.0913 -9.63623 77.5381 -10.1968 c77.835 -10.5767 78.0664 -11.0112 78.231 -11.4971 c78.3975 -11.9854 78.4956 -12.4849 78.5293 -12.9971 C75.4814 -12.9971 L75.4644 -12.7656 75.4233 -12.5508 75.3579 -12.3525 c75.291 -12.1548 75.2095 -11.9731 75.1104 -11.8081 C74.9272 -11.5269 74.6714 -11.2959 74.3418 -11.1133 c74.0112 -10.9321 73.6064 -10.8408 73.1274 -10.8408 c72.6978 -10.8408 72.3306 -10.916 72.0244 -11.0645 c71.7188 -11.2129 71.459 -11.4033 71.2437 -11.6338 c70.8643 -12.0474 70.624 -12.543 70.5259 -13.1206 c70.4268 -13.6992 70.3765 -14.2939 70.3765 -14.9048 c70.3765 -15.5161 70.4268 -16.1069 70.5259 -16.6763 cf*U83.0264 -17.3081 m83.1826 -17.7549 83.4185 -18.126 83.7324 -18.4233 c83.9634 -18.6387 84.2314 -18.8237 84.5376 -18.9805 c84.689 -19.0586 84.8569 -19.1172 85.0396 -19.1567 C85.0396 -15.8955 L82.791 -15.8955 L82.791 -16.3916 82.8696 -16.8628 83.0264 -17.3081 cfU0 7812.5181 m0 -8570.4814 L(N) *-7836.9448 0 m8546.0537 0 L(N) *85.0396 7812.5181 m85.0396 -8570.4814 L(N) *-7836.9448 -26.9292 m8546.0537 -26.9292 L(N) *-7836.9448 4.25195 m8546.0537 4.25195 L(N) *LB%AI5_EndLayer--%%PageTrailergsave annotatepage grestore showpage%%TrailerAdobe_Illustrator_AI5 /terminate get exec
Adobe_shading_AI8 /terminate get exec
Adobe_ColorImage_AI6 /terminate get exec
Adobe_pattern_AI5 /terminate get exec
AGM_Gradient /terminate get exec
Adobe_cshow /terminate get exec
Adobe_level2_AI5 /terminate get exec
%%EOF